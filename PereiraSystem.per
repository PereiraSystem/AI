;PEREIRA SYSTEM AI - AGE OF EMPIRES II DEFINITIVE - (LORDS OF THE WEST) by LordBoniato

; 1. Constants and timers --------------
; 2. Strategic numbers
; 3. Researching
; 4. Building
; 5. Creating units
; 6. Trade
; 7. Detect things 

; 1. CONSTANTS AND TIMERS -----------------

(defconst gl-max-lumber-camps-qty 1)
(defconst gl-max-mining-camps-qty 2)

(defconst gl-minimumWoodForTC 10)
(defconst gl-minimumWoodForLC 11)

(defconst gl-dudeHasCavalry 50)
(defconst gl-dudeHasScouts 51)
(defconst gl-dudeHasKnights 52)
(defconst gl-dudeHasCamels 53)
(defconst gl-dudeHasElephants 54)
(defconst gl-dudeHasArchers 55)
(defconst gl-dudeHasSkirmishers 56)
(defconst gl-dudeHasSpearmen 57)
(defconst gl-dudeHasMilitia 58)
(defconst gl-dudeHasCavalryArchers 59)
(defconst gl-dudeHasSiegeWeapons 60)

(defconst gl-maximumSoldiersFeudal 80)
(defconst gl-totalSoldiersCreatedThisAge 89)
(defconst gl-nonUpgradedUniqueUnitsCreated 90)

(defconst gl-weMovedPlace 99)

(defconst gl-maxHousesBeforeDeleting 101)    
(defconst gl-maxHousesNeeded 102)
(defconst gl-farmQtyImperial 103)

; civilian units constants
(defconst gl-maxCiviliansDarkAge 104)
(defconst gl-maxCiviliansFeudalAge 105)
(defconst gl-maxCiviliansCastleAge 106)
(defconst gl-maxCiviliansImperialAge 107)

(defconst gl-tradeCartsQty 108)
(defconst gl-tradeShipsQty 109)

; infantry constants
(defconst gl-spearmenQtyLow 120)
(defconst gl-spearmenQtyMedium 121)
(defconst gl-spearmenQtyHigh 122)

(defconst gl-militiaQtyLow 155)
(defconst gl-militiaQtyMedium 156)
(defconst gl-militiaQtyHigh 157)

(defconst gl-eagleQtyLow 160)
(defconst gl-eagleQtyMedium 161)
(defconst gl-eagleQtyHigh 162)

; ranged constants
(defconst gl-archerQtyLow 200)
(defconst gl-archerQtyMedium 201)
(defconst gl-archerQtyHigh 202)

(defconst gl-skirmisherQtyLow 210)
(defconst gl-skirmisherQtyMedium 211)

(defconst gl-cavalryArcherQtyLow 220)
(defconst gl-cavalryArcherQtyMedium 221)
(defconst gl-cavalryArcherQty 223)
(defconst gl-cavalryArcherQtyHigh 223)

(defconst gl-handCannoneerQty 225)

; cavalry constants
(defconst gl-knightsQtyLow 130)
(defconst gl-knightsQtyMedium 131)

(defconst gl-scoutsQtyLow 135)
(defconst gl-scoutsQtyMedium 136)

(defconst gl-camelQtyLow 140)
(defconst gl-camelQtyMedium 141)
(defconst gl-camelQtyHigh 142)


(defconst gl-battleElephantQtyLow 180)
(defconst gl-battleElephantQtyMedium 181)
(defconst gl-battleElephantQtyHigh 182)
; priest constants
(defconst gl-monkQtyLow 390)
(defconst gl-monkQtyMedium 391)
(defconst gl-monkQtyHigh 392)
; siege constants
(defconst gl-ramQtyLow 400)
(defconst gl-ramQtyMedium 401)
(defconst gl-ramQtyHigh 402)

(defconst gl-scorpionQty 405)

(defconst gl-mangonelQtyLow 410)
(defconst gl-mangonelQtyMedium 411)

(defconst gl-bombardCannonsQty 415)



(defconst gl-trebuchetsQtyLow 420)
(defconst gl-trebuchetsQtyMedium 421)
(defconst gl-trebuchetsQtyHigh 422)

; unique units constants
(defconst gl-uniqueUnitQtyLow 430)
(defconst gl-uniqueUnitQtyMedium 431)

(defconst gl-galleyQty 450)
(defconst gl-galleonQty 455)
(defconst gl-fireshipQty 460)
(defconst gl-demolitionShipQty 465)
(defconst gl-specialShipQty 470)

#load-if-defined POPULATION-CAP-150
(defrule
    (true)
=>
    (set-goal gl-maxHousesBeforeDeleting 21)    
    (set-goal gl-maxHousesNeeded 30)
    (set-goal gl-farmQtyImperial 20)

    (set-goal gl-maxCiviliansDarkAge 16)
    (set-goal gl-maxCiviliansFeudalAge 18)
    (set-goal gl-maxCiviliansCastleAge 53)
    (set-goal gl-maxCiviliansImperialAge 85)

    (set-goal gl-tradeCartsQty 14)
    (set-goal gl-tradeShipsQty 20)
)

(defrule
    (true)
=>
    (set-goal gl-spearmenQtyLow 5)
    (set-goal gl-spearmenQtyMedium 35)
    (set-goal gl-spearmenQtyHigh 60)

    (set-goal gl-militiaQtyLow 8)
    (set-goal gl-militiaQtyMedium 20)
    (set-goal gl-militiaQtyHigh 60)

    (set-goal gl-eagleQtyLow 8)
    (set-goal gl-eagleQtyMedium 16)
    (set-goal gl-eagleQtyHigh 40)

    (set-goal gl-archerQtyLow 8)
    (set-goal gl-archerQtyMedium 16)
    (set-goal gl-archerQtyHigh 40)

    (set-goal gl-skirmisherQtyLow 8)    
    (set-goal gl-skirmisherQtyMedium 30)

    (set-goal gl-cavalryArcherQtyLow 12)
    (set-goal gl-cavalryArcherQtyMedium 18)
    (set-goal gl-cavalryArcherQtyHigh 40)

    (set-goal gl-handCannoneerQty 30)

    (set-goal gl-knightsQtyLow 4)
    (set-goal gl-knightsQtyMedium 9)
    (set-goal gl-scoutsQtyLow 8)
    (set-goal gl-scoutsQtyMedium 40)
    (set-goal gl-camelQtyLow 5)
    (set-goal gl-camelQtyMedium 15)
    (set-goal gl-camelQtyHigh 28)        
)

(defrule
    (true)
=>
    (set-goal gl-monkQtyLow 5)
    (set-goal gl-monkQtyMedium 8)
    (set-goal gl-monkQtyHigh 16)

    (set-goal gl-ramQtyLow 2)
    (set-goal gl-ramQtyMedium 6)
    (set-goal gl-ramQtyHigh 16)

    (set-goal gl-scorpionQty 4)

    (set-goal gl-mangonelQtyLow 3)
    (set-goal gl-mangonelQtyMedium 9)

    (set-goal gl-bombardCannonsQty 8)

    (set-goal gl-uniqueUnitQtyLow 10)
    (set-goal gl-uniqueUnitQtyMedium 20)

    (set-goal gl-trebuchetsQtyLow 4)
    (set-goal gl-trebuchetsQtyMedium 8)    
    (set-goal gl-trebuchetsQtyHigh 12)
)

(defrule
    (true)
=>
    (set-goal gl-galleyQty 20)
    (set-goal gl-galleonQty 20)
    (set-goal gl-fireshipQty 20)
    (set-goal gl-demolitionShipQty 20)
    (set-goal gl-specialShipQty 20)
)

#end-if

#load-if-defined POPULATION-CAP-25

#end-if

#load-if-defined POPULATION-CAP-50

#end-if

#load-if-defined POPULATION-CAP-75

#end-if

#load-if-defined POPULATION-CAP-100

#end-if

#load-if-defined POPULATION-CAP-125

#end-if

#load-if-defined POPULATION-CAP-175

#end-if

#load-if-defined POPULATION-CAP-200

#end-if

#load-if-defined POPULATION-CAP-250

#end-if

(defrule
    (true)
=>    
    (set-goal gl-max-lumber-camps-qty 3)
    (set-goal gl-max-mining-camps-qty 1)
    (set-goal gl-minimumWoodForTC 275)
    (set-goal gl-minimumWoodForLC 100)
    ;(up-chat-data-to-self "Lumber Camps Max Qty = %d" g: gl-max-lumber-camps-qty)
    ;(up-chat-data-to-self "Mining Camps Max Qty = %d" g: gl-max-mining-camps-qty)
    (disable-self)	    
)



(defrule
    (true)
=>    
    (set-goal gl-dudeHasCavalry 0)    
    (set-goal gl-dudeHasScouts 0)
    (set-goal gl-dudeHasKnights 0)
    (set-goal gl-dudeHasCamels 0)
    (set-goal gl-dudeHasElephants 0)
    (set-goal gl-dudeHasArchers 0)
    (set-goal gl-dudeHasCavalryArchers 0)
    (set-goal gl-dudeHasMilitia 0)        
    (set-goal gl-dudeHasSkirmishers 0)
    (set-goal gl-weMovedPlace 0)  
    (set-goal gl-maximumSoldiersFeudal 30)
    (set-goal gl-totalSoldiersCreatedThisAge 0)
    (set-goal gl-nonUpgradedUniqueUnitsCreated 0)              
    (disable-self)	    
)

(defrule
    (current-age == castle-age)
=>    
    (set-goal gl-totalSoldiersCreatedThisAge 0)          
    (disable-self)	    
)

(defconst gl-civPop 300)
(defrule
	(true)
=>
	(up-get-fact civilian-population 0 gl-civPop)
)

(defconst gl-buildCount 301)
(defrule
	(true)
=>
	(up-get-fact building-count 0 gl-buildCount)
)

(defconst gl-milPop 330)
(defrule
	(true)
=>
	(up-get-fact military-population 0 gl-milPop)
)

(defconst gl-enemyBuildingsInTown 331)
(defrule
	(true)
=>
	(up-get-fact enemy-buildings-in-town 0 gl-enemyBuildingsInTown)
)

(defconst gl-infantrySoldierAmount 332)
(defrule
	(true)
=>
	(up-get-fact soldier-count 0 gl-infantrySoldierAmount)
)

(defconst gl-attackSoldierAmount 333)
(defrule
	(true)
=>
	(up-get-fact attack-soldier-count 0 gl-attackSoldierAmount)
)

(defconst gl-defendSoldierAmount 334)
(defrule
	(true)
=>
	(up-get-fact defend-soldier-count 0 gl-defendSoldierAmount)
)

(defconst gl-warboatAmount 335)
(defrule
	(true)
=>
	(up-get-fact warboat-count 0 gl-warboatAmount)
)

(defconst gl-attackWarboatAmount 336)
(defrule
	(true)
=>
	(up-get-fact attack-warboat-count 0 gl-attackWarboatAmount)
)

(defconst gl-defendWarboatAmount 337)
(defrule
	(true)
=>
	(up-get-fact defend-warboat-count 0 gl-defendWarboatAmount)
)

; TIMER 1 INCREASES TOWN SIZE
(defrule(true)=>(enable-timer 1 720)(disable-self)) 
(defrule
	(timer-triggered 1)
=>
	(disable-timer 1)
    (enable-timer 1 120)    
    (up-modify-sn sn-maximum-town-size c:+ 1)
    (up-modify-sn sn-minimum-town-size c:+ 1)
    ;(up-chat-data-to-self "Town size max increased = %d" s: sn-maximum-town-size)
    ;(up-chat-data-to-self "Town size min increased = %d" s: sn-minimum-town-size)
)

; TIMER 2 INCREASES LUMBER CAMPS QUANTITY
(defrule(building-type-count lumber-camp > 0)=>(enable-timer 2 120)(disable-self))
(defrule
	(timer-triggered 2)
=>
	(disable-timer 2)
    (enable-timer 2 75)    
    (up-modify-goal gl-max-lumber-camps-qty c:+ 1) 
    ;(up-chat-data-to-self "Lumber camps max qty increased = %d" g: gl-max-lumber-camps-qty)
)


; TIMER 3 INCREASES LUMBER CAMPS DISTANCE FAST WHEN WE HAVE NONE
(defrule(true)=>(enable-timer 3 320)(disable-self))
(defrule
	(timer-triggered 3)
=>
	(disable-timer 3)
    (enable-timer 3 25)    
    (up-modify-sn sn-lumber-camp-max-distance c:+ 1) 
    ;(up-chat-data-to-self "NO LCs! - Lumber camps max distance increased = %d" s: sn-lumber-camp-max-distance)
)

(defrule
	(building-type-count-total lumber-camp > 0)
=>
	(disable-timer 3)
    (enable-timer 4 90)
    (disable-self)
)

; TIMER 4 INCREASES LUMBER CAMPS DISTANCE SLOWLY AFTER BUILDING ONE
(defrule
	(timer-triggered 4)
=>
	(disable-timer 4)
    (enable-timer 4 95)    
    (up-modify-sn sn-lumber-camp-max-distance c:+ 1) 
    ;(up-chat-data-to-self "Lumber camps max distance increased = %d" s: sn-lumber-camp-max-distance)
)

; TIMER 5 INCREASES MINING CAMPS QUANTITY
(defrule(building-type-count mining-camp > 0)=>(enable-timer 5 180)(disable-self)) 
(defrule
	(timer-triggered 5)
=>
	(disable-timer 5)
    (enable-timer 5 240)      
    (up-modify-goal gl-max-mining-camps-qty c:+ 1)    
    ;(up-chat-data-to-self "Mining camps max qty increased = %d" g: gl-max-mining-camps-qty)	
)

; TIMER 6 INCREASES MINING CAMPS DISTANCE (FAST THEN SLOWER)
(defrule(current-age == feudal-age)=>(enable-timer 6 60)(disable-self))
(defrule
	(timer-triggered 6)
=>
	(disable-timer 6)
    (enable-timer 6 70)    
    (up-modify-sn sn-mining-camp-max-distance c:+ 1) 
    ;(up-chat-data-to-self "Mining camps max distance increased = %d" s: sn-mining-camp-max-distance)
)

; TIMER 10 CIVILIAN / BUILDINGS REPORT
(defrule(true)=>(enable-timer 10 60)(disable-self)) 
(defrule
	(timer-triggered 10)
=>
	(disable-timer 10)
    (enable-timer 10 180)  
    ;(up-chat-data-to-self "Civilians: %d" g: gl-civPop)      
    ;(up-chat-data-to-self "Buildings: %d" g: gl-buildCount)
    ;(up-chat-data-to-self "Town Size: %d" s: sn-maximum-town-size)     
    ;(up-chat-data-to-self "Enemy B. In Town: %d" g: gl-enemyBuildingsInTown)          
)

; TIMER 11 MILITARY REPORT
(defrule(true)=>(enable-timer 11 90)(disable-self)) 

(defrule
	(timer-triggered 11)(current-age == dark-age)

=>
	(disable-timer 11)
    (enable-timer 11 90)           
    ;(up-chat-data-to-self "Military: %d" g: gl-milPop)  
    ;(up-chat-data-to-self "Land Units: %d" g: gl-infantrySoldierAmount)
    (up-chat-data-to-self "TownSize: %d" s: sn-maximum-town-size)     
    (up-chat-data-to-self "BuildingsInTown: %d" g: gl-enemyBuildingsInTown)     
    (up-chat-data-to-self "Def: %d" g: gl-defendSoldierAmount)      
    (up-chat-data-to-self "Atk: %d" g: gl-attackSoldierAmount)
)

(defrule
	(timer-triggered 11)(current-age == feudal-age)

=>
	(disable-timer 11)
    (enable-timer 11 60)           
    ;(up-chat-data-to-self "Military: %d" g: gl-milPop)  
    ;(up-chat-data-to-self "Land Units: %d" g: gl-infantrySoldierAmount)
    (up-chat-data-to-self "TownSize: %d" s: sn-maximum-town-size)
     (up-chat-data-to-self "BuildingsInTown: %d" g: gl-enemyBuildingsInTown)       
    (up-chat-data-to-self "Def. / Explore: %d" g: gl-defendSoldierAmount)      
    (up-chat-data-to-self "Attack: %d" g: gl-attackSoldierAmount)
    (up-chat-data-to-self "Inf / Cav created in feudal age: %d" g: gl-totalSoldiersCreatedThisAge)    
)

(defrule
	(timer-triggered 11)(current-age == castle-age)

=>
	(disable-timer 11)
    (enable-timer 11 45)           
    ;(up-chat-data-to-self "Military: %d" g: gl-milPop)  
    ;(up-chat-data-to-self "Land Units: %d" g: gl-infantrySoldierAmount)
    (up-chat-data-to-self "TownSize: %d" s: sn-maximum-town-size)
    (up-chat-data-to-self "BuildingsInTown: %d" g: gl-enemyBuildingsInTown)        
    (up-chat-data-to-self "Def. / Explore: %d" g: gl-defendSoldierAmount)      
    (up-chat-data-to-self "Attack: %d" g: gl-attackSoldierAmount)
    ;(up-chat-data-to-self "Inf / Cav created in castle age: %d" g: gl-totalSoldiersCreatedThisAge)    
)

(defrule
	(timer-triggered 11)(current-age == imperial-age)

=>
	(disable-timer 11)
    (enable-timer 11 30)           
    ;(up-chat-data-to-self "Military: %d" g: gl-milPop)  
    ;(up-chat-data-to-self "Land Units: %d" g: gl-infantrySoldierAmount)
    (up-chat-data-to-self "TownSize: %d" s: sn-maximum-town-size)
    (up-chat-data-to-self "BuildingsInTown: %d" g: gl-enemyBuildingsInTown)       
    (up-chat-data-to-self "Def. / Explore: %d" g: gl-defendSoldierAmount)      
    (up-chat-data-to-self "Attack: %d" g: gl-attackSoldierAmount)
    ;(up-chat-data-to-self "Inf / Cav created in imperial age: %d" g: gl-totalSoldiersCreatedThisAge)    
)

; TIMER 12 MILITARY REPORT 2 NAVAL
(defrule(building-type-count dock > 0)=>(enable-timer 11 120)(disable-self)) 
(defrule
	(timer-triggered 11)
=>
	(disable-timer 11)
    (enable-timer 11 120)           
    ;(up-chat-data-to-self "Military: %d" g: gl-milPop)
    ;(up-chat-data-to-self "Naval Units: %d" g: gl-warboatAmount)        
    ;(up-chat-data-to-self "Attack: %d" g: gl-attackWarboatAmount)              
    ;(up-chat-data-to-self "Defend / Explore: %d" g: gl-defendWarboatAmount)      
)

; TIMER 15 DELETES VILLAGERS
(defrule(true)=>(enable-timer 15 2400)(disable-self)) 
(defrule
	(timer-triggered 15)
    (current-age == imperial-age)(building-type-count town-center > 0)
    (civilian-population > 15)
=>
	(chat-local-to-self "DELETING IDLE VILLAGERS!")
	(disable-timer 15)
    (enable-timer 15 600)    
    (up-delete-idle-units idle-type-villager)
)

(defrule(true)=>(enable-timer 20 3600)(disable-self))

(defrule
    (timer-triggered 20)
    (current-age == imperial-age)(military-population >= 80)
=>
	(disable-timer 20)
    (enable-timer 20 2)
    (set-strategic-number sn-enemy-sighted-response-distance 255)    
    (attack-now)(set-strategic-number sn-number-attack-groups 1)
    (set-strategic-number sn-minimum-attack-group-size 80)
    (set-strategic-number sn-attack-group-gather-spacing 80)      
    (chat-to-player my-player-number "TIME HAS PASSED AND WE HAVE 80 DUDES, TIME TO ATTACK!")       
)

; ATTACK!!!

(defrule
    (current-age == feudal-age)
    (military-population >= 12)
    (or
        (or
            (or
                (unit-type-count militiaman-line > 9)
                (unit-type-count scout-cavalry-line > 9)
            )
            (or
                (unit-type-count archer-line > 9)
                (unit-type-count cavalry-archer-line > 9)
            ) 
        )
        (or
            (or
                (unit-type-count eagle-warrior-line > 9)
                (unit-type-count my-unique-unit-line > 9)
            )
            (or
                (unit-type-count battering-ram-line > 3)
                (unit-type-count trebuchet > 0)
            )
        )              
    )
    (building-type-count lumber-camp > 1)
=>
    (attack-now)
    (chat-to-player my-player-number "FEUDAL AGE ATTACK!")     
)


(defrule
    (food-amount > 5000)
    (gold-amount > 1700)
    (wood-amount > 5000)                
    (current-age == imperial-age)
=>
    (set-strategic-number sn-enemy-sighted-response-distance 255)    
    (attack-now)(set-strategic-number sn-number-attack-groups 1)
    (chat-to-player my-player-number "WE ARE RICH, TIME TO ATTACK!")    
)

(defrule
    (military-population > 109)
    (game-time > 3300)
=>
    (set-strategic-number sn-enemy-sighted-response-distance 255)    
    (attack-now)(set-strategic-number sn-number-attack-groups 1)
    (chat-to-player my-player-number "WE ARE TOO MANY HERE, TIME TO ATTACK!")    
)

; 2. STRATEGIC NUMBERS ==================
(defrule 
    (true)
=>  (set-strategic-number sn-do-not-scale-for-difficulty-level 1) (disable-self)
)


; EXPLORE 
(defrule 
    (true)
=>  
    (set-strategic-number sn-total-number-explorers 1) 
    (set-strategic-number sn-number-explore-groups 1)
    (set-strategic-number sn-blot-exploration-map 0)
    (disable-self)
)

; SCOUT STYLES
(defrule
	(true)
=>
	;(up-send-scout group-type-land-explore scout-center)
    ;(chat-to-player my-player-number "SCOUTING STYLE CENTER")     
	;(up-send-scout group-type-land-explore scout-opposite)
	(up-send-scout group-type-land-explore scout-corner)
    ;(chat-to-player my-player-number "SCOUTING STYLE CORNER")      
	;(up-send-scout group-type-land-explore scout-enemy)          
 	;(up-send-scout group-type-land-explore scout-border)
    ;(chat-to-player my-player-number "SCOUTING STYLE BORDER")     
	;(up-send-scout group-type-land-explore scout-mirror)
	;(up-send-scout group-type-land-explore scout-flank) 
    ;(chat-to-player my-player-number "SCOUTING STYLE FLANK")      
	(disable-self)
)

(defrule
    (game-time > 120)
=>
    ;(up-send-scout group-type-land-explore scout-flank) 
    ;(chat-to-player my-player-number "SCOUTING STYLE FLANK")        
    (disable-self)
)

(defrule
    (game-time > 150)
=>
    (up-send-scout group-type-land-explore scout-corner)
    ;(chat-to-player my-player-number "SCOUTING STYLE CORNER")          
    (disable-self)
)

(defrule
    (game-time > 180)
=>
    (up-send-scout group-type-land-explore scout-border)
    ;(chat-to-player my-player-number "SCOUTING STYLE BORDER")      
    (disable-self)
)

(defrule
    (game-time > 210)
=>
    (up-send-scout group-type-land-explore scout-flank)
    ;(chat-to-player my-player-number "SCOUTING STYLE FLANK")        
    (disable-self)
)

(defrule
    (game-time > 230)
=>
    (up-send-scout group-type-land-explore scout-corner)
    ;(chat-to-player my-player-number "SCOUTING STYLE CORNER")        
    (disable-self)
)

(defrule
    (game-time > 250)
=>
    (up-send-scout group-type-land-explore scout-center)
    ;(chat-to-player my-player-number "SCOUTING STYLE CENTER")        
    (disable-self)
)


; EXPLORE GROUPS

(defrule 
    (current-age == castle-age)(not(town-under-attack))
=>
    (set-strategic-number sn-total-number-explorers 3) 
    (set-strategic-number sn-number-explore-groups 3)
    (disable-self)
)

(defrule 
    (hold-relics)
=>
    (set-strategic-number sn-total-number-explorers 0) 
    (set-strategic-number sn-number-explore-groups 0)
    (disable-self)
)

; HUNT 
(defrule 
    (true)
=>
    (set-strategic-number sn-enable-boar-hunting 0)
    (set-strategic-number sn-minimum-boar-lure-group-size 3)
    (set-strategic-number sn-minimum-boar-hunt-group-size 6)
    (set-strategic-number sn-minimum-number-hunters 6)
    (disable-self)
)

(defrule 
    (unit-type-count-total villager > 7)
=>
    (set-strategic-number sn-enable-boar-hunting 1)
    (disable-self)
)

; BUILD 
(defrule
    (true)
=>
    (set-strategic-number sn-initial-exploration-required 1)
    (set-strategic-number sn-minimum-water-body-size-for-dock 3)
    (set-strategic-number sn-dock-avoidance-factor 1000)
    (set-strategic-number sn-dock-proximity-factor 10)
    (set-strategic-number sn-dock-placement-mode 1)
    (disable-self)
)

; EXTRA BUILDERS
(defrule
    (true)
=>
    (up-assign-builders c: monastery c:+ 2)
    (up-assign-builders c: archery-range c:+ 1)
    (up-assign-builders c: stable c:+ 1)    
    (up-assign-builders c: market c:+ 1)
    (up-assign-builders c: blacksmith c:+ 1)
    (up-assign-builders c: university c:+ 1)
    (up-assign-builders c: siege-workshop c:+ 1)
    (up-assign-builders c: bombard-tower c:+ 1) 
    (up-assign-builders c: watch-tower c:+ 2)
    (up-assign-builders c: guard-tower c:+ 1)          
    (up-assign-builders c: keep c:+ 2)
    (up-assign-builders c: donjon c:+ 2)
    (up-assign-builders c: castle c:+ 5)
    (up-assign-builders c: town-center c:+ 3)
    (up-assign-builders c: town-center-foundation c:+ 8)    
    (up-assign-builders c: palisade-wall c:+ 3)     
    (disable-self)
)

(defrule
    (building-type-count castle > 0)
=>
    (up-assign-builders c: castle c:+ 2)   
    (disable-self)
)

(defrule 
    (true)
=>
    (set-strategic-number sn-minimum-town-size 0)
    (set-strategic-number sn-maximum-town-size 8)
    (set-strategic-number sn-town-center-placement 0)          
    (disable-self)
)



; DROPSITES AND DISTANCES
; CANCEL SITE BUILDING IF DANGEROUS
(defrule 
    (true)
=>
    (set-strategic-number sn-defer-dropsite-update 1)
    (disable-self)
)

(defrule 
    (true)
=>
    (set-strategic-number sn-dropsite-separation-distance 3) ; WORKS?
    (set-strategic-number sn-allow-adjacent-dropsites 0) ; WILL CHANGE LATER
    (set-strategic-number sn-required-forest-tiles 6)
    (disable-self)
)

; CAMP MAX DISTANCES AT THE START
(defrule 
    (true)
=>  
    (set-strategic-number sn-lumber-camp-max-distance 12); 
    (set-strategic-number sn-mining-camp-max-distance 12);     
    (set-strategic-number sn-mill-max-distance 12)  
    (disable-self)
)

(defrule 
    (enemy-buildings-in-town)
=>     
    (up-modify-sn sn-mill-max-distance c:+ 16)  
    (disable-self)
)

(defrule 
    (enemy-buildings-in-town)
=>
    (set-strategic-number sn-lumber-camp-max-distance 38)      
    (disable-self)
)

; INDUSTRIAL MODE LUMBER
(defrule 
    (building-type-count-total lumber-camp > 3)
=>  
    (set-strategic-number sn-maximum-wood-drop-distance 3)
    ;(set-strategic-number sn-required-forest-tiles 8)
    ;(set-strategic-number sn-allow-adjacent-dropsites 1)       
    ;(up-chat-data-to-self "Industrial lumber mode activated: Adjacent sites allowed. Max drop distance = %d" s: sn-maximum-wood-drop-distance)
    (disable-self)
)

(defrule 
    (building-type-count-total lumber-camp < 3)
=>  
    (set-strategic-number sn-maximum-wood-drop-distance 9)
)

; PERCENT VILLAGER BUILDERS
(defrule
    (current-age == dark-age)
=>
    (set-strategic-number sn-percent-civilian-explorers 0)
    (set-strategic-number sn-percent-civilian-builders 100)
    (set-strategic-number sn-cap-civilian-builders 12)
    (disable-self)
)    

; PERCENT GATHERERS AND DROP DISTANCES
(defrule
    (current-age == dark-age)
=>
    (set-strategic-number sn-food-gatherer-percentage 70)
    (set-strategic-number sn-wood-gatherer-percentage 30)
    (set-strategic-number sn-gold-gatherer-percentage 0)
    (set-strategic-number sn-stone-gatherer-percentage 0)
    (disable-self)
)

(defrule 
    (current-age == dark-age)
=>  
    (set-strategic-number sn-maximum-hunt-drop-distance 16)
    (set-strategic-number sn-maximum-food-drop-distance 9)
    (set-strategic-number sn-maximum-wood-drop-distance 9)
    (set-strategic-number sn-maximum-gold-drop-distance 0)
    (set-strategic-number sn-maximum-stone-drop-distance 0)
    (disable-self)
)

(defrule 
    (current-age == dark-age)(civ-selected mongol)
=>  
    (set-strategic-number sn-maximum-hunt-drop-distance 26)
    (disable-self)
)

(defrule 
    (current-age == dark-age)
    ;(or(civ-selected incan)(or(civ-selected mayan)(civ-selected aztec)))
    (not(civ-selected poles))
    (game-time > 420)
=>  
    (set-strategic-number sn-maximum-hunt-drop-distance 16)
    (set-strategic-number sn-maximum-food-drop-distance 9)
    (set-strategic-number sn-maximum-wood-drop-distance 9)
    (set-strategic-number sn-maximum-gold-drop-distance 14)
    (set-strategic-number sn-maximum-stone-drop-distance 0)
    (chat-to-player my-player-number "Gold and Stone mining avaiable")    
    (disable-self)
)

(defrule 
    (current-age == dark-age)
    ;(or(civ-selected incan)(or(civ-selected mayan)(civ-selected aztec)))
    (civ-selected poles)
    (game-time > 420)
=>  
    (set-strategic-number sn-maximum-gold-drop-distance 14)
    (set-strategic-number sn-maximum-stone-drop-distance 14)
    (chat-to-player my-player-number "Gold and Stone mining avaiable")    
    (disable-self)
)

(defrule 
    (current-age == dark-age)
    (game-time > 540)
=>  
    (set-strategic-number sn-maximum-gold-drop-distance 14)
    (chat-to-player my-player-number "Let´s Get Some Gold")
    (disable-self)
)

(defrule
    (up-research-status c: feudal-age == research-pending)
=>
    (set-strategic-number sn-food-gatherer-percentage 40)
    (set-strategic-number sn-wood-gatherer-percentage 50)
    (set-strategic-number sn-gold-gatherer-percentage 10) ;
    (set-strategic-number sn-stone-gatherer-percentage 0)
    (set-strategic-number sn-maximum-gold-drop-distance 14)    
    (disable-self)
)

(defrule 
    (current-age == feudal-age)
=>  
    (set-strategic-number sn-maximum-hunt-drop-distance 16)
    (set-strategic-number sn-maximum-food-drop-distance 6) ;to make them use mills
    (set-strategic-number sn-maximum-stone-drop-distance 0)
    (set-strategic-number sn-food-gatherer-percentage 50)
    (set-strategic-number sn-wood-gatherer-percentage 40)
    (set-strategic-number sn-gold-gatherer-percentage 10) ;    
    (disable-self)
)

(defrule
    (current-age == feudal-age)
    (or(building-type-count blacksmith > 0) ;goths use only barracks
    (building-type-count stable > 0))
    (or(building-type-count market > 0)
    (building-type-count archery-range > 0))    
    (building-type-count-total lumber-camp > 1)    
=>
    (set-strategic-number sn-food-gatherer-percentage 60)
    (set-strategic-number sn-wood-gatherer-percentage 28)
    (set-strategic-number sn-gold-gatherer-percentage 12)
    (set-strategic-number sn-stone-gatherer-percentage 0)    
    (set-strategic-number sn-maximum-gold-drop-distance 6)    
    (disable-self)
)

; DROP DISTANCE CASTLE AGE
(defrule 
    (up-research-status c: castle-age == research-pending)
=>  
    (set-strategic-number sn-enable-boar-hunting 0); no more hunting
    (set-strategic-number sn-minimum-number-hunters 0)
    (set-strategic-number sn-maximum-hunt-drop-distance 0)
    (set-strategic-number sn-maximum-wood-drop-distance 8) 
    (set-strategic-number sn-maximum-gold-drop-distance 9)    
    (set-strategic-number sn-food-gatherer-percentage 64)
    (set-strategic-number sn-wood-gatherer-percentage 20)
    (set-strategic-number sn-gold-gatherer-percentage 16)
    (set-strategic-number sn-stone-gatherer-percentage 0)
    (disable-self)
)

(defrule 
    (current-age == castle-age)
    (building-type-count monastery > 0)
    (building-type-count siege-workshop > 0)    
    (or
        (building-type-count university > 0)
        (building-type-count town-center > 1)         
    )
=>  
    (set-strategic-number sn-food-gatherer-percentage 63)
    (set-strategic-number sn-wood-gatherer-percentage 16)
    (set-strategic-number sn-gold-gatherer-percentage 15)
    (set-strategic-number sn-stone-gatherer-percentage 6)
       
    (disable-self)
)

(defrule 
    (current-age == castle-age)
    (wood-amount > 1200)
=>  
    (up-modify-sn sn-food-gatherer-percentage c:+ 25)
    (up-modify-sn sn-wood-gatherer-percentage c:- 25)
     (disable-self)   
)

(defrule 
    (current-age == castle-age)
    (gold-amount > 1200)
=>  
    (up-modify-sn sn-food-gatherer-percentage c:+ 25)
    (up-modify-sn sn-gold-gatherer-percentage c:- 25)  
     (disable-self)
)

(defrule
    (up-research-status c: imperial-age == research-pending)
=>
    (set-strategic-number sn-food-gatherer-percentage 61)
    (set-strategic-number sn-wood-gatherer-percentage 20)
    (set-strategic-number sn-gold-gatherer-percentage 13)
    (set-strategic-number sn-stone-gatherer-percentage 6)
       
    (disable-self)
)

(defrule
    (current-age == imperial-age)(not(hold-relics))
=>
    (set-strategic-number sn-food-gatherer-percentage 75)
    (set-strategic-number sn-wood-gatherer-percentage 9)
    (set-strategic-number sn-gold-gatherer-percentage 10)
    (set-strategic-number sn-stone-gatherer-percentage 6)
    (chat-local-to-self  "Imperial Age With No Relics - Sending More Villagers For Gold")     
    (disable-self)
)

(defrule
    (current-age == imperial-age)(hold-relics)
=>
    (set-strategic-number sn-food-gatherer-percentage 77)
    (set-strategic-number sn-wood-gatherer-percentage 13)
    (set-strategic-number sn-gold-gatherer-percentage 4)
    (set-strategic-number sn-stone-gatherer-percentage 6)
    (chat-local-to-self "Imperial Age With All Relics - Sending Less Villagers For Gold")     
    (disable-self)
)

(defrule
    (current-age == imperial-age)
    (building-type-count market > 0)    
    (or
        (building-type-count town-center > 1)
        (building-type-count barracks > 1)
    )

=>
    (set-strategic-number sn-maximum-stone-drop-distance 9)
    (chat-local-to-self "STONE DISTANCE 9")     
    (disable-self)
)

(defrule
    (current-age == imperial-age)
    (building-type-count castle > 0)    
=>
    (set-strategic-number sn-stone-gatherer-percentage 0)    
    (set-strategic-number sn-maximum-stone-drop-distance 0)
    (chat-local-to-self "STONE DISTANCE 0, PERCENTAGE 0")      
    (disable-self)
)

(defrule
    (food-amount > 2500)(wood-amount < 500)
=>
    (up-modify-sn sn-food-gatherer-percentage c: -16)
    (up-modify-sn sn-wood-gatherer-percentage c: +16)
    (chat-local-to-self  "We Need More Wood, Less Food")     
    (disable-self)
)

(defrule
    (food-amount > 2600)(gold-amount < 500)
=>
    (up-modify-sn sn-food-gatherer-percentage c: -16)
    (up-modify-sn sn-gold-gatherer-percentage c: +16)
    (chat-local-to-self  "We Need More Gold, Less Food")     
    (disable-self)
)

(defrule
    (wood-amount > 2500)(food-amount < 500)
=>
    (up-modify-sn sn-wood-gatherer-percentage c: -16)
    (up-modify-sn sn-food-gatherer-percentage c: +16)
    (chat-local-to-self  "We Need More Food, Less Wood")     
    (disable-self)
)

(defrule
    (wood-amount > 2600)(gold-amount < 500)
=>
    (up-modify-sn sn-wood-gatherer-percentage c: -16)
    (up-modify-sn sn-gold-gatherer-percentage c: +16)
    (chat-local-to-self  "We Need More Gold, Less Wood")     
    (disable-self)
)

(defrule
    (gold-amount > 1600)(food-amount < 500)
=>
    (up-modify-sn sn-gold-gatherer-percentage c: -16)
    (up-modify-sn sn-food-gatherer-percentage c: +16)    
    (chat-local-to-self "We Need More Food, Less Gold")     
    (disable-self)
)

(defrule
    (gold-amount > 1600)(food-amount < 500)
=>
    (up-modify-sn sn-gold-gatherer-percentage c: -16)
    (up-modify-sn sn-wood-gatherer-percentage c: +16)    
    (chat-local-to-self "We Need More Wood, Less Gold")     
    (disable-self)
)

; COMBAT                             
; DEFENSE 
(defrule 
    (true)
=>
    (set-strategic-number sn-allow-civilian-defense 1)         
    (disable-self)
)

(defrule 
    (game-time > 360)(military-population < 2)
=>
    (set-strategic-number sn-allow-civilian-defense 2)         
)

(defrule 
    (true)
=>
    (set-difficulty-parameter ability-to-dodge-missiles 0)
	(set-difficulty-parameter ability-to-maintain-distance 0) 
    (set-strategic-number sn-defense-distance 20)
    (set-strategic-number sn-task-ungrouped-soldiers 0)         
    (disable-self)
)

(defrule
	(true)
=>
	(up-set-defense-priority c: lumber-camp c: 10001)
	(disable-self)
)

(defrule
	(true)
=>
	(up-set-offense-priority c: castle c: 99999)
	(disable-self)
)

(defrule 
    (military-population > 15)
    (not(town-under-attack))
=>
    (set-strategic-number sn-task-ungrouped-soldiers 1)
    (chat-local-to-self "Soldiers Spread!")
    (disable-self)
)

(defrule
    (true)
=>
    (up-set-defense-priority c: lumber-camp c: 1001)
    (up-set-defense-priority c: watch-tower c: 100)
    (up-set-defense-priority c: siege-workshop c: 999)
    (disable-self)
)

; ATTACK    
; CHOOSING TARGET 
(defrule 
    (true)
=>
    (set-strategic-number sn-free-siege-targeting 0)
    (set-strategic-number sn-enemy-sighted-response-distance 13)     
    (set-strategic-number sn-wall-targeting-mode 1)
    (set-strategic-number sn-attack-intelligence 1)
    (set-strategic-number sn-target-evaluation-distance 10)
    (set-strategic-number sn-coop-share-attacking 1)
    (set-strategic-number sn-target-evaluation-boat 10)    
    (disable-self)
)
(defrule 
    (true)
=>
    (set-strategic-number sn-enable-offensive-priority 1) 
    (set-strategic-number sn-local-targeting-mode 1)     
    (set-strategic-number sn-ignore-attack-group-under-attack 0)        
    (set-strategic-number sn-enable-patrol-attack 1)
    (set-strategic-number sn-percentage-explore-exterminators 50)   
    (set-strategic-number sn-disable-defend-groups 0)  
    (set-strategic-number sn-relic-return-distance 999)
    (set-strategic-number sn-allow-civilian-offense 1)  
    ;(set-strategic-number sn-number-civilian-militia 100) 
	(set-strategic-number sn-garrison-rams 1)  
    (set-strategic-number sn-gather-idle-soldiers-at-center 1)     	
    (disable-self)
)

(defrule 
    (true)
=>
    (set-strategic-number sn-group-form-distance 16)
    ;(set-strategic-number sn-attack-group-gather-spacing 5)    
    (set-strategic-number sn-minimum-attack-group-size 4)
    (set-strategic-number sn-maximum-attack-group-size 150)
    (set-strategic-number sn-number-attack-groups 0)  
    (set-strategic-number sn-percent-attack-soldiers 100)
               
    (disable-self)
)

; BOATS
(defrule 
    (true)
=>
    (set-strategic-number sn-minimum-boat-attack-group-size 5)
    (set-strategic-number sn-maximum-boat-attack-group-size 18)   
    (set-strategic-number sn-number-boat-attack-groups 1) 
    (disable-self)
)



; 3. UPGRADES ////////////////////////////
; ADVANCING AGE
(defrule
    (can-research feudal-age)
    (or(unit-type-count-total villager > 10)(food-amount > 1000))
=> 
    (research feudal-age) 
)

(defrule
    (can-research castle-age)
=>
    (research castle-age)  
)

(defrule
    (military-population > 15)
    (can-research imperial-age)   
=>
    (research imperial-age)
)

; LUMBER UPGRADES 
(defrule(can-research ri-double-bit-axe)(wood-amount > 150)=>(research ri-double-bit-axe))
(defrule(can-research ri-bow-saw)=>(research ri-bow-saw))
(defrule(can-research ri-two-man-saw)=>(research ri-two-man-saw))

; TOWN CENTER UPGRADES      
; VILLAGER UPGRADES
(defrule
    (can-research ri-loom)
    (or
        (or
            (enemy-buildings-in-town)
            (unit-type-count-total monk-set g:>= gl-monkQtyLow)
        )
        (or
            (current-age == imperial-age)
            (gold-amount > 250)
        )            
    )
=>
    (research ri-loom)
)

(defrule
    (can-research ri-wheel-barrow)(wood-amount > 149)
    (or
        (and(not(town-under-attack))(enemy-buildings-in-town))
        (food-amount > 400)
    )
=>
    (research ri-wheel-barrow)
)

(defrule
    (can-research ri-hand-cart)(building-type-count-total monastery > 0)
=>
    (research ri-hand-cart)
)

; BUILDING SIGHT RANGE
(defrule
    (can-research ri-town-watch)
    (food-amount > 1200)
    (current-age == imperial-age)
=>
    (research ri-town-watch )
)

(defrule
    (can-research ri-town-patrol )
    (food-amount > 1500)
=>
    (research ri-town-patrol )
)

; MARKET
(defrule
    (can-research ri-cartography)
    (current-age >= castle-age)
=>
    (research ri-cartography)
)

(defrule
    (can-research ri-caravan )
    (or
        (unit-type-count-total trade-cart > 0)
    	(unit-type-count-total trade-cog > 0)
    )
=>
    (research ri-caravan )
)

(defrule
    (can-research ri-guilds)
=>
    (research ri-guilds)
)

(defrule
    (players-building-type-count any-ally market > 0)
    (building-type-count-total monastery > 0)
    (can-research ri-coinage)    
=>
    (research ri-coinage)
)

(defrule
    (players-building-type-count any-ally market > 0)
    (can-research ri-banking)    
=>
    (research ri-banking)
)

; FARMS
(defrule
    (or
        (and
            (food-amount > 875)
            (not(town-under-attack))
        )
        (or
            (current-age == imperial-age)
            (building-type-count farm > 5)                            
        )
    )
    (building-type-count-total farm > 3)
    (research-completed ri-double-bit-axe)
    (wood-amount > 175)
(can-research ri-horse-collar)    
=>
    (research ri-horse-collar)
)

(defrule
    (wood-amount > 225)
 	(research-completed ri-hand-cart) 
 	(research-completed ri-bow-saw)
    (can-research ri-heavy-plow)      
=>
    (research ri-heavy-plow)
)

(defrule
    (wood-amount > 350)(can-research ri-crop-rotation)
=>
    (research ri-crop-rotation)
)

; MINES
 (defrule
    (wood-amount > 100)
    (building-type-count market > 0)
    (research-completed ri-double-bit-axe)
    (can-research ri-gold-mining)    
=>
    (research ri-gold-mining)
)

(defrule
    (wood-amount > 100)
    (research-completed ri-hand-cart)
    (research-completed ri-bow-saw)(research-completed ri-heavy-plow)
    (can-research ri-gold-shaft-mining)
=>
    (research ri-gold-shaft-mining)
)

(defrule
  	(current-age > castle-age)
    (research-completed ri-hand-cart)(research-completed ri-bow-saw)(research-completed ri-heavy-plow)
    (wood-amount > 100)  	
    (can-research ri-stone-mining)
=>
    (research ri-stone-mining)
)

(defrule
    (current-age == imperial-age)(wood-amount > 100)
    (can-research ri-stone-shaft-mining)
=>
    (research ri-stone-shaft-mining)
)

; UNIQUE TECHS
; AOK
; BYZANTINES
(defrule
    (civ-selected byzantine)(unit-type-count-total fire-ship-line > 0)
    (can-research my-second-unique-research )
=>
    (research my-second-unique-research)
    (chat-to-player my-player-number "FIRE SHIPS +1 RANGE!")     
)

(defrule
    (can-research my-unique-research)
    (civ-selected byzantine)(unit-type-count-total my-unique-unit-line > 0)
=>
    (research my-unique-research)
    (chat-to-player my-player-number "CATAFRACTS CAUSE TRAMPLE DAMAGE!")
)

; CELTS
(defrule
    (can-research ri-stronghold)
    (or
        (building-type-count-total castle > 0)
        (building-type-count-total watch-tower-line > 0)    
    )
    (or
        (current-age == imperial-age)
        (town-under-attack)
    )
=>
    (research ri-stronghold)
    (chat-to-player my-player-number "TOWERS AND CASTLES SHOOT 25% FASTER!") 
)

(defrule
    (can-research my-unique-research)
    (civ-selected celtic)
=>
    (research my-unique-research)
    (chat-to-player my-player-number "SIEGE WEAPONS +40% HP!")
)

; CHINESE
(defrule
    (civ-selected chinese)
    (or
        (or
            (building-type-count-total watch-tower-line > 0)
            (building-type-count-total bombard-tower > 0)
        )
        (building-type-count-total stone-wall-line > 0)
    )
    (can-research my-second-unique-research )
=>
    (research my-second-unique-research)
    (chat-to-player my-player-number "WALLS AND TOWERS +30% HP!") 
)

(defrule
    (civ-selected chinese)
    (can-research my-unique-research)
=>
    (research my-unique-research)
    (chat-to-player my-player-number "UNIQUE ARCHERS +2 ATTACK, SCORPIONS +4 ATTACK!")
)

; FRANKS
(defrule
    (civ-selected frankish)(unit-type-count-total my-unique-unit-line > 0)
    (can-research my-unique-research)
=>
    (research my-unique-research)
    (chat-to-player my-player-number "AXE THROWERS +1 RANGE!") 
)

(defrule
    (civ-selected frankish)(can-research my-second-unique-research )
=>
    (research my-second-unique-research)
    (chat-to-player my-player-number "STABLES WORK 40% FASTER!") 
)

; GOTHS
(defrule ;anarchy
    (civ-selected gothic) 
    (current-age == imperial-age)(building-type-count barracks > 1)
    (can-research my-unique-research)    
=>
    (research my-unique-research)
    (chat-to-player my-player-number "HUSKARLS AVAILABLE AT BARRACKS!") 
)

(defrule
    (civ-selected gothic)(building-type-count barracks > 1)
    (can-research my-second-unique-research)
=>
    (research my-second-unique-research)
    (chat-to-player my-player-number "BARRACKS SPEED DOUBLED!") 
)

; BRITONS
(defrule
    (civ-selected briton)(can-research my-second-unique-research )
=>
    (research my-second-unique-research)
    (chat-to-player my-player-number "ARCHERS +1 RANGE, TOWERS +2 ATTACK!") 
)

(defrule
    (can-research my-unique-research)
    (civ-selected briton)(unit-type-count-total trebuchet > 0)
=>
    (research my-unique-research)
    (chat-to-player my-player-number "TREBUCHETS CAUSE BLAST DAMAGE!")
)

; JAPANESE
(defrule
    (can-research 484)
    (building-type-count-total watch-tower-line > 2)
=>
    (research 484 )
    (chat-to-player my-player-number "TOWERS SHOOT EXTRA ARROWS!") 
)

(defrule
    (civ-selected japanese)
    (can-research my-unique-research)(unit-type-count-total trebuchet > 0)
=>
    (research my-unique-research)
    (chat-to-player my-player-number "TREBUCHETS PACK AND UNPACK FASTER!")
)

; MONGOLIANS
(defrule
    (can-research 487)
=>
    (research 487)
    (chat-to-player my-player-number "WE DON´T NEED HOUSES ANYMORE!")
)

(defrule
    (civ-selected mongol)(can-research my-unique-research)
=>
    (research my-unique-research)
    (chat-local-to-self "SIEGE WEAPONS 50% FASTER!") 
)

; PERSIANS
(defrule
    (civ-selected persian)(can-research my-second-unique-research)
=>
    (research my-second-unique-research)
    (chat-to-player my-player-number "ARCHERS COST NO GOLD!")  
)

(defrule
    (civ-selected persian)(can-research my-unique-research)
    (unit-type-count-total my-unique-unit-line > 0)
=>
    (research my-unique-research)
    (chat-to-player my-player-number "ELEPHANTS 30% FASTER!")  
)

; SARACEN
(defrule
    (civ-selected saracen)
    (can-research my-second-unique-research)
=>
    (research my-second-unique-research)
    (chat-to-player my-player-number "CAMELS +20 HP!")
)

(defrule
    (civ-selected saracen)
    (can-research my-unique-research)
=>
    (research my-unique-research)
    (chat-to-player my-player-number "TREBUCHETS AND MANGONELS +15% ATTACK!")
)

; TEUTONS
(defrule
    (civ-selected teutonic)(can-research my-second-unique-research )
=>
    (research my-second-unique-research)
    (chat-to-player my-player-number "SIEGE WEAPONS +4 MELEE ARMOR!") 
)

(defrule
    (civ-selected teutonic)(can-research my-unique-research)
    (building-type-count-total castle > 0)
=>
    (research my-unique-research)
    (chat-to-player my-player-number "CASTLES +3 RANGE!")  
)

; TURKS
(defrule
    (or(current-age == imperial-age)(and(food-amount > 1350)(gold-amount > 950)))
    (building-type-count archery-range > 0)
    (can-research ri-sipahi)
=>
    (research ri-sipahi)
    (chat-to-player my-player-number "CAVALRY ARCHERS +20 HP!")  
)

(defrule
    (civ-selected turkish)(can-research my-unique-research)
=>
    (research my-unique-research)
    (chat-to-player my-player-number "ALL TYPES OF CANNONS +3 RANGE!")  
)

; VIKINGS
(defrule
    (can-research ri-chieftains)
=>
    (research ri-chieftains)
    (chat-to-player my-player-number "INFANTRY CAUSES EXTRA DAMAGE TO CAVALRY!")  
)

(defrule
    (civ-selected viking)(can-research my-unique-research)(unit-type-count-total my-unique-unit-line > 0)
=>
    (research my-unique-research)
    (chat-to-player my-player-number "BERSERKERS REGENERATE!")  
)

; AOC
; AZTECS
(defrule
    (can-research ri-atlatl)
    (or
        (unit-type-count-total skirmisher-line > 0)
        (or
            (unit-type-count-total genitour > 0)
            (unit-type-count-total elite-genitour > 0)
        )     
    )
=>
    (research ri-atlatl)
    (chat-to-player my-player-number "SKIRMISHERS +1 ATTACK, +1 RANGE")    
)

(defrule
    (civ-selected aztec)
    (can-research my-unique-research)
=>
    (research my-unique-research)
    (chat-to-player my-player-number "INFANTRY +4 ATTACK!")   
)

; KOREANS
(defrule
    (civ-selected korean)
    (building-type-count-total watch-tower-line > 3)
    (can-research my-second-unique-research )
=>
    (research my-second-unique-research)
    (chat-to-player my-player-number "TOWERS +2 RANGE!")  
)

(defrule
    (civ-selected korean)
    (unit-type-count-total mangonel-line > 0)
    (can-research my-unique-research )
=>
    (research my-unique-research)
    (chat-to-player my-player-number "MANGONELS +1 RANGE!")  
)

; ESPANYOLES
(defrule
    (can-research ri-inquisition)
    (current-age == imperial-age)
=>
    (research ri-inquisition)
    (chat-to-player my-player-number "INQUISITION!") 
)

(defrule
    (civ-selected spanish)
    (can-research my-unique-research)
    (research-completed ri-sappers)
=>
    (research my-unique-research)
    (chat-to-player my-player-number "SE VA A HABÉ UN FOLLÓN QUE NO VA SABE NI ONDE SA METÍO!")
    (set-strategic-number sn-allow-civilian-defense 2)  
    (set-strategic-number sn-allow-civilian-offense 3)     
)

; HUNS
(defrule
    (can-research 483) 
=>
    (research 483)
    (chat-to-player my-player-number "CREATE TARCANS AT STABLES!") 
)

(defrule
    (civ-selected hun)
    (can-research my-unique-research)
=>
    (research my-unique-research)
    (chat-to-player my-player-number "ENEMY RELICS PRODUCE HALF THE GOLD!")   
)

; MAYANS
(defrule
    (civ-selected mayan)(unit-type-count-total skirmisher-line > 0) 
    (can-research my-second-unique-research)
=>
    (research my-second-unique-research)
    (chat-to-player my-player-number "SKIRMISHERS SHOOT TWICE!")  
)

(defrule
    (civ-selected mayan)(unit-type-count-total eagle-warrior-line > 0)  
    (can-research my-unique-research )
=>
    (research my-unique-research)
    (chat-to-player my-player-number "EAGLE WARRIORS +40 HP!")  
)

; FORGOTTEN
; SLAVS
(defrule
    (civ-selected slavic)
    (stone-amount < 1000)
    (can-research my-second-unique-research)
    (current-age == imperial-age)
=>
    (research my-second-unique-research)
    (chat-to-player my-player-number "CASTLES COST LESS STONE!")  
)

(defrule
    (can-research ri-druzhina)
=>
    (research ri-druzhina)
    (chat-to-player my-player-number "INFANTRY ATTACKS WITH BLAST DAMAGE!")  
)

; HUNGARIANS - MAGYAR
(defrule
    (civ-selected magyar)
    (can-research my-second-unique-research)
=>
    (research my-second-unique-research)
    (chat-to-player my-player-number "UNIQUE UNIT COSTS NO GOLD!")  
)

(defrule
    (civ-selected magyar)  (can-research my-unique-research )
=>
    (research my-unique-research)
    (chat-to-player my-player-number "CAVALRY ARCHERS +1 ATTACK, +1 RANGE!")  
)

; INCA
(defrule
    (civ-selected incan)(can-research my-second-unique-research)
    (or
        (unit-type-count-total skirmisher > 0)    
        (unit-type-count-total slinger > 0)        
    )
=>
    (research my-second-unique-research)
    (chat-to-player my-player-number "SKIRMISHERS AND SLINGERS NO MINIMUM RANGE!")    
)

(defrule
    (civ-selected incan)(can-research my-unique-research)
=>
    (research my-unique-research)
    (chat-to-player my-player-number "KAMAYUKS, SLINGERS, EAGLE WARRIORS +1 MELEE, +2 RANGED ARMOR!")  
)

; INDIANS - HINDUSTANIS
(defrule
    (civ-selected indian)
    (can-research my-second-unique-research)
=>
    (research my-second-unique-research)
    (chat-to-player my-player-number "GOLD INCOME 10% FASTER!")  
)

(defrule
    (civ-selected indian)(can-research my-unique-research) ; rango
    (current-age == imperial-age)
    (unit-type-count-total hand-cannoneer > 0)
=>
    (research my-unique-research)
    (chat-to-player my-player-number "HAND CANNONEERS +1 RANGE!")  
)

; ITALIANS
(defrule
    (civ-selected italian)
    (can-research my-second-unique-research )
    (current-age == imperial-age)
    (or
        (or
            (unit-type-count-total condottiero > 0)
            (unit-type-count-total archer-line > 0)
        )    
        (unit-type-count-total my-unique-unit-line > 0)
    )
=>
    (research my-second-unique-research)
    (chat-to-player my-player-number "FOOR ARCHERS AND CONDOTTIERI +1 MELEE, +1 RANGED ARMOR!")  
)

(defrule
    (civ-selected italian)
    (can-research my-unique-research) ; ruta de la seda
    (or
        (unit-type-count-total trade-cart > 0)
        (unit-type-count-total trade-cog > 0)
    )
=>
    (research my-unique-research)
    (chat-to-player my-player-number "TRADE UNITS COST HALF THE PRICE!")  
)

; PORTUGUESE
(defrule
    (can-research ri-carrack)
    (current-age == imperial-age)(building-type-count-total dock > 0)
=>
    (research ri-carrack)
    (chat-to-player my-player-number "SHIPS +1 MELEE +1 RANGED ARMOR!") 
)

(defrule
    (can-research ri-arquebus )
    (current-age == imperial-age)
=>
    (research ri-arquebus)
    (chat-to-player my-player-number "GUNPOWDER UNITS ACCURACY INCREASED!")
)

; AFRICAN KINGDOMS        
; MALIAN
(defrule
    (can-research ri-tigui )
    (current-age == imperial-age) (building-type-count-total town-center > 1)
=>
    (research ri-tigui)
    (chat-to-player my-player-number "TOWN CENTERS SHOOT BY THEMSELVES!") 
)

(defrule
    (can-research my-unique-research)(civ-selected malian)
=>
    (research my-unique-research)
    (chat-to-player my-player-number "CAVALRY +5 ATTACK!")
)

; ETHIOPIAN
(defrule
    (can-research 574); ethiop, royal
    (unit-type-count-total my-unique-unit-line > 0)
=>
    (research 574)
    (chat-to-player my-player-number "UNIQUE UNITS PRODUCED FASTER!") 
)

(defrule
    (can-research my-unique-research)
    (civ-selected ethiopian)
=>
    (research my-unique-research)
    (chat-to-player my-player-number "SIEGE WORKSHOP UNITS BLAST RADIUS INCREASED!")
)

; BERBER
(defrule
    (civ-selected berbers)
    (can-research 578) 
    (research-completed my-unique-research)
    (building-type-count-total castle > 1);KASBAH
=>
    (research 578)
    (chat-to-player my-player-number "CASTLES WORK FASTER!")     
)

(defrule
    (civ-selected berbers)
    (can-research my-unique-research)
    (or
        (unit-type-count-total my-unique-unit-line > 0)
        (unit-type-count-total camel-line > 0)  
    )
    
=>
    (research my-unique-research)
    (chat-to-player my-player-number "CAMELS REGENERATE!")
)

; RISE OF THE RAJAS   
; BURMESE
(defrule
    (can-research my-second-unique-research)
    (civ-selected burmese)
    (unit-type-count-total battle-elephant-line > 0)
=>
    (research my-second-unique-research)
    (chat-to-player my-player-number "ELEPHANTS +1 MELEE, + 2 RANGED ARMOR!") 
)

(defrule
    (can-research my-unique-research)
    (civ-selected burmese)
=>
    (research my-unique-research)
    (chat-to-player my-player-number "CAVALRY +6 ATTACK AGAINST BUILDINGS!")
)

; KHMER
(defrule
    (civ-selected khmer)(can-research my-second-unique-research)
    (unit-type-count-total battle-elephant-line > 0)
=>
    (research my-second-unique-research)
    (chat-to-player my-player-number "BATTLE ELEPHANTS +3 ATAQUE!") 
)

(defrule
    (civ-selected khmer)(can-research my-unique-research)
    (or(unit-type-count-total my-unique-unit-line > 0)(unit-type-count-total scorpion-line > 0))
=>
    (research my-unique-research)
    (chat-to-player my-player-number "BALLISTA ELEPHANTS AND SCORPIONS SHOOT TWICE!")
)
; MALAY
(defrule
    (can-research 624)
    (building-type-count dock > 1)
    (current-age == imperial-age)
=>
    (research 624)
    (chat-to-player my-player-number "DOCKS SHOOT ARROWS!") 
)
(defrule
    (civ-selected malay)(can-research my-unique-research)
=>
    (research my-unique-research)
    (chat-to-player my-player-number "MILITIA COSTS NO GOLD!")
)

; VIETNAMESE
(defrule
    (civ-selected vietnamese)
    (can-research my-second-unique-research)
    (unit-type-count-total battle-elephant-line > 0)
=>
    (research my-second-unique-research)
    (chat-to-player my-player-number "ELEPHANTS +50 HP!") 
)

(defrule
    (civ-selected vietnamese)(can-research my-unique-research)
=>
    (research my-unique-research)
    (chat-to-player my-player-number "LUMBERJACKS GENERATE GOLD!") 
)

; DEFINITIVE   
; BULGARIANS
(defrule
    (civ-selected bulgarians)
    (can-research my-second-unique-research )
=>
    (research my-second-unique-research)
    (chat-to-player my-player-number "CAVALRY ATTACKS 33% FASTER!") 
)

(defrule
    (civ-selected bulgarians)(unit-type-count-total militiaman-line > 0)
    (can-research my-unique-research)
=>
    (research my-unique-research)
    (chat-to-player my-player-number "MILITIA +5 MELEE ARMOR!") 
)

; CUMANS
(defrule
    (civ-selected cumans)
    (can-research my-second-unique-research )
=>
    (research my-second-unique-research)
    (chat-local-to-self "CAVALRY TRAINS FASTER!")  
)

(defrule
    (civ-selected cumans)(players-building-type-count any-ally castle > 0)
    (can-research my-unique-research)
=>
    (research my-unique-research)
    (chat-to-player my-player-number "5 MERCENARIES IN CASTLES!")  
)
; LITHUANIANS
(defrule
    (civ-selected lithuanians)(can-research my-second-unique-research)
    (or
        (building-type-count-total town-center > 1)    
        (town-under-attack)
    )
=>
    (research my-second-unique-research)
    (chat-to-player my-player-number "TOWN CENTERS +3 RANGE!")  
)

(defrule
    (civ-selected lithuanians)(can-research my-unique-research)
    (or
        (unit-type-count-total spearman-line > 0)
        (unit-type-count-total skirmisher-line > 0)  
    )    
=>
    (research my-unique-research)
    (chat-to-player my-player-number "SPEARMEN AND SKIRMISHERS +2 RANGED ARMOR!")  
)

; TATARS
(defrule
    (civ-selected tatars)(can-research my-second-unique-research )
=>
    (research my-second-unique-research)
    (chat-to-player my-player-number "CAVALRY EXCEPT KNIGHTS GETS +1 MELEE +1 RANGED ARMOR!")   
)

(defrule
    (civ-selected tatars)(can-research my-unique-research)
=>
    (research my-unique-research)
    (chat-to-player my-player-number "TREBUCHETS +3 RANGE!") 
)

; LORDS OF THE WEST   
; BURGUNDIANS
(defrule 
    (can-research ri-burgundian-vineyards)
=>
    (research ri-burgundian-vineyards)
    (chat-to-player my-player-number "FARMS GENERATE GOLD!")     
)

(defrule
    (civ-selected burgundians)
    (can-research my-unique-research)(food-amount > 1500)
    (unit-type-count-total villager g:> gl-knightsQtyMedium)
    (military-population g:> gl-knightsQtyMedium)
    (or
        (unit-type-count-total battering-ram > 4)    
        (unit-type-count-total trebuchet > 4)        
    )
=>
    (research my-unique-research)
    (chat-to-player my-player-number "REVOLUTION AND ATTACK!")
    (attack-now)
    (disable-self)
)

; SICILIANS
(defrule
    (can-research ri-first-crusade)
    (or
        (building-type-count-total town-center > 2) 
        (building-type-count-total barracks > 2) 
    )
    (current-age == imperial-age)
=>
    (research ri-first-crusade)
    (chat-to-player my-player-number "5 SERJEANTS PER TOWN CENTER!") 
)

(defrule
    (civ-selected sicilians)(can-research my-unique-research)
    (unit-type-count-total knight-line > 0)    
=>
    (research my-unique-research)
    (chat-to-player my-player-number "KNIGHTS +1 MELEE, +2 RANGED ARMOR!") 
)

; DAWN OF DUKES   
; BOHEMIANS
(defrule
    (civ-selected bohemians)
    (can-research my-second-unique-research)
=>
    (research my-second-unique-research)
    (chat-to-player my-player-number "GUNPOWDER UNITS MOVE FASTER!") 
)

(defrule
    (civ-selected bohemians)(food-amount > 1000)
    (can-research my-unique-research)
=>
    (research my-unique-research)
    (chat-to-player my-player-number "MONASTERY TECHS COST FOOD INSTEAD OF GOLD!") 
)

; POLES
(defrule 
    (can-research ri-szlachta-privileges)
=>
    (research ri-szlachta-privileges)
    (chat-to-player my-player-number "KNIGHTS GOLD COST REDUCED 60%!")  
)

(defrule
    (civ-selected poles)(unit-type-count-total scout-cavalry-line > 0)
    (can-research my-unique-research)
=>
    (research my-unique-research)
    (chat-to-player my-player-number "SCOUTS CAUSE TRAMPLE DAMAGE!") 
)

; DYNASTIES OF INDIA
; BENGALIS
(defrule
    (civ-selected bengalis)
    (can-research my-second-unique-research)
=>
    (research my-second-unique-research)
    (chat-to-player my-player-number "CHARIOTS AND ELEPHANTS ATTACK FASTER!") 
)

(defrule
    (civ-selected bengalis)
    (unit-type-count villager g:> gl-maxCiviliansCastleAge)
    (can-research my-unique-research)
=>
    (research my-unique-research)
    (chat-to-player my-player-number "VILLAGERS TAKE 10% LESS SPACE!") 
)

; DRAVIDIANS
(defrule
    (civ-selected dravidians)
    (can-research my-second-unique-research)
=>
    (research my-second-unique-research)
    (chat-to-player my-player-number "ELEPHANTS REGENERATE!") 
)

(defrule
    (civ-selected dravidians)
    (can-research my-unique-research)
=>
    (research my-unique-research)
    (chat-to-player my-player-number "INFANTRY AND CAVALRY ATTACKS IGNORE ARMOR!") 
)

; GURJARAS
(defrule
    (civ-selected gurjaras)
    (can-research my-second-unique-research)
=>
    (research my-second-unique-research)
    (chat-to-player my-player-number "MILITARY UNITS COST 25% LESS FOOD!") 
)

(defrule
    (civ-selected gurjaras)
    (can-research my-unique-research)
=>
    (research my-unique-research)
    (chat-to-player my-player-number "CAMELS AND ELEPHANTS ARCHERS +4 MELEE ARMOR!") 
)

; DOCK UPGRADES
(defrule
	(unit-type-count-total fishing-ship > 9)
    (research-completed ri-hand-cart)(research-completed ri-bow-saw)
    (research-completed ri-heavy-plow) 
    (can-research ri-gillnets)
=>
    (research ri-gillnets)
)

(defrule
    (or
        (or
            (or
                (players-unit-type-count any-enemy galley-line > 0)
                (players-unit-type-count any-enemy demolition-ship-line > 0)
            )
            (or
                (players-unit-type-count any-enemy cannon-galleon-line > 0)
                (players-unit-type-count any-enemy fire-ship-line > 0)
            )
        )
        (or
            (or
                (players-unit-type-count any-enemy turtle-ship-line > 0)
                (players-unit-type-count any-enemy caravel-line > 0)             
            )
            (players-unit-type-count any-enemy longboat-line > 0)       
        )
    )
	(can-research ri-careening)
=>
	(chat-local-to-self  "PIRATE ACTIVITY DETECTED!")
	(research ri-careening)
)

(defrule
    (can-research ri-dry-dock)
=>
    (research ri-dry-dock)
)

(defrule	
	(unit-type-count-total galley-line > 1)
    (can-research ri-war-galley)    
=>
	(research ri-war-galley)
)

(defrule
    (unit-type-count-total fire-ship-line > 1)
    (can-research ri-fast-fire-ship)    
=>
    (research ri-fast-fire-ship)
)

(defrule
	(can-research ri-galleon)
=>
	(research ri-galleon)
)

(defrule
	(can-research ri-cannon-galleon)
=>
	(research ri-cannon-galleon)
)

(defrule	
	(unit-type-count-total cannon-galleon-line > 1)
    (can-research ri-deck-guns)    
=>
	(research ri-deck-guns)
)

(defrule	
	(or
		(unit-type-count-total galley-line > 0)
		(unit-type-count-total cannon-galleon-line > 0)	
	)
    (can-research ri-shipwright)    
=>
	(research ri-shipwright)
)

(defrule
    (unit-type-count-total turtle-ship-line > 0)
    (can-research ri-elite-turtle-ship)    
=>
    (research ri-elite-turtle-ship)
)   

(defrule
    (unit-type-count-total caravel-line > 0)
    (can-research ri-elite-caravel)
=>
    (research ri-elite-caravel)
)   

(defrule
    (unit-type-count-total longboat-line > 0)
    (can-research ri-elite-longboat)    
=>
    (research ri-elite-longboat)
)   

; MILTARY UPGRADES
; BARRACKS UPGRADES
; COMMON
(defrule
    (research-completed ri-hand-cart)
    (research-completed ri-bow-saw)
    (research-completed ri-heavy-plow)
    (can-research ri-tracking) 
=>
    (research ri-tracking)
)

(defrule
    (research-completed ri-hand-cart)
    (research-completed ri-bow-saw)
    (research-completed ri-heavy-plow)
    (can-research ri-squires)
    (or(not(civ-selected mongol))(current-age == imperial-age))
=>
    (research ri-squires)
)

(defconst arson 602)
(defrule
    (or
        (current-age == imperial-age)
        (and(enemy-buildings-in-town)(unit-type-count infantry-class > 1))
    )
    (can-research arson)    
=>
    (research arson )
)

; G. AGUILA
(defrule
    (unit-type-count-total eagle-warrior-line > 2)     
    (can-research ri-eagle-warrior)    
=>
    (research ri-eagle-warrior)
)

(defrule
    (unit-type-count-total eagle-warrior-line > 2)     
    (can-research ri-elite-eagle-warrior)    
=>
    (research ri-elite-eagle-warrior)
)

; MILITIA
(defrule
    (or
        (or
            (or(civ-selected portuguese)(civ-selected burmese))
            (or(civ-selected japanese)(civ-selected bulgarians))
        )
        (or
            (or(civ-selected aztec)(civ-selected incan))
            (or(civ-selected japanese)(civ-selected celtic))
        )
    )        
    (can-research ri-supplies)
=>
    (research ri-supplies)
)

 (defrule
    (unit-type-count-total militiaman-line > 0)  
    (can-research ri-supplies)
=>
    (research ri-supplies)
)

 
(defrule
    (or(civ-selected aztec)(civ-selected incan))
    (can-research ri-man-at-arms)
=>
    (research ri-man-at-arms)
)

(defrule
 	(unit-type-count-total militiaman-line > 0) 	
    (can-research ri-man-at-arms)
    (or(not(civ-selected mongol))(current-age == imperial-age))    
=>
    (research ri-man-at-arms)
)


(defrule
    (unit-type-count-total militiaman-line > 2)
    (or(game-time < 900)(current-age == imperial-age))
    (can-research ri-long-swordsman)    
=>
    (research ri-long-swordsman)
)

(defrule
    (unit-type-count-total militiaman-line > 6)
    (can-research ri-two-handed-swordsman)    
=>
    (research ri-two-handed-swordsman)
)

(defrule
    (can-research ri-champion)
    (or
       (unit-type-count-total militiaman-line > 6)
       (and(unit-type-count-total militiaman-line > 0)(food-amount > 4000))
    )    
=>
    (research ri-champion)
)

(defrule
    (can-research ri-supplies)
    (unit-type-count-total militiaman-line > 3)
=>
    (research ri-supplies) ; MAS VELOCIDAD
)

; SPEARMEN
(defrule
    (research-completed ri-hand-cart)
    (research-completed ri-bow-saw)
    ;(research-completed ri-heavy-plow) 
    (building-type-count-total monastery > 0)
    (unit-type-count-total spearman-line > 4)
    (can-research ri-pikeman)
=>
    (research ri-pikeman)
)

(defrule
    (building-type-count-total monastery > 0)
    (unit-type-count-total spearman-line > 4) 
    (can-research ri-halberdier)
=>
    (research ri-halberdier)
)

; STABLES UPGRADES                 
; COMMON
(defrule
    ;(research-completed ri-wheel-barrow)
    (or(unit-type-count-total cavalry-class > 1)
    (unit-type-count-total cavalry-archer-class > 2))
    (can-research ri-bloodlines)
=>
    (research ri-bloodlines)
)

(defrule
    (or(unit-type-count-total cavalry-class > 2)
    (unit-type-count-total cavalry-archer-class > 2)) 
    (can-research ri-husbandry)
=>
    (research ri-husbandry)
)

(defrule
    (or(unit-type-count-total cavalry-class > 2)
    (unit-type-count-total cavalry-archer-class > 2))
    (can-research ri-stirrups)
=>
    (research ri-stirrups)
)

; LIGHT CAVALRY  
(defrule
    (or(current-age == imperial-age)(food-amount > 950))
    (unit-type-count scout-cavalry-line > 4)    
    (can-research ri-light-cavalry)    
=>
    (research ri-light-cavalry)
)

(defrule
    (current-age == imperial-age)
    (unit-type-count scout-cavalry-line > 4)    
    (can-research ri-hussar)    
=>
    (research ri-hussar)
)

; WINGED HUSSAR
(defrule
    (current-age == imperial-age)
    (can-research 786)    
=>
    (research 786)
)
(defrule
    (current-age == imperial-age)
    (can-research 788)    
=>
    (research 788)
)(defrule
    (current-age == imperial-age)
    (can-research 789)    
=>
    (research 789)
)

; CAMELS
(defrule
    (current-age == imperial-age)
    (can-research ri-heavy-camel)    
=>
    (research ri-heavy-camel)
)

(defrule
    (current-age == imperial-age)
    (can-research ri-imperial-camel)    
=>
    (research ri-imperial-camel)
)

; ELEPHANTS
(defrule
    (can-research ri-elite-battle-elephant)
    (current-age == imperial-age)
=>
    (research ri-elite-battle-elephant)
)

; HEAVY CAVALRY
(defrule
    (can-research ri-cavalier)(not(civ-selected byzantine))(unit-type-count-total knight-line > 5)	
    (current-age == imperial-age)
=>
    (research ri-cavalier)
)

(defrule
    (can-research ri-paladin )(unit-type-count-total knight-line > 5)	
    (current-age == imperial-age)
=>
    (research ri-paladin)
)

(defrule
    (can-research ri-elite-steppe-lancer)(unit-type-count-total 1370 > 3)
    (current-age == imperial-age)
=>
    (research ri-elite-steppe-lancer)
)

; ARCHERY RANGE UPGRADES      
; COMMON
(defrule
 	(research-completed ri-hand-cart)
 	(or
        (research-completed ri-two-man-saw)
        (up-research-status c: ri-two-man-saw == research-unavailable)
    )    
    (can-research ri-thumb-ring)
=>
    (research ri-thumb-ring)
)

; ARCHER
(defrule
 	(research-completed ri-hand-cart)
 	(research-completed ri-bow-saw)    
    (unit-type-count-total archer-line > 1)
    (not(civ-selected mongol)) 
    (can-research ri-crossbow)    
=>
    (research ri-crossbow)
)

(defrule
    (unit-type-count-total archer-line > 1)
    (can-research ri-arbalest)    
=>
    (research ri-arbalest)
)

; SKIRMISHER AND GENITOUR
(defrule
    (unit-type-count-total genitour > 1)
    (can-research ri-elite-genitour)
=>
    (research ri-elite-genitour)
)

(defrule
    (research-completed ri-hand-cart)
    (unit-type-count-total skirmisher-line > 1)
    (unit-type-count-total genitour-line == 0)
    (or(not(civ-selected mongol))(current-age == imperial-age))         
    (can-research ri-elite-skirmisher)    
=>
    (research ri-elite-skirmisher)
)

(defrule
    (unit-type-count-total skirmisher-line > 1)
    (can-research ri-imperial-skirmisher)
=>
    (research ri-imperial-skirmisher)
)

; CAVALRY ARCHERS UPGRADES
(defrule
    (current-age == imperial-age)
    (unit-type-count-total cavalry-archer-line > 4)
    (can-research ri-parthian-tactics)    
=>
    (research ri-parthian-tactics )
)

(defrule
    (current-age == imperial-age)
    (unit-type-count-total cavalry-archer-line > 4)
    (can-research ri-heavy-cavalry-archer)    
=>
    (research ri-heavy-cavalry-archer)
)

; ELPHANT ARCHERS UPGRADES
(defrule
    (current-age == imperial-age)
    (unit-type-count-total elephant-archer-line > 4)
    (can-research ri-elite-elephant-archer)    
=>
    (research ri-elite-elephant-archer )
)

; CASTLE UPGRADES
(defrule
    (current-age == imperial-age)
    (or(food-amount > 500)(soldier-count > 4))
    (can-research ri-conscription)    
=>
    (research ri-conscription )
)

(defrule    
    (current-age == imperial-age)(not(civ-selected ethiopian))
    (can-research my-unique-unit-upgrade)    
=>
    (research my-unique-unit-upgrade)
    (chat-to-player my-player-number "UNIQUE UNIT UPGRADED!")
)

(defrule
    (current-age == imperial-age)
    (building-type-count-total castle > 1)
    (wood-amount > 1200)
    (food-amount > 1200)
    (can-research ri-hoardings)    
=>
    (research ri-hoardings)
)

(defrule
    (current-age == imperial-age)
    (unit-type-count villager > 0)
    (food-amount > 2000)
    (gold-amount > 1000)
    (can-research ri-sappers)    
=>
    (research ri-sappers)
    (chat-to-player my-player-number "SAPPERS!")   
)

; BLACKSMITH UPGRADES                          
; INFANTRY AND CAVALRY ATTACK      
 (defrule
    (or(unit-type-count infantry-class > 0)(unit-type-count cavalry-class > 1))
    ;(research-completed ri-hand-cart)
    ;(research-completed ri-bow-saw)
    ;(research-completed ri-heavy-plow)
    (can-research ri-forging)
=>
    (research ri-forging)
)

(defrule
    (or(town-under-attack)(current-age == imperial-age))
    (or(unit-type-count infantry-class > 2)(unit-type-count cavalry-class > 2))    
	(or(research-completed ri-hand-cart)(food-amount > 600))
    (research-completed ri-bow-saw)    
    (can-research ri-iron-casting)
=>
    (research ri-iron-casting)
)

(defrule
    (or(town-under-attack)(current-age == imperial-age))
    (or(unit-type-count infantry-class > 2)(unit-type-count cavalry-class > 2))    
    (can-research ri-blast-furnace)    
=>
    (research ri-blast-furnace)
)

; INFANTRY DEFENSE
(defrule
    (or(town-under-attack)(current-age == imperial-age))
    (unit-type-count-total infantry-class > 2)    
    (can-research ri-scale-mail)       
=>
    (research ri-scale-mail)
)

(defrule
    (or(town-under-attack)(current-age == imperial-age))
    (unit-type-count-total infantry-class > 2)       
    (can-research ri-chain-mail)    
=>
    (research ri-chain-mail)
)

(defrule
    (unit-type-count-total infantry-class > 2)
    (can-research ri-plate-mail)
=>
    (research ri-plate-mail)
)

; CAVALRY DEFENSE            
(defrule
    (unit-type-count-total cavalry-class > 2)
    (can-research ri-scale-barding)    
=>
    (research ri-scale-barding)
)

(defrule
    (unit-type-count-total cavalry-class > 2)
    (can-research ri-chain-barding)
=>
    (research ri-chain-barding)
)

(defrule
    (unit-type-count-total cavalry-class > 2)
    (can-research ri-plate-barding)
=>
    (research ri-plate-barding)
)

; ARCHER / TOWER / TC / BOAT ATTACK 
(defrule    
    (or
        (or(town-under-attack)(current-age == imperial-age))    
        (enemy-buildings-in-town)
    )
    (can-research ri-fletching)    
=>
    (research ri-fletching)
)

(defrule
    (can-research ri-bodkin-arrow)
    (or(unit-type-count monk > 4)(current-age == imperial-age))
=>
    (research ri-bodkin-arrow)
)

(defrule
    (can-research ri-bracer)
=>
    (research ri-bracer)
)

; ARCHER ARMOR      
(defrule
    (or
        (or(unit-type-count-total archery-class > 0)
        (unit-type-count-total archery-cannon-class > 2))
        (unit-type-count-total cavalry-archer-class > 2)
    )
    (research-completed ri-wheel-barrow)    
    (can-research ri-padded-archer-armor)
=>
    (research ri-padded-archer-armor )
)

(defrule
    (or
        (or(unit-type-count-total archery-class > 0)
        (unit-type-count-total archery-cannon-class > 2))
        (unit-type-count-total cavalry-archer-class > 2)
    )
    (can-research ri-leather-archer-armor )
=>
    (research ri-leather-archer-armor )
)

(defrule
    (or(unit-type-count-total archery-class > 2)
    (unit-type-count-total archery-cannon-class > 2))
    (can-research ri-ring-archer-armor )
=>
    (research ri-ring-archer-armor )
)

; SIEGE WORKSHOP UPGRADES
; MANGONEL
(defrule
	(unit-type-count-total mangonel-line > 2)
    (can-research ri-onager)
=>
	(research ri-onager)
)

(defrule
	(unit-type-count-total mangonel-line > 3)
    (can-research ri-siege-onager )
=>
    (research ri-siege-onager )
)

; SCORPION
(defrule
    (or
        (unit-type-count-total scorpion-line > 3)
        (or(civ-selected chinese)(civ-selected khmer))
    )
    (can-research ri-heavy-scorpion)
=>
    (research ri-heavy-scorpion)
)

; RAM
(defrule
	(unit-type-count-total battering-ram-line > 2)
    (can-research ri-capped-ram)
=>
    (research ri-capped-ram)
)

(defrule
	(unit-type-count-total battering-ram-line > 2)
    (can-research ri-siege-ram)
=>
    (research ri-siege-ram)
)

; SIEGE ELEPHANT
(defrule
	(unit-type-count-total armored-elephant-line > 2)
    (can-research ri-siege-elephant)
=>
    (research ri-siege-elephant)
)

; HOUFNICE
(defrule
    (can-research 787)
=>
    (research 787)
)

; MONASTERY
(defrule ;herbs
    (town-under-attack)(research-completed ri-atonement)
    (can-research 441)
=>
    (research 441)
)

(defrule
    (unit-type-count-total monk > 4)
    (can-research ri-fervor)
=>
    (research ri-fervor )
)

(defrule
    (unit-type-count-total monk > 4)
    (can-research ri-sanctity)
=>
    (research ri-sanctity)
)

(defrule
    (current-age == imperial-age)
	(research-completed ri-hand-cart)
	(unit-type-count-total monk > 10)    
    (can-research ri-redemption )
    (gold-amount > 1000)
=>
    (research ri-redemption )
)

(defrule
    (current-age == imperial-age)
	(research-completed ri-hand-cart)
    (players-unit-type-count any-enemy monk > 7)
    (gold-amount > 1100)   
    (can-research ri-heresy)
=>
    (research ri-heresy )
)

(defrule
    (current-age == imperial-age)
	(research-completed ri-hand-cart)
    (or
        (gold-amount > 800)
        (civ-selected bohemians)
    )
    (unit-type-count-total monk > 10)    
    (can-research ri-atonement)
=>
    (research ri-atonement)
)

; IMPERIAL AGE MONASTERY UPGRADES
(defrule
    (or
        (gold-amount > 800)
        (civ-selected bohemians)
    )
	(unit-type-count-total monk > 6)
    (not
        (and
            (up-research-status c: ri-halberdier == research-available)
            (unit-type-count spearman-line > 6)
        )
    )              
    (can-research ri-theocracy)
=>
    (research ri-theocracy)
)

(defrule
    (or
        (gold-amount > 800)
        (civ-selected bohemians)
    )
    (unit-type-count-total monk > 3)
    (not
        (and
            (up-research-status c: ri-halberdier == research-available)
            (unit-type-count spearman-line > 6)
        )
    )          
    (can-research ri-block-printing)    
=>
    (research ri-block-printing)
)

(defrule
    (or
        (and(gold-amount > 1200)(food-amount > 1400))
        (civ-selected bohemians)
    )
    (players-unit-type-count any-enemy monk > 6)
    (not
        (and
            (up-research-status c: ri-halberdier == research-available)
            (unit-type-count spearman-line > 6)
        )
    )     
    (can-research ri-faith)
=>
    (research ri-faith)
)

(defrule
    (or
        (gold-amount > 800)
        (civ-selected bohemians)
    ) 
	(unit-type-count-total monk > 3)
    (not
        (and
            (up-research-status c: ri-halberdier == research-available)
            (unit-type-count spearman-line > 6)
        )
    )          
    (can-research ri-illumination)
=>
    (research ri-illumination)
)

; UNIVERSITY UPGRADES                
; CASTLE AGE UNIVERSITY UPGRADES
(defrule
    (current-age == imperial-age)(building-type-count-total castle > 1)
    (can-research ri-masonry)
=>
    (research ri-masonry)
)

(defrule
   	(building-type-count-total stone-wall-line > 10)
    (current-age == imperial-age)
    (can-research ri-fortified-wall ) 
=>
    (research ri-fortified-wall )
)

(defrule
    (can-research ri-ballistics )
=>
    (research ri-ballistics )
)

(defrule
	(building-type-count-total watch-tower > 3)
	(not(civ-selected korean))
    (can-research ri-guard-tower)
=>
    (research ri-guard-tower)
)

(defrule
    (or
        (or
            (or
                (players-unit-type-count any-enemy galley-line > 0)
                (players-unit-type-count any-enemy demolition-ship-line > 0)
            )
            (or
                (players-unit-type-count any-enemy cannon-galleon-line > 0)
                (players-unit-type-count any-enemy fire-ship-line > 0)
            )
        )
        (or
            (or
                (players-unit-type-count any-enemy turtle-ship-line > 0)
                (players-unit-type-count any-enemy caravel-line > 0)             
            )
            (players-unit-type-count any-enemy longboat-line > 0)       
        )
    )
	(can-research ri-heated-shot)
=>
	(chat-local-to-self  "Pirate activity detected!")
	(research ri-heated-shot)
)

(defrule
	(town-under-attack)
    (or(building-type-count-total castle > 0)
        (building-type-count-total watch-tower-line > 1)
    )
    (can-research ri-murder-holes)
=>
    (research ri-murder-holes)
)

; IMPERIAL AGE UNIVERSITY UPGRADES
(defrule
    (building-type-count-total castle > 1)
    (can-research ri-architecture)
=>
    (research ri-architecture)
)

(defrule
    (can-research ri-chemistry)
=>
    (research ri-chemistry)
)

(defrule
    (can-research ri-siege-engineers)
=>
    (research ri-siege-engineers)
)

(defrule
    (or
        (building-type-count-total watch-tower-line > 4)
        (and
            (building-type-count-total watch-tower-line > 0)
            (and
                (wood-amount > 9000)(food-amount > 9000)
            )
        )
    )      
    (can-research ri-keep )
=>
    (research ri-keep )
)


(defrule
    (can-research ri-bombard-tower )
=>
    (research ri-bombard-tower )
)

; 4. BUILDING
; CIVILIAN BUILDINGS
; WONDER                          
(defrule
    (game-time > 5400)
    (building-type-count-total wonder == 0)
    (can-build wonder)    
=>
    (build wonder)
)

; TOWN CENTER  
(defrule
    (building-type-count-total town-center == 0) 
    (can-build town-center)    
=>
    (chat-local-to-self "Trying To Build Town Center 1")
    (build town-center)
)

(defrule
	(building-type-count-total town-center == 1)
    (civilian-population > 35)
    (or
        (building-type-count siege-workshop > 0)
        (or(civ-selected gothic)(civ-selected bohemians))
    )
    (can-build town-center)    
=>
    (chat-local-to-self "Trying To Build Town Center 2") 
    (build town-center)
)

(defrule
    (current-age == imperial-age)(food-amount > 400)
	(building-type-count-total town-center == 2) 
    (building-type-count-total monastery > 0)
    (building-type-count-total university > 0)  
    (building-type-count-total castle > 0)
    (military-population > 10)
    (can-build town-center)    
=>
    (build town-center)(chat-local-to-self "Trying To Build Town Center 3")
)

(defrule
	(current-age == imperial-age)(military-population > 60)(food-amount > 400)
    (building-type-count-total monastery > 0) 
    (building-type-count-total castle > 0)(building-type-count-total university > 0)  
    (building-type-count-total town-center < 4)
    (not(research-available ri-heavy-scorpion)) 
    (can-build town-center)
=>
    (build town-center)(chat-local-to-self "Trying To Build Town Center")
)

; MILL   
(defrule  
    (building-type-count-total mill == 0)(building-type-count town-center > 0)
    (resource-found food)
    (wood-amount > 200)
    (or(not(civ-selected poles))(wood-amount > 225))
    (can-build mill)    
=>
    (build mill)(chat-local-to-self "Trying To Build Mill 1 (Food Found)")
)

(defrule  
    (building-type-count-total mill < 1)(building-type-count town-center > 0)
    (wood-amount > 400)(can-build mill)
=>
    (build mill)(chat-local-to-self "Trying To Build Mill 1 (Excess Wood)")
)

(defrule  
    (building-type-count-total mill < 1)(building-type-count town-center > 0)
    (building-type-count-total lumber-camp < 1)
    (building-type-count-total dock < 1)    
    (game-time > 270)
    (wood-amount > 200)(not(civ-selected khmer))
    (can-build mill)    
=>
    (build mill)(chat-local-to-self "Trying To Build Mill 1 (Forced)")
)

(defrule  
    (current-age == feudal-age)(building-type-count town-center > 0)
    (building-type-count-total mill < 1)
    (wood-amount > 200)
    (can-build mill)
=>
    (build mill)
    (chat-local-to-self "Trying To Build Mill 1 (Forced - Feudal)")
)

(defrule  
    (building-type-count-total mill == 1)
    (current-age >= feudal-age)
    (wood-amount > 200)
    (building-type-count town-center > 0)    
    (building-type-count lumber-camp > 1)
    (or(up-compare-goal gl-weMovedPlace == 0)
    (building-type-count dock > 0))
    (not(civ-selected khmer))
    (dropsite-min-distance food > 12)
    (can-build mill)
=>
    (build mill)(chat-local-to-self "Trying To Build Mill 2")
    (up-modify-sn sn-mill-max-distance c:+ 24)
    (set-strategic-number sn-maximum-food-drop-distance 9) 
)

(defrule  
    (military-population > 4)
    (building-type-count-total mill == 2)
    (current-age >= feudal-age)
    (can-build mill)    (dropsite-min-distance food > 12)
    (wood-amount > 200)
    (building-type-count lumber-camp > 0)
    (building-type-count town-center > 0)
    (or(up-compare-goal gl-weMovedPlace == 0)(building-type-count dock > 0))        
    (not(civ-selected khmer))
=>
    (build mill)(chat-local-to-self "Trying To Build Mill 3")
    (up-modify-sn sn-mill-max-distance c:+ 12)
)

(defrule
	(current-age == imperial-age)(military-population > 40) 
    (resource-found food)(building-type-count-total mill < 5) 
    (dropsite-min-distance food > 3)
    (wood-amount > 800)
    (or(up-compare-goal gl-weMovedPlace == 0)(building-type-count dock > 0))    
    (can-build mill)(not(civ-selected khmer))
=>
    (chat-local-to-self "Trying To Build Mill")   
    (up-modify-sn sn-mill-max-distance c:+ 8)
    (build mill)
 )

; FARMS
; DARK AGE
(defrule
    (current-age == dark-age)(building-type-count town-center > 0)
    (building-type-count-total barracks > 0)(wood-amount > 175)
    (building-type-count-total lumber-camp > 0)
    ;(gaia-)
	(idle-farm-count < 1)
	(can-build farm)    
=>
	(build farm)
)

; FEUDAL AGE
(defrule
	(current-age == feudal-age)(building-type-count town-center > 0)
    (or
        (civ-selected gothic)
        (or
            (building-type-count-total archery-range > 0)    
            (building-type-count-total stable > 0)
        )
    )
    (wood-amount > 175)(food-amount < 2000)
	(idle-farm-count < 1)
	(can-build farm)
=>
    (build farm)
)

; CASTLE AGE
(defrule
	(current-age == castle-age)  
    (food-amount < 1200)(wood-amount > 176)
    (or
        (building-type-count monastery > 0)
        (building-type-count siege-workshop > 0)
    )
	(building-type-count-total farm < 20)
    (idle-farm-count < 3)    
	(can-build farm)
=>
	(build farm)
)

; IMPERIAL AGE
(defrule
	(current-age == imperial-age)
    (food-amount < 5000)(wood-amount > 300)
	(building-type-count-total farm < 32)
    (can-build farm)
=>
    (build farm)
)

; HOUSES
(defrule
    (or
        (wood-amount > 125)
        (and(civ-selected japanese)(wood-amount > 75))
    )
    (housing-headroom < 3)
    (population-headroom > 0)
    (up-can-build 0 c: house)
=>
    (chat-local-to-self "Trying To Build House")
    ;(build house) 
    (up-set-placement-data my-player-number -1 c: -9)
    (up-build place-control 0 c: house)
)



; LUMBER   
(defrule
    (building-type-count-total lumber-camp == 0)
    (up-can-build 0 c: lumber-camp)
    ;(resource-found wood)
    (or
        (building-type-count house > 0)
        (civ-selected hun)
    )
=>
    (chat-local-to-self "Trying To Build Special Lumber Camp")
    (up-set-placement-data my-player-number -1 c: -20)
    (up-build place-control 0 c: lumber-camp)
            
)

(defrule
    (building-type-count-total lumber-camp == 0)
    (can-build lumber-camp)
    (resource-found wood)
    ;(dropsite-min-distance wood > 20)
    (dropsite-min-distance wood > 3)
    (or
        (building-type-count house > 0)
        (civ-selected hun)
    )
=>
    (chat-local-to-self "Trying To Build Lumber Camp 1")
    (up-modify-sn sn-camp-max-distance c:+ 16)
    (build lumber-camp)
            
)



(defrule
    (current-age >= feudal-age)
    (building-type-count-total lumber-camp > 0)
    (building-type-count-total lumber-camp g:< gl-max-lumber-camps-qty) 	
    (resource-found wood)
    (dropsite-min-distance wood > 3)
    (can-build lumber-camp)
=>
    (chat-local-to-self "Trying To Build Lumber Camp")
    (build lumber-camp)             
)

; MINING CAMPS                    
; GOLD MINING CAMP
(defrule 
    (current-age == feudal-age)
    (wood-amount > 200)(gold-amount < 200) ;if more than 200 they are using nearby deposit
    (or(wood-amount > 275)(building-type-count town-center > 0))    
    (or(building-type-count archery-range > 0)(building-type-count market > 0))
    (research-completed ri-double-bit-axe)
    (building-type-count-total mining-camp == 0) 
    (resource-found gold) 
    (dropsite-min-distance gold > 3)
    (can-build mining-camp)
=>
    (up-chat-data-to-self "Trying To Build Mining Camp (Gold 1) - Max Distance: %d" s: sn-mining-camp-max-distance)      
    (build mining-camp)
)

(defrule 
    (current-age >= castle-age)
    (wood-amount > 200)    
    (or(wood-amount > 275)(building-type-count town-center > 0))      
    (or(building-type-count-total monastery > 0)
    (building-type-count-total dock > 1))
    (building-type-count-total mining-camp g:< gl-max-mining-camps-qty)
    (resource-found gold) 
    (dropsite-min-distance gold > 3)
    (can-build mining-camp)
=>
    (up-chat-data-to-self "Trying To Build Mining Camp (Gold) - Max Distance: %d" s: sn-mining-camp-max-distance)
    (build mining-camp)
)

; STONE MINING CAMP
(defrule
    (or(building-type-count castle < 1)(stone-amount < 650))
    (or
        (current-age >= castle-age)
        (and(building-type-count town-center < 0)(stone-amount < 100))
    )
    (wood-amount > 276)
    (or(stone-amount < 650)(and(civ-selected frankish)(stone-amount < 490)))    
    (resource-found stone) 
    (dropsite-min-distance stone > 3)
    (can-build mining-camp)
=>
    (up-chat-data-to-self "Trying To Build Mining Camp (Stone 1) - Max Distance: %d" s: sn-mining-camp-max-distance)      
    (build mining-camp) 
)

(defrule
    (building-type-count castle < 2)(stone-amount < 200)
    (or(current-age > castle-age)
    (and(building-type-count town-center < 0)(stone-amount < 100)))    
    (wood-amount > 276)
    (resource-found stone) 
    (dropsite-min-distance stone > 3)
    (can-build mining-camp)
=>
    (up-chat-data-to-self "Trying To Build Mining Camp (Stone 2) - Max Distance: %d" s: sn-mining-camp-max-distance)      
    (build mining-camp)
)

(defrule 
    (current-age > castle-age)
    (building-type-count-total monastery > 0)
    (building-type-count-total mining-camp g:< gl-max-mining-camps-qty)    
    (resource-found stone) 
    (dropsite-min-distance stone > 3)
    (can-build mining-camp)
=>
    (up-chat-data-to-self "Trying To Build Mining Camp (Stone) - Max Distance: %d" s: sn-mining-camp-max-distance)  
    (build mining-camp) 
)

; BLACKSMITH
(defrule
    (or(military-population > 4)
        (not(enemy-buildings-in-town))
    )
    (building-type-count-total blacksmith == 0)(wood-amount > 275)
    (building-type-count town-center > 0)    
    (or(building-type-count-total archery-range > 0)
        (or(civ-selected cumans)(civ-selected bohemians))
    )
    ;(research-completed ri-wheel-barrow)(research-completed ri-double-bit-axe)(research-completed ri-horse-collar)  
    (or(up-compare-goal gl-weMovedPlace == 0)(building-type-count dock > 0))
    (can-build blacksmith)
=>
    (chat-local-to-self "Trying to build blacksmith")
    (build blacksmith)(up-modify-sn sn-maximum-town-size c:+ 1)    
)

; MARKET
(defrule
    (or
        (or(food-amount > 1400)(stone-amount > 700))
        (or(wood-amount > 600)(gold-amount > 700))
    )
    (building-type-count town-center > 0)
    (or(wood-amount > 275)(and(civ-selected japanese)(wood-amount > 225)))
    (or(building-type-count siege-workshop > 0)(not(civ-selected cumans)))
    ;(players-unit-type-count any-ally villager > 0)
    (building-type-count-total market == 0)    
    (can-build market)
=>
    (chat-local-to-self "Trying To Build Market 1") 
    (up-modify-sn sn-maximum-town-size c:+ 2)
    (build market)
)

(defrule
    (players-building-type-count any-ally market > 0)
    (current-age == imperial-age)
    (building-type-count-total university > 0)
    (building-type-count-total castle > 0)
    (building-type-count-total barracks > 1)
    (building-type-count-total market == 1)    
    (can-build market)    
=>
    (chat-local-to-self "Trying To Build Market 2")(build market)  
)

(defrule
    (players-building-type-count any-ally market > 0)
    (current-age == imperial-age)
    (building-type-count-total university > 0)
    (building-type-count-total castle > 0)
    (building-type-count-total barracks > 1)(military-population > 60)
    (building-type-count-total market == 2)    
    (can-build market)
=>
    (chat-local-to-self "Trying To Build Market 3")(build market)  
)

(defrule
    (players-building-type-count any-ally market > 0)
    (building-type-count-total market == 3)
    (current-age == imperial-age)
    (building-type-count-total university > 0)(building-type-count-total castle > 0)
    (building-type-count-total barracks > 1)(military-population > 65)
    (can-build market)
=>
    (chat-local-to-self "Trying To Build Market 4")(build market) 
)

; UNIVERSITY
(defrule
    (or
        (and
            (building-type-count town-center > 0)
            (civ-selected bohemians)
        )    
        (building-type-count town-center > 1)        
    )    
    (building-type-count-total monastery > 0)  
    (research-completed ri-hand-cart)
    (research-completed ri-bow-saw)
    (research-completed ri-heavy-plow)
    (or
        (building-type-count-total house > 10)
        (or(civ-selected hun)(civ-selected bohemians))
    )
    (building-type-count-total university == 0)    
    (can-build university)
=>
    (chat-local-to-self "Trying To Build University")
    (up-modify-sn sn-maximum-town-size c:+ 2)(build university)    
)

; DOCK
(defrule ; experimental strategy to move the city to the coast
    ; can build dock doesnt really check the water
    (can-build dock)
    (not(up-research-status c: feudal-age == research-pending))
    (not(up-research-status c: ri-wheel-barrow == research-pending))
    (current-age < castle-age)
    (wood-amount > 325)
    (building-type-count lumber-camp > 0)
    (or
        (civ-selected italian)
        (or
            (civ-selected spanish)(civ-selected malay)
        )                
    )
    (enemy-buildings-in-town)
    (building-type-count-total dock < 1)
=>
    (chat-to-player my-player-number "MOVING TO THE COAST!")
    (set-strategic-number sn-town-center-placement lumber-camp)
    (up-modify-sn sn-mining-camp-max-distance c:+ 64)
    (up-modify-sn sn-lumber-camp-max-distance c:+ 64)                
    (up-assign-builders c: dock c:+ 3)
    (build dock)(delete-building town-center)              
    (build town-center)
    (set-strategic-number sn-maximum-food-drop-distance 0)
    (set-goal gl-weMovedPlace 1)
    (delete-building farm)(delete-building farm)(delete-building farm)
    (disable-self) 
)

(defrule
    (up-compare-goal gl-weMovedPlace > 0)
    (building-type-count town-center < 1)
    (building-type-count farm > 0)
=>
    (delete-building farm)(delete-building mill)
    (delete-building archery-range)(delete-building barracks)          
    ;(up-modify-sn sn-food-gatherer-percentage c: -12)
    ;(up-modify-sn sn-gold-gatherer-percentage c: +8)
    ;(set-strategic-number sn-maximum-gold-drop-distance 6)
    ;(up-modify-sn sn-stone-gatherer-percentage c: +4)
    (chat-local-to-self "Deleting farms cause no town center")                
)

(defrule
    (up-compare-goal gl-weMovedPlace > 0)
    (building-type-count town-center > 0)
    (building-type-count dock > 0)
    (building-type-count lumber-camp > 0)                
=>
    (set-strategic-number sn-maximum-food-drop-distance 19)
    (chat-local-to-self "FOOD DROP DISTANCE = 19")           
    (disable-self)
)

(defrule
    (can-build dock)(not(up-research-status c: feudal-age == research-pending))
    (building-type-count lumber-camp > 0)
    (building-type-count town-center > 0)        
    (wood-amount > 275)
    (building-type-count-total dock == 1)
=>
    (up-assign-builders c: dock c:+ 2)
    (build dock)
    (chat-local-to-self "DOCK 2")
)

(defrule
    (can-build dock)(not(up-research-status c: feudal-age == research-pending))
    (building-type-count lumber-camp > 0)
    (building-type-count town-center > 0)        
    (wood-amount > 275)
    (building-type-count-total dock == 2)
=>
    (build dock)
    (chat-local-to-self "DOCK 3")
)

(defrule
    (can-build dock)(not(up-research-status c: feudal-age == research-pending))
    (building-type-count lumber-camp > 0)
    (building-type-count town-center > 0)        
    (wood-amount > 275)
    (building-type-count-total dock == 3)
=>
    (build dock)
    (chat-local-to-self "DOCK 4")
)

(defrule
    (can-build dock)(not(up-research-status c: feudal-age == research-pending))
    (building-type-count lumber-camp > 0)
    (building-type-count town-center > 0)        
    (wood-amount > 275)
    (building-type-count-total dock == 4)
=>
    (build dock)
    (chat-local-to-self "DOCK 5")
)    



; MILITARY
; STONE WALL AND PALISADE WALL

; PREVIOUSLY ENABLE WALL, PERIMETER 1 OR 2
(defrule(true)=>(enable-wall-placement 1)(disable-self))

; GATE TYPE 1 = PALISADE, 2 = STONE
(defrule(civ-selected gothic)=>(set-strategic-number sn-gate-type-for-wall 1)(disable-self))

; GATES PERIMETER 1
(defrule 
    (or
        (building-type-count-total 72 > 0)
        (building-type-count-total stone-wall > 0)
    )
    (can-build-gate 1)
=>
    (build-gate 1)  
)

; GATES PERIMETER 2
(defrule 
    (or
        (building-type-count-total 72 > 0)
        (building-type-count-total stone-wall > 0)
    )
    (can-build-gate 2)
=>
    (build-gate 2)  
)

; USER PATCH WALL
(defconst gl-point-x 500)
(defconst gl-point-y 501)
(defconst gl-other-x 502)
(defconst gl-other-y 503)
(defconst gl-point-x2 504)
(defconst gl-point-y2 505)
(defconst gl-other-x2 506)
(defconst gl-other-y2 507)

(defrule
    (true)
=>
    (set-goal gl-point-x 35)
    (set-goal gl-other-x 35)
    (set-goal gl-point-y 90)
    (set-goal gl-other-y 90)
    (set-goal gl-point-x2 60)
    (set-goal gl-other-x2 120)
    (set-goal gl-point-y2 85)
    (set-goal gl-other-y2 95)    
)

(defrule
    (building-type-count-total 793 < 3)
    ;(up-can-build-line gl-point-y gl-other-y c: 793)
=>
    ;(up-build-line gl-point-y gl-other-y c: palisade-gate)
    ;(up-build-line gl-point-y gl-other-y c: 798)    ;diagonal left-right
    ;(up-build-line gl-point-y gl-other-y c: 801)    ;diagonal north-south   
    ;(up-build-line gl-point-y gl-other-y c: 789)    ;along y axis
    ;(up-build-line gl-point-y gl-other-y c: 793)    ;along x axis
    ;(chat-to-player my-player-number "BUILDING THE GATES TO THE WALL FRONT")
    (do-nothing)
)

; WALL
; STONE WALL PERIMETER 1
(defrule 
	(can-build-wall 1 stone-wall-line)
    (building-type-count castle > 0)(current-age == imperial-age)
    (military-population > 75)(unit-type-count-total villager > 65)
    (food-amount > 1300)(gold-amount > 1300)(wood-amount > 1300)
=>
	(build-wall 1 stone-wall-line) 
)

; PALISADE WALL PERIMETER 1
(defrule
    (building-type-count castle > 0)(current-age == imperial-age)
    (military-population > 75)(unit-type-count-total villager > 65)
    (food-amount > 1300)(gold-amount > 1300)(wood-amount > 1300)
	(can-build-wall 1 72)  
=>
	(build-wall 1 72)
)

; STONE WALL PERIMETER 2
(defrule 
	(can-build-wall 2 stone-wall-line)
    (building-type-count-total castle > 0)(current-age == imperial-age)
=>
	(build-wall 2  stone-wall-line)
)

; PALISADE WALL PERIMETER 2
(defrule 
	(can-build-wall 2 72)
    (building-type-count-total castle > 0)(current-age == imperial-age)
=>
	(build-wall 2 72)
)

; CASTLE            
(defrule
    (can-build castle)
    (building-type-count-total castle == 0)
=>
    (chat-local-to-self "Trying To Build Castle 1")
    (up-modify-sn sn-maximum-town-size c:+ 1)    
    (build castle) 
)
(defrule
    (can-build castle)
    (building-type-count-total castle == 0)
=>
    (chat-local-to-self "Trying To Build Castle 1 - 2nd attempt")
    (up-modify-sn sn-maximum-town-size c:+ 2)    
    (build castle) 
)

(defrule
    (building-type-count-total castle == 1)
    (can-build castle)
=>
    (chat-local-to-self "Trying To Build Castle 2")
    (up-modify-sn sn-maximum-town-size c:+ 4)     
    (build castle) 
)

(defrule
    (building-type-count-total castle == 999)
    (can-build castle)
=>
    (chat-local-to-self "Trying To Build Castle 3")
    (build castle) 
)

(defrule
    (building-type-count-total castle == 999)
    (civilian-population > 60)(military-population > 70)
    (can-build castle)    
=>
    (chat-local-to-self "Trying To Build FORWARD Castle 4")
    (build-forward castle) 
)

; MINI CASTLES (MEGA TOWERS?)
(defrule
    (building-type-count-total castle > 1)(building-type-count-total krepost < 4)
    (can-build krepost)
=>
    (build krepost)
    (up-modify-sn sn-maximum-town-size c:+ 1)   
)

(defrule 
    (building-type-count-total donjon < 64)
    (can-build donjon)    
=>
    (build donjon)
    (up-modify-sn sn-maximum-town-size c:+ 1)   
)

; MILITARY PRODUCTION BUILDINGS
; BARRACKS   
(defrule 
	(building-type-count-total barracks == 0)
    (building-type-count town-center > 0)
    (or
    	(or
            (and(building-type-count-total lumber-camp > 0)(wood-amount > 275))
            (and
                (and(building-type-count-total lumber-camp > 0)(wood-amount > 225))
                (civ-selected japanese)
            )            
        )
        (wood-amount > 305)
    )
    (can-build barracks)
=>
    (chat-local-to-self "Trying To Build Barracks 1")
    (build barracks)

)

(defrule
	(current-age == imperial-age)
	(building-type-count-total barracks == 1)
    (building-type-count town-center > 0)    
    (food-amount > 400)
    (or
        (and(building-type-count-total siege-workshop > 0)(building-type-count-total castle > 0))
        (civ-selected gothic)
    )
    (military-population > 40)    
    (can-build barracks)
=>  
    (chat-local-to-self "Trying To Build Barracks 2")
    (up-modify-sn sn-maximum-town-size c:+ 1)
    (up-modify-sn sn-minimum-town-size c:+ 1)        
    (build barracks)
)

(defrule
	(current-age == imperial-age)
	(building-type-count-total barracks == 2)
    (building-type-count town-center > 0)
    (wood-amount > 600)(food-amount > 600)
    (or
        (and(building-type-count-total siege-workshop > 0)(building-type-count-total castle > 0))
        (civ-selected gothic)
    )
    (can-build barracks)(military-population > 51)
=>
    (build barracks)(chat-local-to-self "Trying To Build Barracks 3")
    (up-modify-sn sn-maximum-town-size c:+ 1)
)

(defrule
	(current-age == imperial-age)(building-type-count-total barracks < 4)
    (can-build barracks)(wood-amount > 2000)(food-amount > 400)
=>
    (chat-local-to-self "Trying To Build Barracks")
    (up-modify-sn sn-maximum-town-size c:+ 1)(build barracks)
)

(defrule
	(game-time > 3600)(building-type-count-total barracks >= 4)
=>
    (chat-local-to-self "DELETING FIRST BARRACKS!")
    (delete-building barracks)
)

(defrule
    (civ-selected gothic)
    (current-age == imperial-age)
    (wood-amount > 3000)
    (can-build barracks)
=>
    (build barracks)(chat-local-to-self "Trying To Build Gothic Barracks")
    (up-modify-sn sn-maximum-town-size c:+ 1)
)

; ESTABLOS
(defrule
    (can-build stable)
    (or(wood-amount > 275)(building-type-count market > 0))
    (building-type-count lumber-camp > 0)
    (or
        (not(civ-selected japanese))(building-type-count archery-range > 0)
    )
    (or
        (not(civ-selected portuguese))(building-type-count archery-range > 0)
    )
    (building-type-count-total stable == 0)
    (or(up-compare-goal gl-weMovedPlace == 0)(building-type-count dock > 0)) 
=>
    (chat-local-to-self "Trying To Build Stable 1")
    (up-modify-sn sn-maximum-town-size c:+ 1)
    (build stable)         
)

(defrule
    (current-age == castle-age)
    (can-build stable)(building-type-count-total stable < 1)
=>
    (build stable)
    (chat-local-to-self "Trying To Build Stable 1") 
)

(defrule
	(current-age == imperial-age)(food-amount > 400)
	(building-type-count-total stable == 1)
    (building-type-count-total university > 0)
	(not(civ-selected gothic))	
    (can-build stable)(military-population > 60)
=>
    (build stable)(chat-local-to-self "Trying To Build Stable 2")
    (up-modify-sn sn-maximum-town-size c:+ 1)
)

(defrule
	(current-age == imperial-age)
    (wood-amount > 600)(food-amount > 600)
	(building-type-count-total stable == 2)
    (building-type-count-total university > 0)
	(not(civ-selected gothic))	
    (can-build stable)(military-population > 60)
=>
    (build stable)(chat-local-to-self "Trying To Build Stable 3")
    (up-modify-sn sn-maximum-town-size c:+ 1) 
)

(defrule
	(current-age == imperial-age)(building-type-count-total stable < 5)
    (can-build stable)(wood-amount > 4000)
    (not(civ-selected gothic))
=>
    (build stable)(chat-local-to-self "Trying To Build Stable")
)

; CONSTRUIR ARQUERIA
(defrule
	(building-type-count-total archery-range == 0)(wood-amount > 275)
    (building-type-count town-center > 0)
    (building-type-count lumber-camp > 0)
    (not(civ-selected cumans))
    (can-build archery-range)
=>
    (chat-local-to-self "Trying To Build Archery Range 1")
    (up-modify-sn sn-maximum-town-size c:+ 1)
    (build archery-range)
)

(defrule
	(building-type-count-total archery-range == 0)
    (building-type-count lumber-camp > 0)(building-type-count town-center > 0)
    (building-type-count siege-workshop > 0)      
    ;(research-completed ri-double-bit-axe)   
    (can-build archery-range)
    (civ-selected cumans)
=>
    (chat-local-to-self "Trying To Build Archery Range 1")
    (up-modify-sn sn-maximum-town-size c:+ 1)
    (up-modify-sn sn-minimum-town-size c:+ 2)
    (build archery-range)
)

(defrule
    (military-population > 5)
	(or(current-age == imperial-age)(enemy-buildings-in-town))
    (building-type-count-total market > 0)
    (building-type-count-total town-center > 1)
	(building-type-count-total archery-range == 1)
    (not(civ-selected gothic))
    (can-build archery-range)
=>
    (build archery-range)(chat-local-to-self "Trying To Build Archery Range 2")
)

(defrule
	(current-age == imperial-age)
    (wood-amount > 600)(food-amount > 600)
	(building-type-count-total archery-range == 2)
    (building-type-count-total university > 0)
    
    (not(civ-selected gothic))
    (can-build archery-range)(military-population > 60)
=>
    (build archery-range)(chat-local-to-self "Trying To Build Archery Range 3")
)

(defrule
	(current-age == imperial-age)(building-type-count-total archery-range < 5)
    (building-type-count-total archery-range >= 3)
    (not(civ-selected gothic))
    (can-build archery-range)(wood-amount > 4000)
=>
    (build archery-range)(chat-local-to-self "Trying To Build Archery Range")
    
)

; CONSTRUIR TALLER ASEDIO
(defrule
    (building-type-count-total siege-workshop == 0)
    (building-type-count town-center > 0)
    (building-type-count monastery > 0)    
	(not(civ-selected gothic))
    (or
        (building-type-count-total university == 1)
        (not(civ-selected bohemians))
    )
    (can-build siege-workshop)    
=>
    (chat-local-to-self "Trying To Build Siege Workshop 1")     
    (up-modify-sn sn-maximum-town-size c:+ 1)
    (build siege-workshop)  
)

(defrule
    (can-build siege-workshop)(military-population > 60)
    (wood-amount > 600)(food-amount > 600)
    (current-age == imperial-age)(building-type-count-total university > 0)(building-type-count-total castle > 0)
    (building-type-count-total siege-workshop == 1)
=>
    (build siege-workshop)(chat-local-to-self  "Trying To Build Siege Workshop 2")

)

(defrule
	(current-age == imperial-age)
	(building-type-count-total siege-workshop < 8)
    (building-type-count-total university > 0)(building-type-count-total castle > 0)
    (can-build siege-workshop)(wood-amount > 4000)(not(civ-selected gothic)) 
=>
    
    (build siege-workshop)(chat-local-to-self "Trying To Build Siege Workshop")

)

; MONASTERIO              
(defrule
    (or(building-type-count-total house > 3)(civ-selected hun))
    (building-type-count-total monastery == 0)(can-build monastery)
=> 
    (chat-local-to-self "Trying To Build Monastery 1")     
    (build monastery)
)

(defrule
    (building-type-count-total monastery == 2)(building-type-count-total castle > 0)(building-type-count-total town-center > 1)
    (can-build monastery)   
    (building-type-count-total house > 25)
    (civ-selected saracen)
=> 
    (chat-local-to-self "Trying To Build Monastery 2")         
    (build monastery)
)

; TOWER


; BOMBARD TOWER
(defrule
    (can-build bombard-tower)
    (gold-amount > 301)
    (building-type-count-total castle > 0)
=>
    (build bombard-tower)(up-modify-sn sn-maximum-town-size c:+ 1)  
)

; NORMAL TOWER
(defrule
    (current-age < castle-age)
    (town-under-attack)
    (not(up-research-status c: castle-age == research-pending))
    (or(building-type-count stable > 0)(building-type-count blacksmith > 0))
    ;(can-build watch-tower-line)
    (up-can-build 0 c: watch-tower)    
=>  
    ;(build watch-tower-line)
    (up-set-placement-data my-player-number -1 c: +3)    
    (up-build place-control 0 c: watch-tower)  
)

(defrule
	(current-age == imperial-age)
    (building-type-count-total castle > 1)
    (not(civ-selected teutonic))(not(civ-selected portuguese))
    (building-type-count watch-tower-line < 4)
    (not(can-build bombard-tower))    
    (can-build watch-tower-line)
=>
    (build watch-tower-line)(up-modify-sn sn-maximum-town-size c:+ 1)   
)

; 5. CREAR UNIDADES
; UNIDADES CIVILES                       
; ALDEANOS 
(defrule
    (civilian-population  < 7)
    (can-train villager)
=>
    (train villager)
)

(defrule
    (current-age == dark-age)
    (civilian-population  g:< gl-maxCiviliansDarkAge)
    (can-train villager)
=>
    (train villager)
)

(defrule
    (current-age == feudal-age)
    (civilian-population g:< gl-maxCiviliansFeudalAge)
    (can-train villager)
=>
    (train villager)
)

(defrule
    (current-age == castle-age)
    (civilian-population g:< gl-maxCiviliansCastleAge)
    (can-train villager)
=>
    (train villager)
)

(defrule
    (current-age == imperial-age)
    (civilian-population g:< gl-maxCiviliansImperialAge)
    (food-amount < 1000)(wood-amount < 1000)(gold-amount < 500)
    (can-train villager)
=>
    (train villager)
)

; TRADE CARTS
(defrule 
    (or(current-age == imperial-age)(up-research-status c: imperial-age == research-pending))
    (players-building-type-count any-ally market > 0)
    (unit-type-count-total trade-cart < 3)    
    (civilian-population < 100)
    (military-population > 4)
    (can-train trade-cart)
=>
	(train trade-cart)
)

(defrule 
    (or(current-age == imperial-age)(up-research-status c: imperial-age == research-pending))
    (players-building-type-count any-ally market > 0)
    (unit-type-count-total trade-cart < 6)    
    (civilian-population < 100)
    (military-population > 8)
    (can-train trade-cart)
=>
	(train trade-cart)
)

(defrule 
    (current-age == imperial-age)
    (players-building-type-count any-ally market  > 0)
    (unit-type-count-total trade-cart g:< gl-tradeCartsQty)    
    (civilian-population < 100)(military-population > 50)
=>
	(train trade-cart)
)

; FISH TRAPS
(defrule 
    (can-build fish-trap)(civ-selected malay)
    (building-type-count-total fish-trap < 8)
=>
	(build fish-trap)
)

; MILITARY UNITS
; MONASTERY  
; CASTLE AGE MONKS
(defrule
    (current-age == castle-age)
    (and
    (unit-type-count-total monk g:< gl-monkQtyLow) 
    (unit-type-count-total 286 g:< gl-monkQtyLow) 
    )
    (not(hold-relics))(not(enemy-buildings-in-town))
    (can-train monk)    
=>
    (train monk)
)

(defrule
    (current-age == castle-age)
    (or
        (civ-selected bohemians)(civ-selected byzantine)
    )
    (and
    (unit-type-count-total monk g:< gl-monkQtyMedium) 
    (unit-type-count-total 286 g:< gl-monkQtyMedium) 
    )
    (not(hold-relics))(not(enemy-buildings-in-town))
    (can-train monk)    
=>
    (train monk)
)

;IMPERIAL AGE MONKS
(defrule ;bengalis ?
    (current-age == imperial-age)
    (or
        (civ-selected bohemians)(civ-selected bohemians)
    )
    (unit-type-count-total monk g:< gl-monkQtyMedium) 
    (can-train monk)    
=>
    (train monk)
)

(defrule
    (current-age == imperial-age)
    (or
        (or
            (civ-selected mayan)
            (civ-selected byzantine)
        )
        (or
            (civ-selected teutonic)
            (civ-selected saracen)
        )     
    )
    (gold-amount > 400)
    (unit-type-count-total monk g:< gl-monkQtyHigh) 
    (can-train monk)
=>
    (train monk)
)

(defrule
    (current-age == imperial-age)
    (or
        (or
            (civ-selected aztec)
            (civ-selected aztec)
        )
        (or
            (civ-selected aztec)
            (civ-selected aztec)
        )     
    )
    (gold-amount > 400)
    (unit-type-count-total monk g:< gl-monkQtyHigh) 
    (can-train monk)
=>
    (train monk)
)

(defrule
    (current-age == imperial-age)
    (gold-amount > 1300)
    (can-train missionary)
=>
    (train missionary)
)

; CASTLE
; TREBUCHET
(defrule
    (or(military-population g:> gl-knightsQtyMedium)(enemy-buildings-in-town))
    (and
        (unit-type-count-total trebuchet g:< gl-trebuchetsQtyLow)
        (unit-type-count-total 954 g:< gl-trebuchetsQtyLow)
    )
    (military-population > 25)
    (not(civ-selected gothic)) 
    (can-train trebuchet)   
=>
    (train trebuchet)
)

(defrule
    (civ-selected hun)
    (and
        (unit-type-count-total trebuchet g:< gl-trebuchetsQtyMedium)
        (unit-type-count-total 954 g:< gl-trebuchetsQtyMedium)
    )
    (can-train trebuchet)
=>
    (train trebuchet)
)

(defrule
    (or
        (or
            (and(civ-selected tatars)(research-completed my-unique-research))
            (and(civ-selected japanese)(research-completed my-unique-research))
        )
        (and(civ-selected briton)(research-completed my-unique-research))    
    )
    (and
        (unit-type-count-total trebuchet g:< gl-trebuchetsQtyHigh)
        (unit-type-count-total 954 g:< gl-trebuchetsQtyHigh)
    )
    (wood-amount > 1000)(gold-amount > 1000)
    (can-train trebuchet)
=>
    (train trebuchet)
)

; PETARD    
(defrule
    (current-age == imperial-age)
    (civ-selected saracen)(gold-amount > 2100)
    (can-train petard)
=>
    (train petard)
)

; UNIQUE UNIT
; CASTLE AGE DEFENSE UU
(defrule
    (current-age == castle-age)
    (town-under-attack)(gold-amount > 860)  
    (unit-type-count-total my-unique-unit-line g:< gl-uniqueUnitQtyLow)
    (can-train my-unique-unit-line)
=>
    (train my-unique-unit-line)
)

; IMPERIAL AGE PRE UPGRADE UU 
; UNIQUE UNITS WHOSE UPGRADE COSTS SAME RESOURCE, MAKE ONLY A FEW 
; MAGYAR DONT MAKE THEM UNTIL UPGRADE
(defrule
	(current-age == imperial-age)(gold-amount > 500)
    (not(research-completed my-unique-unit-upgrade))
    (or
        (or
            (or
                (civ-selected byzantine)(civ-selected celtic)
            )
            (or
                (civ-selected gothic)(civ-selected japanese)
            )
        )    
        (or
            (or
                (civ-selected persian)(civ-selected saracen)
            )
            (or
                (civ-selected teutonic)(civ-selected turkish)
            )
        )            
    )
    (up-compare-goal gl-nonUpgradedUniqueUnitsCreated < 6)    
    (can-train my-unique-unit-line)    
=>
	(train my-unique-unit-line)
    (up-modify-goal gl-nonUpgradedUniqueUnitsCreated c:+ 1)
    (up-chat-data-to-self "Training Non Upgraded Unique Unit Nº %d" g: gl-nonUpgradedUniqueUnitsCreated)
)

(defrule 
	(current-age == imperial-age)(gold-amount > 500)
    (not(research-completed my-unique-unit-upgrade))
    (or
        (or
            (or
                (civ-selected viking)(civ-selected korean)
            )
            (or
                (civ-selected spanish)(civ-selected incan)
            )
        )    
        (or
            (or
                (civ-selected slavic)(civ-selected ethiopian)
            )
            (or
                (civ-selected malian)(civ-selected khmer)
            )
        )            
    )
    (up-compare-goal gl-nonUpgradedUniqueUnitsCreated < 6)    
    (can-train my-unique-unit-line)    
=>
	(train my-unique-unit-line)
    (up-chat-data-to-self "Training Non Upgraded Unique Unit Nº %d" g: gl-nonUpgradedUniqueUnitsCreated)
    (up-modify-goal gl-nonUpgradedUniqueUnitsCreated c:+ 1)
)

(defrule 
	(current-age == imperial-age)(gold-amount > 500)
    (not(research-completed my-unique-unit-upgrade))
    (or
        (or
            (or
                (civ-selected malay)(civ-selected bulgarians)
            )
            (or
                (civ-selected lithuanians)(civ-selected tatars)
            )
        )    
        (or
            (or
                (civ-selected burgundians)(civ-selected sicilians)
            )
            (or
                (civ-selected bohemians)(civ-selected poles)
            )
        )            
    )
    (up-compare-goal gl-nonUpgradedUniqueUnitsCreated < 6)    
    (can-train my-unique-unit-line)    
=>
	(train my-unique-unit-line)
    (up-chat-data-to-self "Training Non Upgraded Unique Unit Nº %d" g: gl-nonUpgradedUniqueUnitsCreated)
    (up-modify-goal gl-nonUpgradedUniqueUnitsCreated c:+ 1)
)

(defrule 
	(current-age == imperial-age)(gold-amount > 500)
    (not(research-completed my-unique-unit-upgrade))
    (or
        (or
            (or
                (civ-selected dravidians)(civ-selected gurjaras)
            )
            (or
                (civ-selected indian)(civ-selected frankish)
            )
        )
        (civ-selected tatars); repeated
    )           
    (up-compare-goal gl-nonUpgradedUniqueUnitsCreated < 6)    
    (can-train my-unique-unit-line)    
=>
	(train my-unique-unit-line)
    (up-chat-data-to-self "Training Non Upgraded Unique Unit Nº %d" g: gl-nonUpgradedUniqueUnitsCreated)
    (up-modify-goal gl-nonUpgradedUniqueUnitsCreated c:+ 1)
)

; UNIQUE UNITS WHOSE UPGRADE COSTS A --DIFFERENT-- RESOURCE
; KEEP A SMALL QTY WITH NO TOTAL LIMIT
; BENGALIS, BERBERS HAVE THEIR OWN SECTION
(defrule
    (not(research-completed my-unique-unit-upgrade))
    (or
        (or
            (or
                (civ-selected briton)(civ-selected chinese)
            )
            (or
                (civ-selected mayan)(civ-selected mongol)
            )
        )    
        (or
            (or
                (civ-selected italian)(civ-selected portuguese)
            )
            (or
                (civ-selected burmese)(civ-selected vietnamese)
            )
        )            
    )
    (unit-type-count-total my-unique-unit-line g:< gl-uniqueUnitQtyLow)
    (gold-amount > 460) ;trebuchets and mangonels have priority   
    (can-train my-unique-unit-line)    
=>
	(train my-unique-unit-line)
)

(defrule
    (not(research-completed my-unique-unit-upgrade))
    (or
        (civ-selected cumans)(civ-selected cumans)
    )
    (unit-type-count-total my-unique-unit-line g:< gl-uniqueUnitQtyLow)
    (gold-amount > 460)    
    (can-train my-unique-unit-line)    
=>
	(train my-unique-unit-line)
)

; IMPERIAL AGE AFTER UPGRADE UU
(defrule
    (current-age == imperial-age)
    (research-completed my-unique-unit-upgrade)
    (gold-amount > 350)
    (not(civ-selected ethiopian))(not(civ-selected gothic))
    (not(civ-selected berbers)) 
    (unit-type-count-total my-unique-unit-line g:< gl-uniqueUnitQtyMedium)    
    (can-train my-unique-unit-line)
=>
    (train my-unique-unit-line)
    (chat-local-to-self "Training Upgraded Unique Unit")
)

; BERBER UU - upgrade costs same resource
(defrule
    (civ-selected berbers)
    (not(research-completed my-unique-unit-upgrade))
	(or(current-age == imperial-age)(gold-amount > 800))
    (gold-amount > 460)
    (or(up-compare-goal gl-dudeHasCavalryArchers == 1)
    (up-compare-goal gl-dudeHasMilitia == 1))
    (up-compare-goal gl-nonUpgradedUniqueUnitsCreated < 10)       
	(can-train my-unique-unit-line)
=>
	(train my-unique-unit-line)
    (up-modify-goal gl-nonUpgradedUniqueUnitsCreated c:+ 1)
)

(defrule
    (civ-selected berbers)
    (research-completed my-unique-unit-upgrade)
	(current-age == imperial-age)
    (gold-amount > 360)
    (or(up-compare-goal gl-dudeHasCavalryArchers == 1)
    (up-compare-goal gl-dudeHasMilitia == 1)) 
    (unit-type-count-total my-unique-unit-line g:< gl-uniqueUnitQtyLow)    
	(can-train my-unique-unit-line)
=>
	(train my-unique-unit-line)
)

; BENGALI UU - upgrade costs different resource
(defrule
    (civ-selected bengalis)
	(current-age == imperial-age)
    (gold-amount > 360)
    (or(up-compare-goal gl-dudeHasSpearmen == 1)
    (up-compare-goal gl-dudeHasMilitia == 1))
    (unit-type-count-total my-unique-unit-line g:< gl-uniqueUnitQtyMedium)    
	(can-train my-unique-unit-line)
=>
	(train my-unique-unit-line)
    (up-modify-goal gl-nonUpgradedUniqueUnitsCreated c:+ 1)
    (up-chat-data-to-self "Training Non Upgraded Chariot %d" g: gl-nonUpgradedUniqueUnitsCreated)
)

; BRITON UU - upgrade costs different resource
(defrule
    (civ-selected briton)
    ;(research-completed my-unique-unit-upgrade)
    (wood-amount > 200)(gold-amount > 240)
    (can-train my-unique-unit-line)    
=>
    (train my-unique-unit-line)
)

; GOTH UU - goth spam!
(defrule
	(civ-selected gothic)
	(can-train 761)
=>
	(train 761)
    (chat-local-to-self "Training Barracks Huskarl")
)

(defrule
	(civ-selected gothic)
	(can-train 759)
=>
	(train 759)
    (chat-local-to-self "Training Barracks Huskarl")    
)

(defrule
	(civ-selected gothic)
    (not(can-train 761))(not(can-train 759))
    (can-train huskarl-line)
=>
    (chat-local-to-self "Training Castle Huskarl")    	
    (train huskarl-line)
)

; HUN UU
(defrule
    (can-train stable-tarkan)
=>
    (train stable-tarkan)
)

; MALAY UU
(defrule
    (civ-selected malay)
    (town-under-attack)  
    (can-train my-unique-unit-line)
=>
    (train my-unique-unit-line)
)

; SICILIAN UU
;(defrule(can-train donjon-serjeant-line)=>(train donjon-serjeant-line))


; TATAR UU
(defrule
    (civ-selected tatars)
	(current-age == imperial-age)
	(unit-type-count-total my-unique-unit-line g:< gl-uniqueUnitQtyMedium)
    (gold-amount > 201)
	
	(can-train my-unique-unit-line)
=>
	(train my-unique-unit-line)
)


; SIEGE WORKSHOP
; BOMBARD CANNON
(defrule
	(unit-type-count-total houfnice < 8)
	(can-train houfnice)
=>
	(train houfnice)
)

(defrule
	(unit-type-count-total bombard-cannon < 8)(not(can-train houfnice))
	(can-train bombard-cannon)(not(civ-selected korean))(not(civ-selected ethiopian))
=>
	(train bombard-cannon)
)

; MANGONEL
(defrule
    (current-age == feudal-age)
    (town-under-attack)
    (unit-type-count-total mangonel-line < 1)
    (or    
        (unit-type-count-total monk > 4)
        (hold-relics)
    )
	(can-train mangonel-line)
=>
    (train mangonel-line)
)

(defrule
    (current-age == castle-age)
    (building-type-count town-center > 0)     
    (unit-type-count-total mangonel-line g:< gl-mangonelQtyLow)
    (or
        (up-compare-goal gl-dudeHasArchers == 0)
        (up-compare-goal gl-dudeHasCavalryArchers == 0)
    )
    ;(up-compare-goal gl-dudeHasCavalry == 0)
    (or    
        (unit-type-count-total monk > 4)
        (hold-relics)
    )    
	(can-train mangonel-line)
=>
    (train mangonel-line)
)

(defrule
    (current-age == imperial-age)
    (gold-amount > 201)
    (can-train mangonel-line)
    (unit-type-count-total mangonel-line g:< gl-mangonelQtyLow)
=>
    (train mangonel-line)
)

(defrule
    (or
        (civ-selected korean)
        (civ-selected celtic)
    )
    (current-age == imperial-age)
	(can-train mangonel-line)
=>
    (train mangonel-line)
)

; RAM
(defrule
    (current-age == feudal-age)(civ-selected cumans)
    (unit-type-count-total battering-ram-line < 2)
    (can-train battering-ram-line)    
=>
	(train battering-ram-line)
)

(defrule
    (current-age == feudal-age)(civ-selected cumans)
    (building-type-count stable > 0)
    (can-train battering-ram-line)    
=>
	(train battering-ram-line)
)

(defrule
    (current-age == castle-age)
	(unit-type-count-total battering-ram-line g:< gl-ramQtyLow)
    (enemy-buildings-in-town)
    (military-population > 25)
    (not(civ-selected gothic))
    (can-train battering-ram-line)
=>
	(train battering-ram-line)
)

(defrule
    (current-age == imperial-age)
	(unit-type-count-total battering-ram-line g:< gl-ramQtyLow)
    (not(civ-selected gothic))
    (not(civ-selected vietnamese))
    (military-population > 25)    
    (can-train battering-ram-line)
=>
	(train battering-ram-line)
)

(defrule
    (current-age == imperial-age)
	(unit-type-count-total battering-ram-line g:< gl-ramQtyMedium)
        (military-population > 50)
    (gold-amount > 200)
	(can-train battering-ram-line)(not(civ-selected vietnamese))(not(civ-selected portuguese))
	(not(civ-selected korean))(not(civ-selected poles))(not(civ-selected tatars))(not(civ-selected gothic)) 
    (not(civ-selected celtic))(not(civ-selected khmer))(not(civ-selected berbers)) 
    ;(not(civ-selected persian))(not(civ-selected spanish))
=>
	(train battering-ram-line)
)

; SCORPIONS 

(defrule
    (current-age == castle-age)
    (can-train scorpion-line)
    (unit-type-count-total scorpion-line g:< gl-scorpionQty)
    (military-population > 45)
    (civ-selected chinese)  
=>
    (train scorpion-line)
)

(defrule
    (current-age == imperial-age)
    (gold-amount > 245)
    (can-train scorpion-line)
    (unit-type-count-total scorpion-line g:< gl-scorpionQty)
    (or
        (or
            (or
                (or
                    (civ-selected viking)
                    (civ-selected celtic)  
                )
                (or
                    (civ-selected mongol)
                    (civ-selected berbers)  
                )
            )
            (or
                (or
                    (civ-selected teutonic)
                    (civ-selected slavic)  
                )
                (or
                    (civ-selected burmese)
                    (civ-selected sicilians)  
                )      
            )            
        )
        (or
            (or
                (or
                    (civ-selected ethiopian)
                    (civ-selected chinese)  
                )
                (or
                    (civ-selected magyar)
                    (civ-selected malay)  
                )                    
            )       
            (or
                (civ-selected incan)
                (civ-selected japanese)  
            )        
        )
    )	
=>
    (train scorpion-line)
)

(defrule
    (current-age == imperial-age)(research-completed my-unique-research)
    (can-train scorpion-line)
    (wood-amount > 200)
    (civ-selected khmer)
=>
    (train scorpion-line)
)

; SIEGE ELEPHANT
(defrule
    (current-age == castle-age)(food-amount > 400)(gold-amount > 300)
	(unit-type-count-total armored-elephant-line g:< gl-ramQtyLow)
    (or(enemy-buildings-in-town)(military-population > 45))
    (military-population > 25)
    (can-train armored-elephant-line)
=>
	(train armored-elephant-line)
)

(defrule
    (current-age == imperial-age)
	(unit-type-count-total armored-elephant-line g:< gl-ramQtyHigh)
    (military-population > 25)    
    (can-train armored-elephant-line)
=>
	(train armored-elephant-line)
)

; PUERTO MILITARES                                 
; BARCOS ESPECIALES
; COREANOS
(defrule
    (unit-type-count-total turtle-ship-line < 4)
    (research-completed ri-careening)
    (current-age == imperial-age)    
    (can-train turtle-ship-line)
=>
    (train turtle-ship-line)
)

; VIKINGOS
(defrule
    (unit-type-count-total longboat-line < 4)(research-completed ri-careening)
    (current-age == imperial-age)    
    (can-train longboat-line)
=>
    (train longboat-line)
)

; PORTUGUESES   
(defrule
    (unit-type-count-total caravel-line < 4)(research-completed ri-careening)
    (current-age == imperial-age)
    (can-train caravel-line)
=>
    (train caravel-line)
)

; CAnONERO
(defrule
    (unit-type-count-total cannon-galleon-line < 4)
    (can-train elite-cannon-galleon)
=>
    (train elite-cannon-galleon)
)

(defrule
    (current-age == imperial-age)
    (research-completed ri-careening)
    (unit-type-count-total cannon-galleon-line < 4)
    (can-train cannon-galleon-line)
=>
    (train cannon-galleon-line)
)

; GALLEY
(defrule
    (unit-type-count-total galley-line < 1)
    (or(wood-amount > 275)(building-type-count town-center > 0))    
    (wood-amount > 190)
    (can-train galley-line)
=>
    (train galley-line)
)

(defrule
    (unit-type-count-total galley-line < 5)
    (or(wood-amount > 275)(building-type-count town-center > 0))    
    (building-type-count dock > 1)    
    (wood-amount > 190)
    (can-train galley-line)
=>
    (train galley-line)
)

(defrule
    (unit-type-count-total galley-line < 7)
    (or(wood-amount > 275)(building-type-count town-center > 0))    
    (building-type-count dock > 2)    
    (wood-amount > 190)
    (can-train galley-line)
=>
    (train galley-line)
)

(defrule
    (unit-type-count-total galley-line < 9)
    (or(wood-amount > 275)(building-type-count town-center > 0))    
    (building-type-count dock > 3)    
    (wood-amount > 190)
    (can-train galley-line)
=>
    (train galley-line)
)

(defrule
    (unit-type-count-total galley-line < 11)
    (or(wood-amount > 275)(building-type-count town-center > 0))    
    (building-type-count dock > 4)    
    (wood-amount > 190)
    (can-train galley-line)
=>
    (train galley-line)
)

(defrule
    (current-age == imperial-age)
    (or(wood-amount > 275)(building-type-count town-center > 0))    
    (research-completed ri-careening)
    (unit-type-count-total galley-line < 4)
    (can-train galley-line)
=>
    (train galley-line)
)

; FIRE SHIP
(defrule
    (unit-type-count-total fire-ship-line < 1)
    (wood-amount > 190)    
    (players-building-type-count any-enemy warship-class > 0)
    (can-train fire-ship-line)
=>
    (train fire-ship-line)
)

(defrule
    (unit-type-count-total fire-ship-line < 5)
    (building-type-count dock > 1)    
    (wood-amount > 190)
    (players-building-type-count any-enemy warship-class > 0)    
    (can-train fire-ship-line)
=>
    (train fire-ship-line)
)

(defrule
    (unit-type-count-total fire-ship-line < 7)
    (building-type-count dock > 2)    
    (wood-amount > 190)
    (players-building-type-count any-enemy warship-class > 0)    
    (can-train fire-ship-line)
=>
    (train fire-ship-line)
)

(defrule
    (unit-type-count-total fire-ship-line < 9)
    (building-type-count dock > 3)    
    (wood-amount > 190)
    (players-building-type-count any-enemy warship-class > 0)    
    (can-train fire-ship-line)
=>
    (train fire-ship-line)
)

(defrule
    (unit-type-count-total fire-ship-line < 11)
    (building-type-count dock > 4)    
    (wood-amount > 190)
    (players-building-type-count any-enemy warship-class > 0)    
    (can-train fire-ship-line)
=>
    (train fire-ship-line)
)

(defrule
    (current-age == imperial-age)
    (research-completed ri-careening)
    (players-building-type-count any-enemy warship-class > 0)    
    (unit-type-count-total fire-ship-line < 4)
    (can-train fire-ship-line)
=>
    (train fire-ship-line)
)

; STABLE
; STEPPE LANCER
(defrule
    (current-age == castle-age)
    (or(unit-type-count-total monk > 4)(hold-relics))
    (unit-type-count-total steppe-lancer-line g:< gl-knightsQtyLow)   
    (can-train steppe-lancer-line)
=>
    (train steppe-lancer-line)
)

(defrule
    (current-age == imperial-age)
    (unit-type-count-total steppe-lancer-line g:< gl-knightsQtyMedium)
    (not
        (and(up-compare-goal gl-dudeHasCavalry == 1)
            (can-train camel-line))
    )
    (not(can-train steppe-lancer-line))    
    (can-train steppe-lancer-line)
=>
    (train steppe-lancer-line)
)

; ELEPHANTS
(defrule
    (current-age == castle-age)
    (or(unit-type-count-total monk > 4)(hold-relics))
    (unit-type-count-total battle-elephant-line < 4)
    (not
        (and(up-compare-goal gl-dudeHasCavalry == 1)
            (can-train camel-line))
    ) 
    (can-train battle-elephant-line)
=>
    (train battle-elephant-line)
)

(defrule
    (current-age == imperial-age)(gold-amount > 470)
	(not(civ-selected khmer))
    (can-train battle-elephant-line)        
=>
    (train battle-elephant-line)
)

; SCOUTS
; DISABLE SELF SCOUTS
(defrule
	(can-train scout-cavalry-line)    
=>
    (train scout-cavalry-line)
    (up-modify-goal gl-totalSoldiersCreatedThisAge c:+ 1)(disable-self)
)

(defrule
	(can-train scout-cavalry-line)    
=>
    (train scout-cavalry-line)
    (up-modify-goal gl-totalSoldiersCreatedThisAge c:+ 1)(disable-self)
)

; FEUDAL AGE SCOUTS
(defrule
	(current-age == feudal-age) ; just cause they are good
    (research-completed ri-wheel-barrow)
    (or(civ-selected mongol)(civ-selected turkish)) 
    (up-compare-goal gl-totalSoldiersCreatedThisAge g:< gl-maximumSoldiersFeudal)    
	(unit-type-count-total scout-cavalry-line g:< gl-scoutsQtyLow)
	(can-train scout-cavalry-line)    
=>
    (train scout-cavalry-line)
    (up-modify-goal gl-totalSoldiersCreatedThisAge c:+ 1)
)

(defrule
	(current-age == feudal-age) ; counter to archers
    (town-under-attack)
    (or(up-compare-goal gl-dudeHasArchers == 1)
    (up-compare-goal gl-dudeHasSkirmishers == 1))
    (not(civ-selected celtic))
    (not(civ-selected japanese))
    (not(civ-selected portuguese))    
	(unit-type-count-total scout-cavalry-line g:< gl-scoutsQtyMedium)
	(can-train scout-cavalry-line)    
=>
    (train scout-cavalry-line)
    (up-modify-goal gl-totalSoldiersCreatedThisAge c:+ 1)
)

; CASTLE AGE SCOUTS
(defrule
	(current-age == castle-age)
    (research-completed ri-hand-cart)
    (or(up-compare-goal gl-dudeHasArchers == 1)
    (up-compare-goal gl-dudeHasSkirmishers == 1))    
    (unit-type-count-total scout-cavalry-line g:< gl-scoutsQtyLow)    
	(can-train scout-cavalry-line)
=>
    (train scout-cavalry-line)
)

(defrule
	(current-age == castle-age)
    (town-under-attack)(food-amount > 1300)
    (or(up-compare-goal gl-dudeHasArchers == 1)
    (up-compare-goal gl-dudeHasSkirmishers == 1))    
    ;(up-compare-goal gl-dudeHasSpearmen == 0)
    (not(civ-selected japanese))
    (unit-type-count-total scout-cavalry-line g:< gl-scoutsQtyMedium)    
	(can-train scout-cavalry-line)
=>
    (train scout-cavalry-line)
)

; IMPERIAL AGE SCOUTS
(defrule
	(current-age == imperial-age)(food-amount > 1500)(gold-amount < 1400)
    (research-completed ri-hand-cart)(research-completed ri-bow-saw)
    (research-completed ri-heavy-plow)          
    (not(civ-selected japanese))(not(civ-selected viking))(not(civ-selected gothic))
    (unit-type-count-total scout-cavalry-line g:< gl-scoutsQtyMedium)     
	(can-train scout-cavalry-line)    
=>
    (train scout-cavalry-line)
)

(defrule
	(can-train scout-cavalry-line)
    (research-completed my-unique-research)
    (civ-selected poles)
=>
    (train scout-cavalry-line)
)

; CAMEL 
(defrule
    (current-age == castle-age)
    ;(up-compare-goal gl-dudeHasCavalry == 1)
	(unit-type-count-total monk > 4)    
	(unit-type-count-total camel-line g:< gl-camelQtyMedium)
	(can-train camel-line)    
=>
    (train camel-line)
)

(defrule
    (current-age == castle-age)
    (up-compare-goal gl-dudeHasCavalry == 1)
    (up-compare-goal gl-dudeHasSpearmen == 0)       
	(unit-type-count-total camel-line g:< gl-camelQtyMedium)
	(can-train camel-line)    
=>
    (train camel-line)
)

(defrule
	(current-age == imperial-age)
    (gold-amount > 260)
	(unit-type-count-total camel-line g:< gl-camelQtyMedium)
	(can-train camel-line)    
=>
    (train camel-line)
)

; KNIGHTS
; KNIGHTS IN CASTLE AGE
(defrule
    (current-age == castle-age)
    (or(unit-type-count-total monk > 4)(hold-relics))
    (unit-type-count-total knight-line g:< gl-knightsQtyLow)
    (not(can-train battle-elephant-line))
    (not
        (and(up-compare-goal gl-dudeHasCavalry == 1)
            (can-train camel-line))
    )
    (not(civ-selected turkish)) ;use light cav
    (not(civ-selected vietnamese))    ;elephants will improve later
    (not(civ-selected malay)) ;ele are cheaper
    (not(can-train steppe-lancer-line))    
    (can-train knight-line)
=>
    (train knight-line)
)

(defrule
    (current-age == castle-age)(gold-amount > 220)
    (unit-type-count-total knight-line g:< gl-knightsQtyLow)
    (up-compare-goal gl-dudeHasSpearmen == 0)
    (or
        (up-compare-goal gl-dudeHasArchers == 1)
        (or
            (up-compare-goal gl-dudeHasSkirmishers == 1)
            (up-compare-goal gl-dudeHasCavalryArchers == 1)
        )
    )        
    (or
        (or
            (civ-selected bulgarians)            
            (or 
                (civ-selected frankish)        
                (civ-selected malian)
            )
        )
        (or
            (or 
                (civ-selected poles)
                (civ-selected sicilians)
            )
            (civ-selected teutonic)            
        )   
    )
    (can-train knight-line)
=>
    (train knight-line)
)

; KNIGHTS IN IMPERIAL AGE
(defrule
    (current-age == imperial-age)
    (food-amount > 400)(gold-amount > 400)
	(unit-type-count-total knight-line g:< gl-knightsQtyMedium)
    ;(up-compare-goal gl-dudeHasSpearmen == 0)
    (or
        (or
            (civ-selected briton)            
            (or 
                (civ-selected frankish)        
                (civ-selected malian)
            )
        )
        (or
            (or 
                (civ-selected poles)
                (civ-selected sicilians)
            )
            (civ-selected teutonic)            
        )   
    )
    (can-train knight-line)
=>
    (train knight-line)
)

(defrule
    (current-age == imperial-age)
    (food-amount > 400)(gold-amount > 400)
	(unit-type-count-total knight-line g:< gl-knightsQtyMedium)
    ;(up-compare-goal gl-dudeHasSpearmen == 0)
    (or
        (or
            (civ-selected bulgarians)            
            (or 
                (civ-selected frankish)        
                (civ-selected malian)
            )
        )
        (or
            (or 
                (civ-selected poles)
                (civ-selected sicilians)
            )
            (civ-selected teutonic)            
        )   
    )
    (can-train knight-line)
=>
    (train knight-line)
)

; ARCHERY RANGE
; ARCHER

(defrule
    (current-age == feudal-age) ;Cav archer not available
    (gold-amount > 245)
    (research-completed ri-wheel-barrow)              
    (can-train archer-line)
=>
    (train archer-line)(disable-self)
)

(defrule
    (current-age == feudal-age) ;Cav archer not available
    (or(up-compare-goal gl-dudeHasSpearmen == 1)
    (up-compare-goal gl-dudeHasMilitia == 1))
    (or(gold-amount > 245)(food-amount < 100))         
    (unit-type-count-total archer-line g:< gl-archerQtyLow)    
    (can-train archer-line)
=>
    (train archer-line)
)

; ARCHERS FEUDAL AGE
(defrule
    (current-age == castle-age)
    (research-completed ri-hand-cart)
    (building-type-count town-center > 0) 
    (or(up-compare-goal gl-dudeHasSpearmen == 1)
    (up-compare-goal gl-dudeHasMilitia == 1))    
    (or(gold-amount > 845)(food-amount < 100))
    (or
        (wood-amount > 325)
        (and(building-type-count market > 0)
        (building-type-count blacksmith > 0))
    )
    (wood-amount > 145)    
	(not(civ-selected gothic))(not(civ-selected mongol))
    (not(civ-selected frankish))(not(civ-selected cumans))
    (not(civ-selected tatars))          
    (not(civ-selected berbers))    
	(unit-type-count-total archer-line g:< gl-archerQtyMedium)    
    (can-train archer-line)     
=>
	(train archer-line)
)

; ARCHERS IMPERIAL AGE
; CIVS WITH NO CROSSWBOW
(defrule
    (current-age == imperial-age)
    (wood-amount > 525)(gold-amount > 545)
    (or(civ-selected bulgarians)(civ-selected spanish))
    (up-compare-goal gl-dudeHasSpearmen == 1)
    (unit-type-count-total archer-line g:< gl-archerQtyLow)    
	(can-train archer-line)
=>
	(train archer-line)
)
; CIVS WITH NO ARBALESTER
(defrule
    (current-age == imperial-age)
    (wood-amount > 525)(gold-amount > 545)
    (or
        (or(civ-selected berbers)(civ-selected burgundians))
        (or(civ-selected burmese)(civ-selected gothic))    
    )
    (up-compare-goal gl-dudeHasSpearmen == 1)    
    (unit-type-count-total archer-line g:< gl-archerQtyMedium)    
	(can-train archer-line)
=>
	(train archer-line)
)

(defrule
    (current-age == imperial-age)
    (wood-amount > 525)(gold-amount > 545)
    (or
        (or(civ-selected celtic)(civ-selected cumans))
        (or(civ-selected frankish)(civ-selected gothic))    
    )
    (up-compare-goal gl-dudeHasSpearmen == 1)    
    (unit-type-count-total archer-line g:< gl-archerQtyMedium)    
	(can-train archer-line)
=>
	(train archer-line)
)

(defrule
    (current-age == imperial-age)
    (wood-amount > 525)(gold-amount > 545)
    (or
        (or(civ-selected gurjaras)(civ-selected huns))
        (or(civ-selected hindustanis)(civ-selected lithuanians))    
    )
    (up-compare-goal gl-dudeHasSpearmen == 1)    
    (unit-type-count-total archer-line g:< gl-archerQtyMedium)    
	(can-train archer-line)
=>
	(train archer-line)
)

(defrule
    (current-age == imperial-age)
    (wood-amount > 525)(gold-amount > 545)
    (or
        (or(civ-selected slavs)(civ-selected tatars))
        (or(civ-selected teutonic)(civ-selected turkish))    
    )
    (up-compare-goal gl-dudeHasSpearmen == 1)    
    (unit-type-count-total archer-line g:< gl-archerQtyMedium)    
	(can-train archer-line)
=>
	(train archer-line)
)

; CIVS WITH ARBALESTER NOT FULLY UPG
(defrule
    (current-age == imperial-age)
    (wood-amount > 425)(gold-amount > 445)
    (or
        (or(civ-selected aztec)(civ-selected bengalis))
        (or(civ-selected bohemians)(civ-selected khmer))    
    )
    (up-compare-goal gl-dudeHasSpearmen == 1)    
    (unit-type-count-total archer-line g:< gl-archerQtyMedium)    
	(can-train archer-line)
=>
	(train archer-line)
)

(defrule
    (current-age == imperial-age)
    (wood-amount > 425)(gold-amount > 445)
    (or
        (or(civ-selected malian)(civ-selected mongol))
        (or(civ-selected poles)(civ-selected khmer))    
    )
    (up-compare-goal gl-dudeHasSpearmen == 1)    
    (unit-type-count-total archer-line g:< gl-archerQtyMedium)    
	(can-train archer-line)
=>
	(train archer-line)
)

(defrule
    (current-age == imperial-age)
    (wood-amount > 425)(gold-amount > 445)
    (or
        (or(civ-selected viking)(civ-selected viking))
        (or(civ-selected viking)(civ-selected viking))    
    )
    (up-compare-goal gl-dudeHasSpearmen == 1)    
    (unit-type-count-total archer-line g:< gl-archerQtyMedium)    
	(can-train archer-line)
=>
	(train archer-line)
)

; CIVS WITH ARBALESTER UPGRADED
(defrule
    (current-age == imperial-age)
    (wood-amount > 325)(gold-amount > 445)
    (or
        (or(civ-selected briton)(civ-selected byzantine))
        (or(civ-selected chinese)(civ-selected dravidians))    
    )
    (up-compare-goal gl-dudeHasSpearmen == 1)    
    (unit-type-count-total archer-line g:< gl-archerQtyHigh)    
	(can-train archer-line)
=>
	(train archer-line)
)

(defrule
    (current-age == imperial-age)
    (wood-amount > 325)(gold-amount > 445)
    (or
        (or(civ-selected ethiopian)(civ-selected incan))
        (or(civ-selected italian)(civ-selected japanese))    
    )
    (up-compare-goal gl-dudeHasSpearmen == 1)    
    (unit-type-count-total archer-line g:< gl-archerQtyHigh)    
	(can-train archer-line)
=>
	(train archer-line)
)

(defrule
    (current-age == imperial-age)
    (wood-amount > 325)(gold-amount > 445)
    (or
        (or(civ-selected korean)(civ-selected magyar))
        (or(civ-selected malay)(civ-selected mayan))    
    )
    (up-compare-goal gl-dudeHasSpearmen == 1)    
    (unit-type-count-total archer-line g:< gl-archerQtyHigh)    
	(can-train archer-line)
=>
	(train archer-line)
)

(defrule
    (current-age == imperial-age)
    (wood-amount > 325)(gold-amount > 445)
    (or
        (or(civ-selected portuguese)(civ-selected saracen))
        (or(civ-selected vietnamese)(civ-selected vietnamese))    
    )
    (up-compare-goal gl-dudeHasSpearmen == 1)    
    (unit-type-count-total archer-line g:< gl-archerQtyHigh)    
	(can-train archer-line)
=>
	(train archer-line)
)

(defrule
    (civ-selected persian)
    (research-completed my-second-unique-research)
    (wood-amount > 270)
    (up-compare-goal gl-dudeHasSpearmen == 1)    
	(unit-type-count-total archer-line g:< gl-archerQtyHigh)
	(can-train archer-line)
=>
	(train archer-line)
)

; CAVALRY ARCHER
(defrule
    (current-age == castle-age)
    (or
        (or
            (or(civ-selected tatars)(civ-selected mongol))
            (or(civ-selected hun)(civ-selected cumans))
        )
        (or
            (or(civ-selected frankish)(civ-selected vietnamese))
            (and(civ-selected turkish)(research-completed my-second-unique-research))
        )
    )     
    (gold-amount > 845)(wood-amount > 400)
	(unit-type-count-total cavalry-archer-line g:< gl-cavalryArcherQtyLow)    
    (can-train cavalry-archer-line)     
=>
	(train cavalry-archer-line)
)

(defrule
    (current-age == imperial-age)
    (or(civ-selected frankish)(civ-selected vietnamese)) 
    (wood-amount > 200)(gold-amount > 300)
	(unit-type-count-total cavalry-archer-line g:< gl-cavalryArcherQtyMedium)
	(can-train cavalry-archer-line)
=>
	(train cavalry-archer-line)
)

(defrule
    (current-age == imperial-age)
    (or
        (or
            (or
                (civ-selected tatars)(civ-selected mongol)
            )
            (or
                (civ-selected hun)(civ-selected cumans)
            )
        )
        (or
            (and(civ-selected magyar)(research-completed my-unique-research))
            (and(civ-selected turkish)(research-completed my-second-unique-research))                        
        )
    )     
    (wood-amount > 200)(gold-amount > 200)
	(unit-type-count-total cavalry-archer-line g:< gl-cavalryArcherQtyHigh)
	(can-train cavalry-archer-line)
=>
	(train cavalry-archer-line)
)

; ELEPHANT ARCHER
(defrule
    (current-age == castle-age)   
    (gold-amount > 845)(wood-amount > 400)
	(unit-type-count-total elephant-archer-line g:< gl-archerQtyLow)    
    (can-train elephant-archer-line)     
=>
	(train elephant-archer-line)
)

(defrule
    (current-age == imperial-age)   
    (gold-amount > 260)(wood-amount > 400)
	(unit-type-count-total elephant-archer-line g:< gl-archerQtyMedium)    
    (can-train elephant-archer-line)     
=>
	(train elephant-archer-line)
)

; SKIRMISHERS AND GENITOURS
; GENITOUR
(defrule
    (current-age == castle-age)
    (up-compare-goal gl-dudeHasArchers == 1)    
    (or(wood-amount > 275)(building-type-count town-center > 0))
    (building-type-count-total monastery > 0)      
    (unit-type-count-total genitour-line g:< gl-skirmisherQtyLow) 
    (can-train genitour-line) 
=>
    (train genitour-line)
)

(defrule
    (current-age == imperial-age)      
    (up-compare-goal gl-dudeHasArchers == 1)
    (not(civ-selected khmer))(not(civ-selected spanish))
    (not(civ-selected sicilians))(not(civ-selected portuguese))
    (not(civ-selected gothic))
    (unit-type-count-total genitour-line g:< gl-skirmisherQtyMedium)
    (can-train genitour-line)    
=>
    (train genitour-line)
)

; SKIRMISHER
(defrule
    (current-age == feudal-age) 
    (or(wood-amount > 275)(building-type-count town-center > 0))
    (or(wood-amount > 135)(building-type-count lumber-camp > 0))
    (not(can-train genitour))
    (can-train skirmisher-line)       
=>
    (train skirmisher-line)(disable-self)
)

(defrule
    (current-age == feudal-age) 
    (or(wood-amount > 275)(building-type-count town-center > 0))
    (or(wood-amount > 135)(building-type-count lumber-camp > 0))
    (not(can-train genitour))
    (can-train skirmisher-line)       
=>
    (train skirmisher-line)(disable-self)
)

(defrule
    (current-age == feudal-age)
    (or(up-compare-goal gl-dudeHasArchers == 1)
    (up-compare-goal gl-dudeHasCavalryArchers == 1))    
    (or(wood-amount > 275)(building-type-count town-center > 0))
    (or(wood-amount > 135)(building-type-count lumber-camp > 0))
    (not(can-train genitour))
    (unit-type-count-total skirmisher-line g:< gl-skirmisherQtyLow)
    (not(civ-selected portuguese))
    (can-train skirmisher-line)       
=>
    (train skirmisher-line)
)

(defrule
    (current-age == castle-age)
    (building-type-count town-center > 0)     
    (up-compare-goal gl-dudeHasArchers == 1)    
    (or(wood-amount > 275)(building-type-count town-center > 0))
    (wood-amount > 135)    
    (building-type-count-total monastery > 0)
    (not(can-train genitour))
    (not(can-train mangonel-line))      
    (unit-type-count-total skirmisher-line g:< gl-skirmisherQtyMedium) 
    (can-train skirmisher-line) 
=>
    (train skirmisher-line)
)

(defrule
    (current-age == imperial-age)      
    (or(up-compare-goal gl-dudeHasArchers == 1)
    (up-compare-goal gl-dudeHasCavalryArchers == 1))
    (not(civ-selected gothic))
    (not(can-train genitour))
    (unit-type-count-total skirmisher-line g:< gl-skirmisherQtyMedium)
    (can-train skirmisher-line)    
=>
    (train skirmisher-line)
)

; HAND CANNONEER
(defrule
    (unit-type-count-total hand-cannoneer g:< gl-handCannoneerQty)
    (not(can-train conquistador))(not(can-train elite-conquistador))
    (not(civ-selected tatars))(not(civ-selected saracen))(not(civ-selected persian))
    (not(civ-selected khmer))(not(civ-selected berbers))
    (not(civ-selected turkish))(not(civ-selected korean))    
    (not(civ-selected bulgarians))(not(civ-selected byzantine))(not(civ-selected gothic))(not(civ-selected japanese))
    (gold-amount > 250)
    (can-train hand-cannoneer)    
=>
    (train hand-cannoneer)
)

; SLINGERS
(defrule
    (current-age == imperial-age)
    (unit-type-count-total slinger g:< gl-skirmisherQtyMedium)
    (can-train slinger)
=>
    (train slinger)
)

; BARRACKS                                        
; MILITIA
(defrule(can-train militiaman-line)(or(civ-selected incan)(civ-selected aztec))
=>
(train militiaman-line)(disable-self))

(defrule(can-train militiaman-line)(or(civ-selected incan)(civ-selected aztec))
=>
(train militiaman-line)(disable-self))

(defrule
    (current-age == feudal-age) 
    (gold-amount > 220)
    (or
        (not(research-available ri-supplies))
        (research-completed ri-supplies)
    )        
    (up-compare-goal gl-totalSoldiersCreatedThisAge g:< gl-maximumSoldiersFeudal)    
    (unit-type-count-total militiaman-line g:< gl-militiaQtyLow)
    (can-train militiaman-line)
=>
    (train militiaman-line)
    (up-modify-goal gl-totalSoldiersCreatedThisAge c:+ 1)
)

(defrule
    (current-age == castle-age)
    (research-completed ri-hand-cart)
    (game-time < 900)
    (gold-amount > 200)        
    (up-compare-goal gl-totalSoldiersCreatedThisAge < 15)
    (not(can-train steppe-lancer-line))
    (not(can-train battle-elephant-line))
    (not(can-train mangonel-line))     
    (can-train militiaman-line)
=>
    (train militiaman-line)
    (up-modify-goal gl-totalSoldiersCreatedThisAge c:+ 1)
)

(defrule
    (current-age == imperial-age)(gold-amount > 400)
    (unit-type-count-total militiaman-line g:< gl-militiaQtyHigh)
    (or
        (or
            (or 
                (civ-selected aztec)
                (civ-selected bulgarians)
            )
            (or 
                (civ-selected bulgarians)        
                (civ-selected burmese)
            )
        )   
        (or
            (or 
                (civ-selected gothic)
                (civ-selected incan)
            )
            (or 
                (civ-selected malian)        
                (civ-selected slavic)
            )
        )       
    )
    (can-train militiaman-line)    
=>
    (train militiaman-line)
)

(defrule
    (current-age == imperial-age)(gold-amount > 600)
    (unit-type-count-total militiaman-line g:< gl-militiaQtyMedium)
    (or
        (or
            (civ-selected japanese)(civ-selected sicilians)   
        )                     
        (or        
            (civ-selected teutonic)                
            (civ-selected viking)                
        )      
    )
    (can-train militiaman-line)    
=>
    (train militiaman-line)
)

(defrule
    (current-age == imperial-age)
    (civ-selected malay)(research-completed my-unique-research)
    (unit-type-count-total militiaman-line g:< gl-militiaQtyHigh)    
    (can-train militiaman-line)
=>
    (train militiaman-line)
)

; SPEARMEN
; SPEARMEN FEUDAL AGE
(defrule
    (current-age == feudal-age) ;non reactive
    (or
        (wood-amount >= 275)
        (building-type-count town-center > 0)
    )    
    (wood-amount >= 125)
    (up-compare-goal gl-totalSoldiersCreatedThisAge < 4)
    (can-train spearman-line)
=>
    (train spearman-line)
    (up-modify-goal gl-totalSoldiersCreatedThisAge c:+ 1)
)

(defrule
    (current-age == feudal-age) ;reactive
    (or
        (wood-amount >= 275)
        (building-type-count town-center > 0)
    )    
    (or(wood-amount >= 125)
        (or
            (and(civ-selected japanese)(wood-amount >= 75))
            (and(civ-selected malian)(wood-amount >= 110))         
        )
    )
    (up-compare-goal gl-dudeHasCavalry == 1)
    (up-compare-goal gl-totalSoldiersCreatedThisAge < gl-maximumSoldiersFeudal)
    (unit-type-count-total spearman-line g:< gl-spearmenQtyLow)
    (can-train spearman-line)
=>
    (train spearman-line)
    (up-modify-goal gl-totalSoldiersCreatedThisAge c:+ 1)
)

(defrule
    (current-age == feudal-age)(town-under-attack)
    (or
        (wood-amount >= 275) ;not optimized for civs with cheaper TC
        (building-type-count town-center > 0)
    )    
    (or(wood-amount >= 125)
        (or
            (and(civ-selected japanese)(wood-amount >= 75))
            (and(civ-selected malian)(wood-amount >= 110))         
        )
    )
    (or(up-compare-goal gl-dudeHasCavalry == 1)(up-compare-goal gl-dudeHasCavalryArchers == 1))
    (up-compare-goal gl-dudeHasArchers == 0)    
    (unit-type-count-total spearman-line < gl-spearmenQtyMedium)
    (can-train spearman-line)
=>
    (train spearman-line)
)
; SPEARMEN CASTLE AGE
(defrule
    (current-age == castle-age) ;non reactive
    (or
        (wood-amount >= 275)
        (building-type-count town-center > 0)
    )    
    (wood-amount >= 125)
    (up-compare-goal gl-totalSoldiersCreatedThisAge < 5)
    (can-train spearman-line)
=>
    (train spearman-line)
    (up-modify-goal gl-totalSoldiersCreatedThisAge c:+ 1)
)

(defrule
    (current-age == castle-age)
    (or(wood-amount > 275)(building-type-count town-center > 0))    
    (building-type-count-total monastery > 0)
    (wood-amount > 125)
    (or(up-compare-goal gl-dudeHasCavalry == 1)(up-compare-goal gl-dudeHasCavalryArchers == 1))
    (unit-type-count-total spearman-line g:< gl-spearmenQtyMedium)
    (can-train spearman-line)
=>
    (train spearman-line)
)

(defrule
    (current-age == imperial-age)
    (or(wood-amount > 275)(building-type-count town-center > 0))
    (wood-amount > 125)    
    (up-compare-goal gl-dudeHasCavalry == 1)    
    (unit-type-count-total spearman-line g:< gl-spearmenQtyHigh)
    (not(civ-selected cumans))     
    (can-train spearman-line)     
=>
    (train spearman-line)  
)

(defrule ;goth
	(current-age >= feudal-age)
	(unit-type-count-total spearman-line < 4)
	(civ-selected gothic) ; exploring
	(can-train spearman-line)
=>
	(train spearman-line)
)

; EAGLE WARRIOR
(defrule
    (current-age == feudal-age)
    (or(up-compare-goal gl-dudeHasArchers == 1)(up-compare-goal gl-dudeHasSkirmishers == 1))
    ;(gold-amount > 251)
    (or
        (not(enemy-buildings-in-town))
        (research-completed ri-supplies)
    )
    (unit-type-count-total eagle-warrior-line g:< gl-eagleQtyLow)    
    (can-train eagle-warrior-line)
=>
    (train eagle-warrior-line)
)

(defrule
    (current-age == castle-age) 
    (unit-type-count-total eagle-warrior-line g:< gl-eagleQtyMedium)
    (can-train eagle-warrior-line)    
=>
    (train eagle-warrior-line)
)

(defrule
    (current-age == imperial-age)(gold-amount > 250)
    (unit-type-count-total eagle-warrior-line g:< gl-eagleQtyHigh)
    (can-train eagle-warrior-line)
=>
    (train eagle-warrior-line)
)

; CONDOTTIERO
(defrule
    (unit-type-count-total condottiero g:< gl-militiaQtyMedium)
    (players-unit-type-count any-enemy hand-cannoneer > 3)   
    (can-train condottiero)
=>
    (train condottiero)
)

; 6. TRADE $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$                          
; SELLING WOOD
(defrule
    (current-age == feudal-age)
    (wood-amount > 500)
(can-sell-commodity wood)    
=>
    (sell-commodity wood)
)

(defrule
    (current-age == castle-age)
    (can-sell-commodity wood)
    (wood-amount > 600)
=>
    (sell-commodity wood)
)

(defrule
    (can-sell-commodity wood)
    (wood-amount > 2000)
    (gold-amount < 1000)
=>
    (sell-commodity wood)
)

; SELLING FOOD
(defrule
    (current-age == feudal-age)
    (can-sell-commodity food)
    (food-amount > 900)
    (or
         (wood-amount < 200)
         (stone-amount < 200)
    )
	(gold-amount < 1100)
=>
    (sell-commodity food)
)

(defrule
    (current-age == castle-age)
    (can-sell-commodity food)
    (food-amount > 300)
	(gold-amount < 100)
    (unit-type-count-total monk-set g:< gl-monkQtyLow)
=>
    (sell-commodity food)
)

(defrule
    (current-age == imperial-age)
    (can-sell-commodity food)
    (food-amount > 2000)
	(gold-amount < 1000)
=>
    (sell-commodity food)
)

; TOO MUCH GOLD
(defrule
	(current-age == feudal-age)
	(can-buy-commodity food)
    (gold-amount > 300)(food-amount < 800)
=>
    (buy-commodity food)
)

(defrule
	(current-age == castle-age)
	(can-buy-commodity food)
    (gold-amount > 900)(food-amount < 800)
=>
    (buy-commodity food)
)

(defrule
    (current-age == imperial-age)
	(can-buy-commodity stone)
    (building-type-count-total castle == 0)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)

(defrule
	(can-buy-commodity food)
    (gold-amount > 1600)
    (food-amount < 300)
=>
    (buy-commodity food)
)

(defrule
	(can-buy-commodity wood)
    (gold-amount > 1600)
    (wood-amount < 300)
=>
    (buy-commodity wood)
)

(defrule
	(can-buy-commodity stone)
    (gold-amount > 1600)
    (stone-amount < 300)
=>
    (buy-commodity stone)
)

;EXCESO PIEDRA FEUDAL
(defrule
	(current-age == feudal-age)
	(can-sell-commodity stone)
    (gold-amount < 200)(food-amount > 799) 
    (or
        (building-type-count-total archery-range > 0)
        (building-type-count-total stable > 0)
    )    
=>
    (sell-commodity stone)
)

;falta piedra
(defrule
	(current-age > feudal-age)
	(can-buy-commodity stone)
    (stone-amount < 650)(building-type-count-total castle < 0)    
=>
    (buy-commodity stone)
)

;TRIBUTE

(defrule
    (current-age == feudal-age)
    (wood-amount > 600)
=>
    (tribute-to-player any-ally wood 100)
)

(defrule
    (current-age == feudal-age)
    (food-amount > 1200)
=>
    (tribute-to-player any-ally food 100)
)

(defrule
    (current-age == feudal-age)
    (gold-amount > 800)
=>
    (tribute-to-player any-ally gold 100)
)

(defrule
    (current-age == castle-age)
    (wood-amount > 800)
=>
    (tribute-to-player any-ally wood 100)
)

(defrule
    (current-age == castle-age)
    (food-amount > 1200)
=>
    (tribute-to-player any-ally food 100)
)

(defrule
    (current-age == castle-age)
    (gold-amount > 1400)
=>
    (tribute-to-player any-ally gold 100)
)

(defrule
    (current-age == castle-age)
    (stone-amount > 800)
=>
    (tribute-to-player any-ally stone 100)
)

(defrule
    (current-age == imperial-age)
    (wood-amount > 2500)
=>
    (tribute-to-player any-ally wood 500)
)

(defrule
    (current-age == imperial-age)
    (food-amount > 2500)
=>
    (tribute-to-player any-ally food 500)
)

(defrule
    (current-age == imperial-age)
    (gold-amount > 2500)
=>
    (tribute-to-player any-ally gold 500)
)

(defrule
    (current-age == imperial-age)
    (stone-amount > 2000)
=>
    (tribute-to-player any-ally stone 500)
)

; 7 BORRAR ALDEANOS

    (defrule
        (current-age == imperial-age)
        (or
            (players-building-type-count any-enemy town-center > 0)       
            (players-building-type-count any-enemy castle > 0)         
        )
        (wood-amount > 5000)
        (food-amount > 5000)
        (gold-amount > 2500)
        (military-population > 60)
        (unit-type-count-total villager g:> gl-maxCiviliansFeudalAge)   
    =>
        (do-nothing)
    )


; 8. DETECT THINGS
(defrule
    (or
        (or
            (or
                (players-unit-type-count any-enemy scout-cavalry-line > 2)
                (players-unit-type-count any-enemy knight-line > 2)
            )
            (or
                (players-unit-type-count any-enemy steppe-lancer-line > 2)
                (players-unit-type-count any-enemy tarkan-set > 2)
            )
        ) 
        (or
            (or
                (players-unit-type-count any-enemy konnik-set > 2)
                (players-unit-type-count any-enemy leitis-line > 2)
            )
            (or
                (players-unit-type-count any-enemy coustillier-line > 2)
                (players-unit-type-count any-enemy tarkan-line > 2)
            )
        )    
    )
=>  
    (set-goal gl-dudeHasCavalry 1)
    ;(chat-local-to-self "DUDE HAS CAVALRY!")
)

(defrule
    (or
        (or
            (or
                (players-unit-type-count any-enemy magyar-huszar-line > 2)
                (players-unit-type-count any-enemy arambai-line > 2)
            )
            (or
                (players-unit-type-count any-enemy cataphract-line > 2)
                (players-unit-type-count any-enemy war-wagon-line > 2)
            )
        ) 
        (or
            (or
                (players-unit-type-count any-enemy conquistador-line > 2)
                (players-unit-type-count any-enemy mangudai-line > 2)
            )
            (or
                (players-unit-type-count any-enemy mameluke-line > 2)
                (players-unit-type-count any-enemy boyar-line > 2)
            )
        )    
    )
=>  
    (set-goal gl-dudeHasCavalry 1)
    ;(chat-local-to-self "DUDE HAS CAVALRY!")
)

(defrule
    (players-unit-type-count any-enemy scout-cavalry-line < 2)
    (players-unit-type-count any-enemy knight-line < 2)
    (players-unit-type-count any-enemy steppe-lancer-line < 2)
    (players-unit-type-count any-enemy tarkan-set < 2)
    (players-unit-type-count any-enemy konnik-set < 2)
    (players-unit-type-count any-enemy leitis-line < 2)
    (players-unit-type-count any-enemy coustillier-line < 2)
    (players-unit-type-count any-enemy tarkan-line < 2)
    (players-unit-type-count any-enemy magyar-huszar-line < 2)
    (players-unit-type-count any-enemy arambai-line < 2)
    (players-unit-type-count any-enemy cataphract-line < 2)
    (players-unit-type-count any-enemy war-wagon-line < 2)
    (players-unit-type-count any-enemy conquistador-line < 2)
    (players-unit-type-count any-enemy mangudai-line < 2)
    (players-unit-type-count any-enemy mameluke-line < 2)
    (players-unit-type-count any-enemy boyar-line < 2)    
=>  
    (set-goal gl-dudeHasCavalry 0)
)

(defrule
    (players-unit-type-count any-enemy battle-elephant-line > 0)
=>  
    (do-nothing)
    ;(chat-local-to-self "DUDE HAS ELEPHANTS!")
)

(defrule
    (players-unit-type-count any-enemy skirmisher-line > 0)
=>  
    (set-goal gl-dudeHasSkirmishers 1)
    ;(chat-local-to-self "DUDE HAS SKIRMISHERS!")    
)

(defrule
    (players-unit-type-count any-enemy skirmisher-line < 1)
=>  
    (set-goal gl-dudeHasSkirmishers 0)    
)

(defrule
    (players-unit-type-count any-enemy archer-line > 0)
=>  
    (set-goal gl-dudeHasArchers 1)
    ;(chat-local-to-self "DUDE HAS ARCHERS!")        
)

(defrule
    (players-unit-type-count any-enemy cavalry-archer-line < 1)
=>  
    (set-goal gl-dudeHasCavalryArchers 0)    
)

(defrule
    (players-unit-type-count any-enemy cavalry-archer-line > 0)
=>  
    (set-goal gl-dudeHasCavalryArchers 1)
    ;(chat-local-to-self "DUDE HAS CAVALRY ARCHERS!")        
)

(defrule
    (players-unit-type-count any-enemy archer-line < 1)
=>  
    (set-goal gl-dudeHasArchers 0)    
)

(defrule
    (players-unit-type-count any-enemy spearman-line > 0)
=>  
    (set-goal gl-dudeHasSpearmen 1)
    ;(chat-local-to-self "DUDE HAS SPEARMEN!")        
)

(defrule
    (players-unit-type-count any-enemy spearman-line < 1)
=>  
    (set-goal gl-dudeHasSpearmen 0)    
)

(defrule
    (players-unit-type-count any-enemy militiaman-line > 0)
=>  
    (set-goal gl-dudeHasMilitia 1)
    ;(chat-local-to-self "DUDE HAS MILITIA!")        
)

(defrule
    (players-unit-type-count any-enemy militiaman-line < 1)
=>  
    (set-goal gl-dudeHasMilitia 0)    
)

(defrule(civ-selected aztec)=>(up-change-name "PereiraSystem AZTC"))
(defrule(civ-selected bengalis)=>(up-change-name "PereiraSystem BENG"))
(defrule(civ-selected berbers)=>(up-change-name "PereiraSystem BERB"))
(defrule(civ-selected bohemians)=>(up-change-name "PereiraSystem BOHE"))
(defrule(civ-selected briton)=>(up-change-name "PereiraSystem BRIT"))
(defrule(civ-selected bulgarians)=>(up-change-name "PereiraSystem BULG"))
(defrule(civ-selected burgundians)=>(up-change-name "PereiraSystem BURG"))
(defrule(civ-selected burmese)=>(up-change-name "PereiraSystem BURM"))
(defrule(civ-selected byzantine)=>(up-change-name "PereiraSystem BYZN"))
(defrule(civ-selected celtic)=>(up-change-name "PereiraSystem CELT"))
(defrule(civ-selected chinese)=>(up-change-name "PereiraSystem CHIN"))
(defrule(civ-selected cumans)=>(up-change-name "PereiraSystem CMNS"))
(defrule(civ-selected dravidians)=>(up-change-name "PereiraSystem DRAV"))
(defrule(civ-selected ethiopian)=>(up-change-name "PereiraSystem ETHI"))
(defrule(civ-selected frankish)=>(up-change-name "PereiraSystem FRNK"))
(defrule(civ-selected gothic)=>(up-change-name "PereiraSystem GOTH"))
(defrule(civ-selected gurjaras)=>(up-change-name "PereiraSystem GURJ"))
(defrule(civ-selected indian)=>(up-change-name "PereiraSystem HIND"))
(defrule(civ-selected hun)=>(up-change-name "PereiraSystem HUNS"))
(defrule(civ-selected incan)=>(up-change-name "PereiraSystem INCA"))
(defrule(civ-selected italian)=>(up-change-name "PereiraSystem ITAL"))
(defrule(civ-selected japanese)=>(up-change-name "PereiraSystem JAPN"))
(defrule(civ-selected khmer)=>(up-change-name "PereiraSystem KHMR"))
(defrule(civ-selected korean)=>(up-change-name "PereiraSystem KORE"))
(defrule(civ-selected lithuanians)=>(up-change-name "PereiraSystem LITH"))
(defrule(civ-selected magyar)=>(up-change-name "PereiraSystem MAGY"))
(defrule(civ-selected malay)=>(up-change-name "PereiraSystem MLAY"))
(defrule(civ-selected malian)=>(up-change-name "PereiraSystem MALI"))
(defrule(civ-selected mayan)=>(up-change-name "PereiraSystem MAYA"))
(defrule(civ-selected mongol)=>(up-change-name "PereiraSystem MONG"))
(defrule(civ-selected persian)=>(up-change-name "PereiraSystem PERS"))
(defrule(civ-selected poles)=>(up-change-name "PereiraSystem POLE"))
(defrule(civ-selected portuguese)=>(up-change-name "PereiraSystem PORT"))
(defrule(civ-selected saracen)=>(up-change-name "PereiraSystem SARR"))
(defrule(civ-selected sicilians)=>(up-change-name "PereiraSystem SICI"))
(defrule(civ-selected slavic)=>(up-change-name "PereiraSystem SLAV"))
(defrule(civ-selected spanish)=>(up-change-name "PereiraSystem SPAN"))
(defrule(civ-selected tatars)=>(up-change-name "PereiraSystem TATR"))
(defrule(civ-selected teutonic)=>(up-change-name "PereiraSystem TEUT"))
(defrule(civ-selected turkish)=>(up-change-name "PereiraSystem TURK"))
(defrule(civ-selected vietnamese)=>(up-change-name "PereiraSystem VIET"))
(defrule(civ-selected viking)=>(up-change-name "PereiraSystem VKNG"))

(defrule
	(true)
=>
	;(up-retreat-to castle c: knight-line)
    (do-nothing)
	(disable-self)
)

(defrule
	(current-age == imperial-age)
=>
	(up-retreat-now)
    (set-strategic-number sn-task-ungrouped-soldiers 1)
    (chat-local-to-self "EVERYONE GO BACK!")
	(disable-self)
)

(defrule
    (unit-type-count monk > 0)
=>	
    (up-full-reset-search)	
    (up-find-local c: spearman-line c: 1)
	;(up-find-local c: all-units-class c: 240)	
	;(up-remove-objects search-local object-data-hitpoints < 50)
    (up-guard-unit monk c: spearman-line)
)