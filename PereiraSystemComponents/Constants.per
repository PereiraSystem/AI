; CONSTANTS  -------------------------------------------------------
(defrule(true)=>(chat-local-to-self "> 1. Constants Loaded")(disable-self))
(defconst max-lumber-camps-qty 1)
(defconst max-mining-camps-qty 2)
(defconst house-distance-mod 4)
(defconst minimumWoodForTC 10)
(defconst minimumWoodForLC 11)
(defconst feudalAgeFoodCost 12)
(defconst castleAgeFoodCost 12)
(defconst castleAgeGoldCost 13)
(defconst imperialAgeFoodCost 14)
(defconst imperialAgeGoldCost 15)
(defconst blacksmithWoodCost 16)
(defconst universityWoodCost 17)
(defconst fishingShipWoodCost 30)
(defconst galleyWoodCost 31)
(defconst civNeedsArchersSoon 41)
(defconst civNeedsCavalrySoon 42)
(defconst civNeedsMonastery 43)
(defconst civHasGunpowderBonus 44)
(defconst dudeHasCavalry 50)
(defconst dudeHasScouts 51)
(defconst dudeHasKnights 52)
(defconst dudeHasCamels 53)
(defconst dudeHasElephants 54)
(defconst dudeHasArchers 55)
(defconst dudeHasSkirmishers 56)
(defconst dudeHasSpearmen 57)
(defconst dudeHasMilitia 58)
(defconst dudeHasCavalryArchers 59)
(defconst dudeHasSiegeWeapons 60)
(defconst dudeHasGalleys 61)
(defconst dudeHasCannonShips 62)
(defconst dudeHasFireShips 63)
(defconst dudeHasExplosiveShips 64)
(defconst maximumSoldiersFeudal 80)
(defconst totalSoldiersCreatedThisAge 89)
(defconst nonUpgradedUniqueUnitsCreated 90)
(defconst weMovedPlace 99)
(defconst weAreAttacking 100)
(defconst maxHousesBeforeDeleting 101)
(defconst maxHousesNeeded 102)
(defconst farmQtyImperial 103)
; civilian units constants
(defconst maxCiviliansDarkAge 104)
(defconst maxCiviliansFeudalAge 105)
(defconst maxCiviliansCastleAge 106)
(defconst maxCiviliansImperialAge 107)
(defconst tradeCartsQty 108)
(defconst tradeShipsQty 109)
(defconst fishingShipsQty 110)
; infantry constants
(defconst spearmenQtyLow 120)
(defconst spearmenQtyMedium 121)
(defconst spearmenQtyHigh 122)
(defconst militiaQtyLow 155)
(defconst militiaQtyMedium 156)
(defconst militiaQtyHigh 157)
(defconst eagleQtyLow 160)
(defconst eagleQtyMedium 161)
(defconst eagleQtyHigh 162)
; ranged constants
(defconst archerQtyLow 200)
(defconst archerQtyMedium 201)
(defconst archerQtyHigh 202)
(defconst skirmisherQtyLow 210)
(defconst skirmisherQtyMedium 211)
(defconst skirmisherQtyHigh 212)
(defconst cavalryArcherQtyLow 220)
(defconst cavalryArcherQtyMedium 221)
(defconst cavalryArcherQty 223)
(defconst cavalryArcherQtyHigh 223)
(defconst handCannoneerQty 225)
; cavalry constants
(defconst knightsQtyLow 130)
(defconst knightsQtyMedium 131)
(defconst knightsQtyHigh 132)
(defconst scoutsQtyLow 135)
(defconst scoutsQtyMedium 136)
(defconst scoutsQtyHigh 137)
(defconst camelQtyLow 140)
(defconst camelQtyMedium 141)
(defconst camelQtyHigh 142)
(defconst battleElephantQtyLow 180)
(defconst battleElephantQtyMedium 181)
(defconst battleElephantQtyHigh 182)
; priest constants
(defconst monkQtyLow 290)
(defconst monkQtyMedium 291)
(defconst monkQtyHigh 292)
; siege constants
(defconst ramQtyLow 300)
(defconst ramQtyMedium 301)
(defconst ramQtyHigh 302)
(defconst scorpionQty 305)
(defconst mangonelQtyLow 310)
(defconst mangonelQtyMedium 311)
(defconst bombardCannonsQty 315)
(defconst trebuchetsQtyLow 320)
(defconst trebuchetsQtyMedium 321)
(defconst trebuchetsQtyHigh 322)
; unique units constants
(defconst uniqueUnitQtyLow 330)
(defconst uniqueUnitQtyMedium 331)
(defconst uniqueUnitQtyHigh 332)
(defconst galleyQty 335)
(defconst galleonQty 336)
(defconst fireshipQty 337)
(defconst demolitionShipQty 338)
(defconst specialShipQty 339)
; UP WALL CONSTANTS - YEAH I KIND OFLIKE IT THAT WAY
(defconst posMapSizeX 390)
(defconst posMapSizeY 391)
(defconst mapSizeThird 392)
(defconst mapSizeTwoThirds 393)
(defconst mapSizeTenth 394)
(defconst mapSizeNineTenths 395)
(defconst maxDimensionOfMap 396); dont use the next number?
(defconst mapCenter-x 398)
(defconst mapCenter-y 399)
(defconst myPosition-x 407)
(defconst myPosition-y 408)
(defconst posXisHigh 409)
(defconst posXisMed 410)
(defconst posXisLow 411)
(defconst posYisHigh 412)
(defconst posYisMed 413)
(defconst posYisLow 414)
(defconst posQuadrantCode 415)
(defconst outerWallPerimeter 416)
(defconst innerWallPerimeter 417)
(defconst outerWallPoint1-x 421)
(defconst outerWallPoint1-y 422)
(defconst outerWallPoint2-x 423)
(defconst outerWallPoint2-y 424)
(defconst outerWallPoint3-x 425)
(defconst outerWallPoint3-y 426)
(defconst outerWallPoint4-x 427)
(defconst outerWallPoint4-y 428)
(defconst outerGatePoint1-x 430)
(defconst outerGatePoint1-y 431)
(defconst outerGatePoint2-x 432)
(defconst outerGatePoint2-y 433)
(defconst outerGatePoint3-x 434)
(defconst outerGatePoint3-y 435)
(defconst outerGatePoint4-x 436)
(defconst outerGatePoint4-y 437)
(defconst innerWallPoint1-x 441)
(defconst innerWallPoint1-y 442)
(defconst innerWallPoint2-x 443)
(defconst innerWallPoint2-y 444)
(defconst innerWallPoint3-x 445)
(defconst innerWallPoint3-y 446)
(defconst innerWallPoint4-x 447)
(defconst innerWallPoint4-y 448)
(defconst innerGatePoint1-x 451)
(defconst innerGatePoint1-y 452)
(defconst innerGatePoint2-x 453)
(defconst innerGatePoint2-y 454)
(defconst innerGatePoint3-x 455)
(defconst innerGatePoint3-y 456)
(defconst innerGatePoint4-x 457)
(defconst innerGatePoint4-y 458)
(defconst innerSecGatePoint1-x 461)
(defconst innerSecGatePoint1-y 462)
(defconst innerSecGatePoint2-x 463)
(defconst innerSecGatePoint2-y 464)
(defconst innerSecGatePoint3-x 465)
(defconst innerSecGatePoint3-y 466)
(defconst innerSecGatePoint4-x 467)
(defconst innerSecGatePoint4-y 468)

(defconst buildNorthEastMainGates 471)
(defconst buildSouthEastMainGates 472)
(defconst buildNorthWestMainGates 473)
(defconst buildSouthWestMainGates 474)

(defconst dontBuildNorthEastWall 475)
(defconst dontBuildSouthEastWall 476)
(defconst dontBuildNorthWestWall 477)
(defconst dontBuildSouthWestWall 478)

(defconst buildingInnerWall 479)


(defconst gotNorthEastPalisadeGates 488)
(defconst gotSouthEastPalisadeGates 489)
(defconst gotSouthWestPalisadeGates 490)
(defconst gotNorthWestPalisadeGates 491)
(defconst gotNorthEastStoneGates 492)
(defconst gotSouthEastStoneGates 493)
(defconst gotSouthWestStoneGates 494)
(defconst gotNorthWestStoneGates 495)
(defconst weHaveTownCenterAndWoodForLC 500)
(defconst weHaveBarracksAndSomeVillagers 501)
(defconst weHaveArcheryOrStableAndSomeSoldiers 502)
(defconst buildingOuterWall 503)

(defconst randomNumber 509)
; SETTING CIVILIAN CONSTANTS
(defrule
    (true)
=>
    (set-goal minimumWoodForTC 275)
    (set-goal minimumWoodForLC 100)
    (set-goal house-distance-mod 12)
    (set-goal feudalAgeFoodCost 500)
    (set-goal castleAgeFoodCost 800)
    (set-goal castleAgeGoldCost 200)
    (set-goal imperialAgeFoodCost 1000)
    (set-goal imperialAgeGoldCost 800)
    (set-goal maxHousesBeforeDeleting 21)
    (set-goal maxHousesNeeded 30)
    (set-goal farmQtyImperial 20)
    (set-goal maxCiviliansDarkAge 16)
    (set-goal maxCiviliansFeudalAge 32)
    (set-goal maxCiviliansCastleAge 53)
    (set-goal maxCiviliansImperialAge 85)
    (set-goal tradeCartsQty 14)
    (set-goal tradeShipsQty 20)
    (set-goal fishingShipsQty 6) (disable-self)
)
(defrule
    (or     (or(civ-selected aztec)(civ-selected mayan))
            (or(civ-selected italian)(civ-selected korean)))
=>
    (set-goal civNeedsArchersSoon 1)(disable-self)
)
(defrule
    (or     (or(civ-selected bulgarians)(civ-selected bulgarians))
            (or(civ-selected bulgarians)(civ-selected bulgarians)))
=>
    (set-goal civNeedsCavalrySoon 1)(disable-self)
)
(defrule
    (civ-selected japanese)
=>
    (set-goal minimumWoodForTC 275)
    (set-goal minimumWoodForLC 100)(disable-self)
)
(defrule
    (civ-selected malian)
=>
    (set-goal minimumWoodForTC 275)
    (set-goal minimumWoodForLC 100)(disable-self)
)
(defrule
    (civ-selected italian)
=>
    (set-goal feudalAgeFoodCost 425)
    (set-goal castleAgeFoodCost 680)
    (set-goal castleAgeGoldCost 170)
    (set-goal imperialAgeFoodCost 850)
    (set-goal imperialAgeGoldCost 680) (disable-self)
)
(defrule
    (current-age == feudal-age)
=>
    (up-modify-goal fishingShipsQty c:* 1,1)
    (disable-self)
)
(defrule
    (current-age == castle-age)
=>
    (up-modify-goal tradeCartsQty c:* 1,5)
    (up-modify-goal tradeShipsQty c:* 1,5)
    (up-modify-goal fishingShipsQty c:* 1,1)  (disable-self)
)
(defrule
    (current-age == imperial-age)
=>
    (up-modify-goal tradeCartsQty c:* 1,5)
    (up-modify-goal tradeShipsQty c:* 1,5)
    (up-modify-goal fishingShipsQty c:* 1,1)(disable-self)
)
(defrule
    (true)
=>
    (set-goal spearmenQtyLow 6)
    (set-goal spearmenQtyMedium 35)
    (set-goal spearmenQtyHigh 60)
    (set-goal militiaQtyLow 8)
    (set-goal militiaQtyMedium 20)
    (set-goal militiaQtyHigh 60)
    (set-goal eagleQtyLow 8)
    (set-goal eagleQtyMedium 16)
    (set-goal eagleQtyHigh 40)
    (set-goal archerQtyLow 8)
    (set-goal archerQtyMedium 16)
    (set-goal archerQtyHigh 40)
    (set-goal skirmisherQtyLow 8)
    (set-goal skirmisherQtyMedium 16)
    (set-goal skirmisherQtyHigh 30)
    (set-goal cavalryArcherQtyLow 12)
    (set-goal cavalryArcherQtyMedium 18)
    (set-goal cavalryArcherQtyHigh 40)
    (set-goal handCannoneerQty 30)
    (set-goal knightsQtyLow 4)
    (set-goal knightsQtyMedium 9)
    (set-goal knightsQtyHigh 40)
    (set-goal scoutsQtyLow 8)
    (set-goal scoutsQtyMedium 30)
    (set-goal scoutsQtyHigh 40)
    (set-goal camelQtyLow 5)
    (set-goal camelQtyMedium 15)
    (set-goal camelQtyHigh 28)(disable-self)
)
(defrule
    (true)
=>
    (set-goal monkQtyLow 5)
    (set-goal monkQtyMedium 8)
    (set-goal monkQtyHigh 16)
    (set-goal ramQtyLow 2)
    (set-goal ramQtyMedium 6)
    (set-goal ramQtyHigh 8)
    (set-goal scorpionQty 4)
    (set-goal mangonelQtyLow 4)
    (set-goal mangonelQtyMedium 9)
    (set-goal bombardCannonsQty 8)
    (set-goal uniqueUnitQtyLow 10)
    (set-goal uniqueUnitQtyMedium 24)
    (set-goal uniqueUnitQtyHigh 40)
    (set-goal trebuchetsQtyLow 6)
    (set-goal trebuchetsQtyMedium 8)
    (set-goal trebuchetsQtyHigh 12)(disable-self)
)
(defrule
    (true)
=>
    (set-goal galleyQty 20)
    (set-goal galleonQty 20)
    (set-goal fireshipQty 20)
    (set-goal demolitionShipQty 20)
    (set-goal specialShipQty 20)(disable-self)
)
(defrule
    (civ-selected sicilians)
=>
    (up-modify-goal knightsQtyLow c:* 1,8)
    (up-modify-goal knightsQtyMedium c:* 1,8)
    (up-modify-goal scoutsQtyLow c:* 1,8)
    (up-modify-goal scoutsQtyMedium c:* 1,8)
    (disable-self)
)
(defrule
    (civ-selected burgundians)
    ;(civ-selected berbers)
=>
    (up-modify-goal scoutsQtyLow c:+ 4)
    (up-modify-goal skirmisherQtyLow c:- 3)
    (up-modify-goal scoutsQtyLow c:+ 4)
    (up-modify-goal skirmisherQtyMedium c:- 5)
    (up-modify-goal archerQtyLow c:- 3)
    (up-modify-goal militiaQtyLow c:- 3)
    (up-modify-goal knightsQtyLow c:+ 5)
    (disable-self)
)
(defrule
    (true)
=>
    (set-goal max-lumber-camps-qty 3)
    (set-goal max-mining-camps-qty 1)
    (set-goal minimumWoodForTC 275)
    (set-goal minimumWoodForLC 100)
    ;(up-chat-data-to-self "Lumber Camps Max Qty = %d" g: max-lumber-camps-qty)
    ;(up-chat-data-to-self "Mining Camps Max Qty = %d" g: max-mining-camps-qty)
    (disable-self)
)
(defrule
    (true)
=>
    (set-goal dudeHasCavalry 0)
    (set-goal dudeHasScouts 0)
    (set-goal dudeHasKnights 0)
    (set-goal dudeHasCamels 0)
    (set-goal dudeHasElephants 0)
    (set-goal dudeHasArchers 0)
    (set-goal dudeHasCavalryArchers 0)
    (set-goal dudeHasMilitia 0)
    (set-goal dudeHasSkirmishers 0)
    (set-goal weMovedPlace 0)
    (set-goal weAreAttacking 0)
    (set-goal maximumSoldiersFeudal 30)
    (set-goal totalSoldiersCreatedThisAge 0)
    (set-goal nonUpgradedUniqueUnitsCreated 0)
    (disable-self)
)
(defrule
    (current-age == castle-age)
=>
    (set-goal totalSoldiersCreatedThisAge 0)
    (disable-self)
)
(defconst civPop 300)
(defrule
	(true)
=>
	(up-get-fact civilian-population 0 civPop)
)
(defconst buildCount 301)
(defrule
	(true)
=>
	(up-get-fact building-count 0 buildCount)
)
(defconst milPop 330)
(defrule
	(true)
=>
	(up-get-fact military-population 0 milPop)
)
(defconst enemyBuildingsInTown 331)
(defrule
	(true)
=>
	(up-get-fact enemy-buildings-in-town 0 enemyBuildingsInTown)
)
(defconst infantrySoldierAmount 332)
(defrule
	(true)
=>
	(up-get-fact soldier-count 0 infantrySoldierAmount)
)
(defconst attackSoldierAmount 333)
(defrule
	(true)
=>
	(up-get-fact attack-soldier-count 0 attackSoldierAmount)
)
(defconst defendSoldierAmount 334)
(defrule
	(true)
=>
	(up-get-fact defend-soldier-count 0 defendSoldierAmount)
)
(defconst warboatAmount 335)
(defrule
	(true)
=>
	(up-get-fact warboat-count 0 warboatAmount)
)
(defconst attackWarboatAmount 336)
(defrule
	(true)
=>
	(up-get-fact attack-warboat-count 0 attackWarboatAmount)
)
(defconst defendWarboatAmount 337)
(defrule
	(true)
=>
	(up-get-fact defend-warboat-count 0 defendWarboatAmount)
)

; wall constants
(defrule
    (true)
=>
    (set-goal posMapSizeX 0)
    (set-goal posMapSizeY 0)
    (set-goal mapSizeThird 0)
    (set-goal mapSizeTwoThirds 0)
    (set-goal mapSizeTenth 0)
    (set-goal mapSizeNineTenths 0)
    (set-goal maxDimensionOfMap 0)
    (set-goal myPosition-x 0)
    (set-goal myPosition-y 0)
    (set-goal posXisHigh 40)
    (set-goal posXisMed 0)
    (set-goal posXisLow 0)
    (set-goal posYisHigh 40)
    (set-goal posYisMed 0)
    (set-goal posYisLow 0)
    (set-goal posQuadrantCode 0)
    (disable-self)
)
(defrule
    (true)
=>
    (set-goal outerWallPerimeter 12)
    (set-goal innerWallPerimeter 10)
    (set-goal outerWallPoint1-x 0)
    (set-goal outerWallPoint1-y 0)
    (set-goal outerWallPoint2-x 0)
    (set-goal outerWallPoint2-y 0)
    (set-goal outerWallPoint3-x 0)
    (set-goal outerWallPoint3-y 0)
    (set-goal outerWallPoint4-x 0)
    (set-goal outerWallPoint4-y 0)
    (set-goal outerGatePoint1-x 0)
    (set-goal outerGatePoint1-y 0)
    (set-goal outerGatePoint2-x 0)
    (set-goal outerGatePoint2-y 0)
    (set-goal outerGatePoint3-x 0)
    (set-goal outerGatePoint3-y 0)
    (set-goal outerGatePoint4-x 0)
    (set-goal outerGatePoint4-y 0)
    (disable-self)
)
(defrule
    (true)
=>
    (set-goal innerWallPoint1-x 0)
    (set-goal innerWallPoint1-y 0)
    (set-goal innerWallPoint2-x 0)
    (set-goal innerWallPoint2-y 0)
    (set-goal innerWallPoint3-x 0)
    (set-goal innerWallPoint3-y 0)
    (set-goal innerWallPoint4-x 0)
    (set-goal innerWallPoint4-y 0)
    (set-goal innerGatePoint1-x 0)
    (set-goal innerGatePoint1-y 0)
    (set-goal innerGatePoint2-x 0)
    (set-goal innerGatePoint2-y 0)
    (set-goal innerGatePoint3-x 0)
    (set-goal innerGatePoint3-y 0)
    (set-goal innerGatePoint4-x 0)
    (set-goal innerGatePoint4-y 0)
    (set-goal innerSecGatePoint1-x 0)
    (set-goal innerSecGatePoint1-y 0)
    (set-goal innerSecGatePoint2-x 0)
    (set-goal innerSecGatePoint2-y 0)
    (set-goal innerSecGatePoint3-x 0)
    (set-goal innerSecGatePoint3-y 0)
    (set-goal innerSecGatePoint4-x 0)
    (set-goal innerSecGatePoint4-y 0)
    (disable-self)
)
(defrule
    (true)
=>
    (set-goal buildNorthEastMainGates 0)
    (set-goal buildSouthEastMainGates 0)
    (set-goal buildNorthWestMainGates 0)
    (set-goal buildSouthWestMainGates 0)
    (set-goal dontBuildNorthEastWall 0)
    (set-goal dontBuildSouthEastWall 0)
    (set-goal dontBuildNorthWestWall 0)
    (set-goal dontBuildSouthWestWall 0)
    (set-goal buildingInnerWall 0)




    (set-goal gotNorthEastPalisadeGates 0)
    (set-goal gotSouthEastPalisadeGates 0)
    (set-goal gotSouthWestPalisadeGates 0)
    (set-goal gotNorthWestPalisadeGates 0)
    (set-goal gotNorthEastStoneGates 0)
    (set-goal gotSouthEastStoneGates 0)
    (set-goal gotSouthWestStoneGates 0)
    (set-goal gotNorthWestStoneGates 0)
    (set-goal buildingOuterWall 0)
    (disable-self)
)
