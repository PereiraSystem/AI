; BUILDING -------------------------------------------------------
(defrule(true)=>(chat-local-to-self "> 4. Building Loaded")(disable-self))

; CIVILIAN BUILDINGS
; WONDER                          
(defrule
    (game-type == 6) ;wonder race
    (unit-type-count villager > 15)
    (building-type-count-total wonder == 0)
    (can-build wonder)    
=>
    (build wonder)
)

; TOWN CENTER  
(defrule
    (building-type-count-total town-center == 0) 
    (can-build town-center)    
=>
    (chat-local-to-self "Trying To Build Town Center 1")
    (build town-center)
)

(defrule
	(building-type-count-total town-center == 1)
    ;(civilian-population > 35)

    (or
        (building-type-count siege-workshop > 0)
        (or(civ-selected gothic)(civ-selected bohemians))
    )
    ;(can-build town-center)
    (up-can-build 0 c: town-center)    
=>
    ;(set-strategic-number sn-town-center-placement lumber-camp)
    (chat-local-to-self "Trying To Build Town Center 2") 
    (up-set-placement-data my-player-number -1 c: +28)
    (up-build place-control 0 c: town-center)   
    ;(build town-center)
)

(defrule
    (current-age == imperial-age)(food-amount > 400)
	(building-type-count-total town-center == 2) 
    (building-type-count-total monastery > 0)
    (building-type-count-total university > 0)  
    (building-type-count-total castle > 0)
    (military-population > 10)
    ;(can-build town-center)    
     (up-can-build 0 c: town-center)  
=>

    ;(build town-center)
       (up-set-placement-data my-player-number -1 c: -28)
    (up-build place-control 0 c: town-center)   (chat-local-to-self "Trying To Build Town Center 3")
)

(defrule
	(current-age == imperial-age)(military-population > 60)(food-amount > 400)
    (building-type-count-total monastery > 0) 
    (building-type-count-total castle > 0)(building-type-count-total university > 0)  
    (building-type-count-total town-center < 4)
    (not(research-available ri-heavy-scorpion)) 
    (can-build town-center)
=>
    (build town-center)(chat-local-to-self "Trying To Build Town Center")
)

; MILL   
(defrule  
    (building-type-count-total mill == 0)(building-type-count town-center > 0)
    (resource-found food)
    (wood-amount > 200)
    (or(not(civ-selected poles))(wood-amount > 225))
    ;(can-build mill)    
    (up-can-build 0 c: mill)
=>
    ;(build mill)
         (up-set-placement-data my-player-number -1 c: -9)
    (up-build place-control 0 c: mill)   
    (chat-local-to-self "Trying To Build Mill 1 (Food Found)")
)

(defrule  
    (building-type-count-total mill < 1)(building-type-count town-center > 0)
    (wood-amount > 400)(can-build mill)
=>
    (build mill)(chat-local-to-self "Trying To Build Mill 1 (Excess Wood)")
)

(defrule  
    (building-type-count-total mill < 1)(building-type-count town-center > 0)
    (building-type-count-total lumber-camp < 1)
    (building-type-count-total dock < 1)    
    (game-time > 270)
    (wood-amount > 200)(not(civ-selected khmer))
    (can-build mill)    
=>
    (build mill)(chat-local-to-self "Trying To Build Mill 1 (Forced)")
)

(defrule  
    (current-age == feudal-age)(building-type-count town-center > 0)
    (building-type-count-total mill < 1)
    (wood-amount > 200)
    (can-build mill)
=>
    (build mill)
    (chat-local-to-self "Trying To Build Mill 1 (Forced - Feudal)")
)

(defrule  
    (building-type-count-total mill == 1)
    (current-age >= feudal-age)
    (wood-amount > 200)
    (building-type-count town-center > 0)    
    (building-type-count lumber-camp > 1)
    (or(up-compare-goal gl-weMovedPlace == 0)
    (building-type-count dock > 0))
    (not(civ-selected khmer))
    (dropsite-min-distance food > 12)
    (can-build mill)
=>
    (build mill)(chat-local-to-self "Trying To Build Mill 2")
    (up-modify-sn sn-mill-max-distance c:+ 24)
    (set-strategic-number sn-maximum-food-drop-distance 9) 
)

(defrule  
    (military-population > 4)
    (building-type-count-total mill == 2)
    (current-age >= feudal-age)
    (can-build mill)    (dropsite-min-distance food > 12)
    (wood-amount > 200)
    (building-type-count lumber-camp > 0)
    (building-type-count town-center > 0)
    (or(up-compare-goal gl-weMovedPlace == 0)(building-type-count dock > 0))        
    (not(civ-selected khmer))
=>
    (build mill)(chat-local-to-self "Trying To Build Mill 3")
    (up-modify-sn sn-mill-max-distance c:+ 12)
)

(defrule
	(current-age == imperial-age)(military-population > 40) 
    (resource-found food)(building-type-count-total mill < 24)
    (or(wood-amount > 9000)(building-type-count-total mill < 5))
    (dropsite-min-distance food > 3)
    (wood-amount > 800)
    (or(up-compare-goal gl-weMovedPlace == 0)(building-type-count dock > 0))    
    (can-build mill)(not(civ-selected khmer))
=>
    (chat-local-to-self "Trying To Build Mill")   
    (up-modify-sn sn-mill-max-distance c:+ 8)
    (build mill)
 )

; FARMS
; DARK AGE
(defrule
    (current-age == dark-age)(building-type-count town-center > 0)
    (building-type-count-total barracks > 0)(wood-amount > 175)
    (building-type-count-total lumber-camp > 0)
    ;(gaia-)
	(idle-farm-count < 1)
	(can-build farm)    
=>
	(build farm)
)

; FEUDAL AGE
(defrule
	(current-age == feudal-age)(building-type-count town-center > 0)
    (or
        (civ-selected gothic)
        (or
            (building-type-count-total archery-range > 0)    
            (building-type-count-total stable > 0)
        )
    )
    (wood-amount > 175)(food-amount < 2000)
	(idle-farm-count < 1)
	(can-build farm)
=>
    (build farm)
)

; CASTLE AGE
(defrule
	(current-age == castle-age)  
    (food-amount < 1200)(wood-amount > 176)
    (or
        (building-type-count monastery > 0)
        (building-type-count siege-workshop > 0)
    )
	(building-type-count-total farm < 20)
    (idle-farm-count < 3)    
	(can-build farm)
=>
	(build farm)
)

; IMPERIAL AGE
(defrule
	(current-age == imperial-age)
    (food-amount < 5000)(wood-amount > 300)
	(building-type-count-total farm < 32)
    (can-build farm)
=>
    (build farm)
)

; HOUSES
(defrule
(building-type-count-total house == 0)
    (wood-amount g:> gl-minimumWoodForLC)
    (or
        (and(housing-headroom < 3)(population-headroom > 0))
        (wood-amount > 20000)
    )
    (up-can-build 0 c: house)
=>
    (chat-local-to-self "Trying To Build House")
    ;(build house) 
    (up-set-placement-data my-player-number -1 c: -11)
    (up-build place-control 0 c: house)
)
(defrule
    (wood-amount g:> gl-minimumWoodForLC)
    (or
        (and(housing-headroom < 3)(population-headroom > 0))
        (wood-amount > 20000)
    )
    (up-can-build 0 c: house)
=>
    (chat-local-to-self "Trying To Build House")
    ;(build house) 
    (up-set-placement-data my-player-number house c: 0)
    (up-build place-control 0 c: house)
)

; LUMBER   
(defrule
    (building-type-count-total lumber-camp == 0)
    (up-can-build 0 c: lumber-camp)
    ;(resource-found wood)
    (or
        (building-type-count house > 0)
        (civ-selected hun)
    )
=>
    (chat-local-to-self "Trying To Build Special Lumber Camp")
    (up-set-placement-data my-player-number -1 c: -20)
    (up-build place-control 0 c: lumber-camp)
            
)

(defrule
    (building-type-count-total lumber-camp == 0)
    (can-build lumber-camp)
    (resource-found wood)
    ;(dropsite-min-distance wood > 20)
    (dropsite-min-distance wood > 3)
    (or
        (building-type-count house > 0)
        (civ-selected hun)
    )
=>
    (chat-local-to-self "Trying To Build Lumber Camp 1")
    (up-modify-sn sn-camp-max-distance c:+ 16)
    (build lumber-camp)
            
)

(defrule
    (current-age >= feudal-age)
    (building-type-count-total lumber-camp > 0)
    (building-type-count-total lumber-camp g:< gl-max-lumber-camps-qty) 	
    (resource-found wood)
    (dropsite-min-distance wood > 3)
    (can-build lumber-camp)
=>
    (chat-local-to-self "Trying To Build Lumber Camp")
    (build lumber-camp)             
)

; MINING CAMPS                    
; GOLD MINING CAMP
(defrule 
    (current-age == feudal-age)
    (wood-amount > 200)(gold-amount < 200) ;if more than 200 they are using nearby deposit
    (or(wood-amount > 275)(building-type-count town-center > 0))    
    (or(building-type-count archery-range > 0)(building-type-count market > 0))
    (research-completed ri-double-bit-axe)
    (building-type-count-total mining-camp == 0) 
    (resource-found gold) 
    (dropsite-min-distance gold > 3)
    (can-build mining-camp)
=>
    (up-chat-data-to-self "Trying To Build Mining Camp (Gold 1) - Max Distance: %d" s: sn-mining-camp-max-distance)      
    (build mining-camp)
)

(defrule 
    (current-age >= castle-age)
    (wood-amount > 200)    
    (or(wood-amount > 275)(building-type-count town-center > 0))      
    (or(building-type-count-total monastery > 0)
    (building-type-count-total dock > 1))
    (building-type-count-total mining-camp g:< gl-max-mining-camps-qty)
    (resource-found gold) 
    (dropsite-min-distance gold > 3)
    (can-build mining-camp)
=>
    (up-chat-data-to-self "Trying To Build Mining Camp (Gold) - Max Distance: %d" s: sn-mining-camp-max-distance)
    (build mining-camp)
)

; STONE MINING CAMP
(defrule
    (or(building-type-count castle < 1)(stone-amount < 650))
    (or
        (building-type-count university > 0)
        (and(building-type-count town-center < 0)(stone-amount < 100))
    )
    (wood-amount > 276)
    (or(stone-amount < 650)(and(civ-selected frankish)(stone-amount < 490)))    
    (resource-found stone) 
    (dropsite-min-distance stone > 3)
    (can-build mining-camp)
=>
    (up-chat-data-to-self "Trying To Build Mining Camp (Stone 1) - Max Distance: %d" s: sn-mining-camp-max-distance)      
    (build mining-camp) 
)

(defrule
    (building-type-count castle < 2)(stone-amount < 200)
    (or(current-age > castle-age)
    (and(building-type-count town-center < 0)(stone-amount < 100)))    
    (wood-amount > 276)
    (resource-found stone) 
    (dropsite-min-distance stone > 3)
    (can-build mining-camp)
=>
    (up-chat-data-to-self "Trying To Build Mining Camp (Stone 2) - Max Distance: %d" s: sn-mining-camp-max-distance)      
    (build mining-camp)
)

(defrule 
    (current-age > castle-age)
    (building-type-count-total monastery > 0)
    (building-type-count-total mining-camp g:< gl-max-mining-camps-qty)    
    (resource-found stone) 
    (dropsite-min-distance stone > 3)
    (can-build mining-camp)
=>
    (up-chat-data-to-self "Trying To Build Mining Camp (Stone) - Max Distance: %d" s: sn-mining-camp-max-distance)  
    (build mining-camp) 
)

; BLACKSMITH
(defrule
    (or(military-population > 4)
        (not(enemy-buildings-in-town))
    )
    (building-type-count-total blacksmith == 0)(wood-amount > 275)
    (building-type-count town-center > 0)    
    (or(building-type-count-total archery-range > 0)
        (or(civ-selected cumans)(civ-selected bohemians))
    )
    ;(research-completed ri-wheel-barrow)(research-completed ri-double-bit-axe)(research-completed ri-horse-collar)  
    (or(up-compare-goal gl-weMovedPlace == 0)(building-type-count dock > 0))
    (up-can-build 0 c: blacksmith)
=>
    (chat-local-to-self "Trying to build blacksmith")
    (up-set-placement-data my-player-number town-center c: 4)
    (up-build place-control 0 c: blacksmith)  

)

; MARKET
(defrule
    (up-players-in-game ally > 1)
    (game-time > 120) ; so they dont build it inside
    (building-type-count town-center > 0)  
    (building-type-count-total market == 0)
    (or
        (or
            (or
                (wood-amount > 450)
                (food-amount > 900)
            )
            (or
                (gold-amount > 500)
                (stone-amount > 800)
            )
        )  
        (players-building-type-count any-ally market > 0)
    )
    (up-can-build 0 c: market)
=>
    (chat-local-to-self "Trying To Build Market 1 outside")
    ;(up-set-placement-data my-player-number market c:+ 32)
    (up-set-placement-data my-player-number town-center c:+ 32)    
    (up-build place-control 0 c: market)   
)

(defrule
    (up-players-in-game ally == 1)
    (building-type-count town-center > 0)    
    (building-type-count-total market == 0)
    (up-can-build 0 c: market)
=>
    (chat-local-to-self "Trying To Build Market 1 inside") 
    (up-set-placement-data my-player-number town-center c:+ 1)    
    (up-build place-control 0 c: market)     
)

; UNIVERSITY
(defrule
    (building-type-count town-center > 0)    
    (or(building-type-count-total monastery > 0)
    (players-building-type-count any-ally monastery > 0))
    (building-type-count-total market > 0)
    (or(unit-type-count villager > 24)
    (building-type-count-total siege-workshop > 0))
    (research-completed ri-hand-cart)
    (research-completed ri-bow-saw)
    (building-type-count-total university == 0)    
    (can-build university)
=>
    (chat-local-to-self "Trying To Build University")
    (up-set-placement-data my-player-number town-center c: 5)    
    (up-build place-control 0 c: university)   
)

; DOCK
(defrule
    (building-type-count-total dock == 0)
    (or(up-gaia-type-count-total c: ocean-fish-class > 1)
    (up-gaia-type-count-total c: shore-fish-class > 11))
    (can-build dock)
=>
    (chat-local-to-self "Trying To Build Dock 1 (Fish Detected)")
    (build dock)    
)

(defrule
    (current-age == castle-age)
    (building-type-count lumber-camp > 0)
    (building-type-count town-center > 0)        
    (wood-amount > 275)
    (building-type-count-total dock == 1)
    (can-build dock)    
=>
    (up-set-placement-data my-player-number town-center c: 46)    
    (up-build place-control 0 c: dock) 
    (chat-local-to-self "Trying To Build Dock 2 - c46")
)

(defrule
    (current-age == castle-age)
    (building-type-count lumber-camp > 0)
    (building-type-count town-center > 0)        
    (wood-amount > 275)
    (building-type-count-total dock == 1)
    (can-build dock)    
=>
    (up-set-placement-data my-player-number town-center c:+ 46)    
    (up-build place-control 0 c: dock) 
    (chat-local-to-self "Trying To Build Dock 2 - c+ 46")
)

(defrule
    (current-age == castle-age)
    (building-type-count lumber-camp > 0)
    (building-type-count town-center > 0)        
    (wood-amount > 275)
    (building-type-count-total dock == 1)
    (can-build dock)    
=>
    (up-set-placement-data my-player-number town-center c:- 46)    
    (up-build place-control 0 c: dock) 
    (chat-local-to-self "Trying To Build Dock 2 - c- 46")
)

(defrule
    (current-age == imperial-age)
    (building-type-count lumber-camp > 0)
    (building-type-count town-center > 0)        
    (wood-amount > 275)
    (building-type-count-total dock == 2)
    (can-build dock)    
=>
    (up-set-placement-data my-player-number town-center c: -64)    
    (up-build place-control 0 c: dock) 
    (chat-local-to-self "Trying To Build Dock 3")
)
  
; MILITARY
; STONE WALL AND PALISADE WALL

; PREVIOUSLY ENABLE WALL, PERIMETER 1 OR 2
(defrule(false)=>(enable-wall-placement 1)(disable-self))
(defrule(false)=>(enable-wall-placement 2)(disable-self))
; GATE TYPE 1 = PALISADE, 2 = STONE
(defrule(civ-selected gothic)=>(set-strategic-number sn-gate-type-for-wall 1)(disable-self))

; GATES PERIMETER 1
(defrule 
    (or
        (building-type-count-total 72 > 0)
        (building-type-count-total stone-wall > 0)
    )
    (can-build-gate 1)
=>
    (build-gate 1)  
)

; GATES PERIMETER 2
(defrule 
    (or
        (building-type-count-total 72 > 0)
        (building-type-count-total stone-wall > 0)
    )
    (can-build-gate 2)
=>
    (build-gate 2)  
)

; WALL
; STONE WALL PERIMETER 1
(defrule 
	(can-build-wall 1 stone-wall-line)
    (current-age == castle-age)
    ;(building-type-count castle > 0)(current-age == imperial-age)
    ;(military-population > 75)(unit-type-count-total villager > 65)
    ;(food-amount > 1300)(gold-amount > 1300)(wood-amount > 1300)
=>
	(build-wall 1 stone-wall-line) 
)

; PALISADE WALL PERIMETER 1
(defrule
    (building-type-count castle > 0)(current-age == imperial-age)
    (military-population > 75)(unit-type-count-total villager > 65)
    (food-amount > 1300)(gold-amount > 1300)(wood-amount > 1300)
	(can-build-wall 1 72)  
=>
	(build-wall 1 72)
)

; STONE WALL PERIMETER 2
(defrule 
	(can-build-wall 2 stone-wall-line)
    (building-type-count-total castle > 0)(current-age == imperial-age)
=>
	(build-wall 2  stone-wall-line)
)

; PALISADE WALL PERIMETER 2
(defrule 
	(can-build-wall 2 72)
    (building-type-count-total castle > 0)(current-age == imperial-age)
=>
	(build-wall 2 72)
)

; CASTLE            
(defrule
    (building-type-count-total castle == 0)
    (up-can-build 0 c: castle)
    ;(can-build castle)
=>
    (chat-local-to-self "Trying To Build Castle 1")
    (up-set-placement-data my-player-number -1 c: -7)
    ;(up-set-placement-data my-player-number palisade-wall c: -1)    
    (up-build place-control 0 c: castle)       
    (build castle) 
)


(defrule
    (building-type-count-total castle == 1)
    ;(can-build castle)
    (up-can-build 0 c: castle)
=>
    (chat-local-to-self "Trying To Build Castle 2")
    (up-set-placement-data my-player-number town-center c: +7)
    (up-build place-control 0 c: castle)   
    (build castle) 
)

(defrule
    (building-type-count-total castle == 2)(civilian-population > 50)
    (can-build castle)
=>
    (chat-local-to-self "Trying To Build Castle 3")
    (build castle) 
)

(defrule
    (building-type-count-total castle == 3)(unit-type-count villager > 60)
    (civilian-population > 60)(military-population > 70)
    (wood-amount > 4000)(food-amount > 4000)(gold-amount > 4000)
    (can-build castle)    
=>
    (chat-local-to-self "Trying To Build FORWARD Castle 4")
    (build-forward castle) 
)

(defrule
    (civ-selected cumans); when pop is at max
    (research-completed my-unique-research)
    (population-headroom == 0)
    (housing-headroom == 0)    
    (can-build castle)
=>
    (chat-local-to-self "Trying To Build Extra Cuman Castle For Mercenaries")
    (build castle) 
)

; MINI CASTLES (MEGA TOWERS?)
(defrule
    (building-type-count-total castle > 1)
    (building-type-count-total krepost < 64)
    (can-build krepost)
=>
    (build krepost)
)

(defrule
    (building-type-count-total castle > 1) 
    (building-type-count-total donjon < 64)
    (can-build donjon)    
=>
    (build donjon) 
)

; MILITARY PRODUCTION BUILDINGS
; BARRACKS   
(defrule 
	(building-type-count-total barracks == 0)
    (building-type-count town-center > 0)
    (or
    	(or
            (and(building-type-count-total lumber-camp > 0)(wood-amount > 275))
            (and
                (and(building-type-count-total lumber-camp > 0)(wood-amount > 225))
                (civ-selected japanese)
            )            
        )
        (wood-amount > 305)
    )
    ;(can-build barracks)
    (up-can-build 0 c: barracks)
=>
    (chat-local-to-self "Trying To Build Barracks 1")
    (up-set-placement-data my-player-number -1 c: -1)
    (up-build place-control 0 c: barracks)    
    ;(build barracks)

)

(defrule
	(current-age == imperial-age)
	(building-type-count-total barracks == 1)
    (building-type-count town-center > 0)    
    (food-amount > 400)
    (or
        (and(building-type-count-total siege-workshop > 0)(building-type-count-total castle > 0))
        (civ-selected gothic)
    )
    (military-population > 40)    
    (up-can-build 0 c: barracks)
=>  
    (chat-local-to-self "Trying To Build Barracks 2")       
    (up-set-placement-data my-player-number -1 c: +32)
    (up-build place-control 0 c: barracks)   
)






; BUILD STABLES
(defrule
    (or(wood-amount > 275)(building-type-count market > 0))
    (building-type-count lumber-camp > 0)
    (or
        (not(civ-selected japanese))(building-type-count archery-range > 0)
    )
    (or
        (not(civ-selected portuguese))(building-type-count archery-range > 0)
    )
    (building-type-count-total stable == 0)
    (or(up-compare-goal gl-weMovedPlace == 0)(building-type-count dock > 0))
    (up-can-build 0 c: stable)
=>
    (chat-local-to-self "Trying To Build Stable 1")
    ;(up-set-placement-data my-player-number town-center c: 2)
    (up-set-placement-data my-player-number town-center c: 1)    
    (up-build place-control 0 c: stable)        
)




; BUILD ARCHERY RANGE
(defrule
	(building-type-count-total archery-range == 0)
    (wood-amount > 275)
    (building-type-count town-center > 0)
    (building-type-count lumber-camp > 0)
    (up-can-build 0 c: archery-range)
=>
    (chat-local-to-self "Trying To Build Archery Range 1")
    (up-set-placement-data my-player-number barracks c: -1)
    (up-build place-control 0 c: archery-range)
    (chat-local-to-self "Trying To Build Archery Range 1 - Place control")             
)


; BUILD SIEGE WORKSHOP
(defrule
    (building-type-count-total siege-workshop == 0)
    (building-type-count town-center > 0)
    (or(building-type-count monastery > 0)
    (players-building-type-count any-ally monastery > 0))
    (or
        (building-type-count-total university == 1)
        (not(civ-selected bohemians))
    )
    (not(civ-selected gothic))
    (up-can-build 0 c: siege-workshop)
    ;(can-build siege-workshop)    
=>
    (chat-local-to-self "Trying To Build Siege Workshop 1")     
    ;(build siege-workshop)  
    (up-set-placement-data my-player-number town-center c: -4)
    (up-build place-control 0 c: siege-workshop)       
)





; MONASTERY             
(defrule
    (or(building-type-count-total house > 3)(civ-selected hun))
    (building-type-count-total monastery == 0)
    (or
        (not(players-building-type-count any-ally monastery > 0))
        (or
            (civ-selected bohemians)(civ-selected aztec)
        )
    )
    (can-build monastery)
=>  
    (chat-local-to-self "Trying To Build Monastery 1")  
      
    (build monastery)
)

(defrule
    (game-time > 900)
    (or
        (hold-relics)
        (not(enemy-captured-relics))
    )
    (and
        (not(civ-selected burgundians))
        (players-civ any-ally burgundians)
    )
=>
    (chat-to-allies "RELIC TRANSFUSION TO BURGUNDIANS")
    (delete-building monastery)(disable-self)
)

(defrule
    (game-time > 900)
    (or
        (hold-relics)
        (not(enemy-captured-relics))
    )
    (and
        (not(civ-selected aztec))
        (players-civ any-ally aztec)
    )
    (not(civ-selected burgundians))
=>
    (chat-to-allies "RELIC TRANSFUSION TO AZTECS")
    (delete-building monastery)(disable-self)
)

(defrule
    (or
        (civ-selected burgundians)(civ-selected aztec)
    )
    (game-time > 900)
    (or
        (hold-relics)
        (not(enemy-captured-relics))
    )
    (up-can-build 0 c: monastery)
=>  
    (chat-local-to-self "BUILDING RELIC TRANSFUSION MONASTERY")  
    (up-set-placement-data my-player-number -1 c:- 6)
    (up-build place-control 0 c: monastery)         
)

; TOWERS
; BOMBARD TOWER
(defrule
    (can-build bombard-tower)
    (gold-amount > 301)
    (building-type-count-total castle > 0)
=>
    (build bombard-tower) 
)

; NORMAL TOWER
(defrule
    (false) ;use only after palisade, see testing
    (current-age < castle-age)
    (or(town-under-attack)(unit-type-count villager > 9))
    (not(up-research-status c: castle-age == research-pending))
    (or(building-type-count stable > 0)(building-type-count blacksmith > 0))
    ;(can-build watch-tower-line)
    (up-can-build 0 c: watch-tower)    
=>  
    ;(build watch-tower-line)
    (up-set-placement-data my-player-number town-center c: +16)    
    (up-build place-control 0 c: watch-tower)  
)

(defrule
	(current-age == imperial-age)
    (building-type-count-total castle > 1)
    (not(civ-selected teutonic))(not(civ-selected portuguese))
    (building-type-count watch-tower-line < 4)
    (not(can-build bombard-tower))    
    (up-can-build 0 c: watch-tower)     
    ;(can-build watch-tower-line)
=>
    ;(build watch-tower-line)
    (up-set-placement-data my-player-number town-center c: +16)    
    (up-build place-control 0 c: watch-tower)  
)


; UP WALL CONSTANTS - YEAH I KIND OFLIKE IT THAT WAY

(defconst gl-outerWallGatePoint1-x 441)
(defconst gl-outerWallGatePoint1-y 442)
(defconst gl-outerWallGatePoint2-x 443)
(defconst gl-outerWallGatePoint2-y 444)
(defconst gl-outerWallGatePoint3-x 445)
(defconst gl-outerWallGatePoint3-y 446)
(defconst gl-outerWallGatePoint4-x 447)
(defconst gl-outerWallGatePoint4-y 448)

(defconst gl-buildNorthEastGates 450)
(defconst gl-buildSouthEastGates 451)
(defconst gl-buildNorthWestGates 452)
(defconst gl-buildSouthWestGates 453)

(defconst gl-dontBuildNorthEastWall 455)
(defconst gl-dontBuildSouthEastWall 456)
(defconst gl-dontBuildNorthWestWall 457)
(defconst gl-dontBuildSouthWestWall 458)
(defconst gl-weAlreadyGotPalisadeGates 459)
(defconst gl-weAlreadyGotStoneGates 460)
(defconst gl-innerWallGatePoint1-x 461)
(defconst gl-innerWallGatePoint1-y 462)
(defconst gl-innerWallGatePoint2-x 463)
(defconst gl-innerWallGatePoint2-y 464)
(defconst gl-innerWallGatePoint3-x 465)
(defconst gl-innerWallGatePoint3-y 466)
(defconst gl-innerWallGatePoint4-x 467)
(defconst gl-innerWallGatePoint4-y 468)

(defconst gl-innerWallGateCounter 469)

(defconst gl-positionXisHigh 470) 
(defconst gl-positionXisMedium 471)
(defconst gl-positionXisLow 472)
(defconst gl-positionYisHigh 473) 
(defconst gl-positionYisMedium 474)
(defconst gl-positionYisLow 475)
(defconst gl-myPosition-x 476)
(defconst gl-myPosition-y 477)

(defconst gl-posMapSize-x 478)
(defconst gl-posMapSize-y 479)

(defconst gl-positionQuadrantCode 480)

(defconst gl-mapSizeThird 481)
(defconst gl-mapSizeTwoThirds 482)
(defconst gl-mapSizeTenth 483)
(defconst gl-mapSizeNineTenths 484)
(defconst gl-buildingInnerWall 485)
(defconst gl-outerWallPerimeter 486)
(defconst gl-innerWallPerimeter 487)
(defconst gl-palisadeGateCounter 488)
(defconst gl-maxDimensionOfMap 489)
(defconst gl-innerWallPoint1-x 491)
(defconst gl-innerWallPoint1-y 492)
(defconst gl-innerWallPoint2-x 493)
(defconst gl-innerWallPoint2-y 494)
(defconst gl-innerWallPoint3-x 495)
(defconst gl-innerWallPoint3-y 496)
(defconst gl-innerWallPoint4-x 497)
(defconst gl-innerWallPoint4-y 498)


(defconst gl-wallPoint1-x 501)
(defconst gl-wallPoint1-y 502)
(defconst gl-wallPoint2-x 503)
(defconst gl-wallPoint2-y 504)
(defconst gl-wallPoint3-x 505)
(defconst gl-wallPoint3-y 506)
(defconst gl-wallPoint4-x 507)
(defconst gl-wallPoint4-y 508)
(defrule
    (true) 
=>
    (set-goal gl-innerWallGateCounter 40)
    (set-goal gl-positionXisHigh 0) 
    (set-goal gl-positionXisMedium 0)
    (set-goal gl-positionXisLow 0)
    (set-goal gl-positionYisHigh 0) 
    (set-goal gl-positionYisMedium 0)
    (set-goal gl-positionYisLow 0)
    (set-goal gl-myPosition-x 0)
    (set-goal gl-myPosition-y 0)

    (set-goal gl-posMapSize-x 0)
    (set-goal gl-posMapSize-y 0)

    (set-goal gl-positionQuadrantCode 0)

    (set-goal gl-mapSizeThird 0)
    (set-goal gl-mapSizeTwoThirds 0)
    (set-goal gl-mapSizeTenth 0)
    (set-goal gl-mapSizeNineTenths 0)        

    (set-goal gl-buildingInnerWall 0)
    (set-goal gl-outerWallPerimeter 0)
    (set-goal gl-innerWallPerimeter 0)    
    (set-goal gl-palisadeGateCounter 0)
    
    (set-goal gl-maxDimensionOfMap 120)
    (set-goal gl-wallPoint1-x 0)
    (set-goal gl-wallPoint1-y 0)
    (set-goal gl-wallPoint2-x 0)
    (set-goal gl-wallPoint2-y 0)
    (set-goal gl-wallPoint3-x 0)
    (set-goal gl-wallPoint3-y 0)
    (set-goal gl-wallPoint4-x 0)
    (set-goal gl-wallPoint4-y 0)
    (disable-self)  
)


(defrule
    (true)
=>
    (set-goal gl-dontBuildNorthEastWall 0)
    (set-goal gl-dontBuildSouthEastWall 0)
    (set-goal gl-dontBuildNorthWestWall 0)
    (set-goal gl-dontBuildSouthWestWall 0)
    (set-goal gl-buildNorthEastGates 0)
    (set-goal gl-buildSouthEastGates 0)
    (set-goal gl-buildNorthWestGates 0)
    (set-goal gl-buildSouthWestGates 0)
 

    (set-goal gl-innerWallPerimeter 10)
    (set-goal gl-outerWallPerimeter 11)(disable-self)  
)

; MAP SIZE AND PLAYER NUMBER CHECKS -------------------------
(defrule
    (up-players-in-game any < 8)
=>
    (up-modify-goal gl-innerWallPerimeter c:+ 1)
    (up-modify-goal gl-outerWallPerimeter c:+ 2)
    (up-modify-sn sn-maximum-town-size c:+ 2)    
    (up-modify-sn sn-minimum-town-size c:+ 2)    
    (disable-self)  
)

(defrule
    (up-players-in-game any < 7)
=>
    ;(up-modify-goal gl-innerWallPerimeter c:+ 1)
    (up-modify-goal gl-outerWallPerimeter c:+ 1)
    (up-modify-sn sn-maximum-town-size c:+ 1)    
    (up-modify-sn sn-minimum-town-size c:+ 1)       
    (disable-self)  
)

(defrule
    (up-players-in-game any < 6)
=>
    (up-modify-goal gl-innerWallPerimeter c:+ 1)
    (up-modify-goal gl-outerWallPerimeter c:+ 1)
    (up-modify-sn sn-maximum-town-size c:+ 1)    
    (up-modify-sn sn-minimum-town-size c:+ 1)       
    (disable-self)  
)

(defrule
    (up-players-in-game any < 5)
=>
    (up-modify-goal gl-innerWallPerimeter c:+ 1)
    (up-modify-goal gl-outerWallPerimeter c:+ 1)
    (up-modify-sn sn-maximum-town-size c:+ 1)    
    (up-modify-sn sn-minimum-town-size c:+ 1)       
    (disable-self)  
)



(defrule
    (map-size small)
=>
    (up-modify-goal gl-innerWallPerimeter c:+ 1)
    (up-modify-goal gl-outerWallPerimeter c:+ 3)
    (up-modify-sn sn-maximum-town-size c:+ 3)    
    (up-modify-sn sn-minimum-town-size c:+ 3)
    (set-goal gl-maxDimensionOfMap 144)
    (disable-self)  
)

(defrule
    (map-size medium)
=>
    (up-modify-goal gl-innerWallPerimeter c:+ 2)
    (up-modify-goal gl-outerWallPerimeter c:+ 4)
    (up-modify-sn sn-maximum-town-size c:+ 4)    
    (up-modify-sn sn-minimum-town-size c:+ 4)
    (set-goal gl-maxDimensionOfMap 168)     
    (disable-self)  
)

(defrule
    (map-size normal)
=>
    (up-modify-goal gl-innerWallPerimeter c:+ 2)
    (up-modify-goal gl-outerWallPerimeter c:+ 4)
    (up-modify-sn sn-maximum-town-size c:+ 4)    
    (up-modify-sn sn-minimum-town-size c:+ 4)
    (set-goal gl-maxDimensionOfMap 200)    
    (disable-self)  
)

(defrule
    (map-size large)
=>
    (up-modify-goal gl-innerWallPerimeter c:+ 2)
    (up-modify-goal gl-outerWallPerimeter c:+ 4)
    (up-modify-sn sn-maximum-town-size c:+ 4)    
    (up-modify-sn sn-minimum-town-size c:+ 4)
    (set-goal gl-maxDimensionOfMap 220)
    (disable-self)  
)

(defrule
    (map-size giant)
=>
    (up-modify-goal gl-innerWallPerimeter c:+ 4)
    (up-modify-goal gl-outerWallPerimeter c:+ 6)
    (up-modify-sn sn-maximum-town-size c:+ 6)    
    (up-modify-sn sn-minimum-town-size c:+ 6)
    (set-goal gl-maxDimensionOfMap 240)    
    (disable-self)  
)

(defrule
    (up-compare-goal gl-posMapSize-x > 256)
=>
    (up-modify-goal gl-innerWallPerimeter c:+ 2)
    (up-modify-goal gl-outerWallPerimeter c:+ 4)
    (up-modify-sn sn-maximum-town-size c:+ 4)
    (up-modify-sn sn-minimum-town-size c:+ 4)
    (set-goal gl-maxDimensionOfMap 480)
    (disable-self)
)

(defrule
    (true)
=>
    ;(up-chat-data-to-self "Inner wall perimeter: %d" g: gl-innerWallPerimeter)    
    ;(up-chat-data-to-self "Outer wall perimeter: %d" g: gl-outerWallPerimeter)
    (disable-self)    
)

(defrule
    (true)
=>
    (up-get-point position-self gl-myPosition-x)
    (up-get-point position-map-size gl-mapSizeThird)
    (up-get-point position-map-size gl-mapSizeTwoThirds)
    (up-get-point position-map-size gl-mapSizeTenth)     
    (up-get-point position-map-size gl-mapSizeNineTenths)    
    (up-get-point position-map-size gl-posMapSize-x)        
    (up-get-point position-map-size gl-maxDimensionOfMap)

   

    (up-modify-goal gl-mapSizeThird c:/ 3)
    (up-modify-goal gl-mapSizeTwoThirds c:/ 3)
    (up-modify-goal gl-mapSizeTwoThirds c:* 2)
    (up-modify-goal gl-mapSizeTenth c:/ 10)
    (up-modify-goal gl-mapSizeNineTenths g:- gl-mapSizeTenth)

    ;(up-chat-data-to-self "Map Size x: %d" g: gl-posMapSize-x)
    ; getting it manually
    ;(up-chat-data-to-self "Map Size manually entered: %d" g: gl-maxDimensionOfMap)
    ;(up-chat-data-to-self "Map Size 1/3 %d" g: gl-mapSizeThird)
    ;(up-chat-data-to-self "Map Size 2/3 %d" g: gl-mapSizeTwoThirds)
    ;(up-chat-data-to-self "Map Size 1/10 %d" g: gl-mapSizeTenth)    
    ;(up-chat-data-to-self "POS X: %d" g: gl-myPosition-x) 
    ;(up-chat-data-to-self "POS Y: %d" g: gl-myPosition-y)           
    (disable-self)   
)

; CHECK OUR POSITION IN 9 SQUARES
(defrule
    (up-compare-goal gl-myPosition-x g:>= gl-mapSizeTwoThirds)
=>
    (set-goal gl-positionXisHigh 1)(disable-self) 
)
(defrule
    (up-compare-goal gl-myPosition-y g:>= gl-mapSizeTwoThirds)
=>
    (set-goal gl-positionYisHigh 1)(disable-self)
)
(defrule
    (up-compare-goal gl-myPosition-x g:< gl-mapSizeTwoThirds)
    (up-compare-goal gl-myPosition-x g:> gl-mapSizeThird)
=>
    (set-goal gl-positionXisMedium 1)(disable-self)
)
(defrule
    (up-compare-goal gl-myPosition-y g:< gl-mapSizeTwoThirds)
    (up-compare-goal gl-myPosition-y g:> gl-mapSizeThird)
=>
    (set-goal gl-positionYisMedium 1)(disable-self)
)
(defrule
    (up-compare-goal gl-myPosition-x g:<= gl-mapSizeThird)
=>
    (set-goal gl-positionXisLow 1)(disable-self)
)
(defrule
    (up-compare-goal gl-myPosition-y g:<= gl-mapSizeThird)
=>
    (set-goal gl-positionYisLow 1)(disable-self)
)


; SAY 1 OF 9 POSITIONS TO ALLIES AND STORE POSITION IN A CODE WHILE WE ARE AT IT
(defrule
    (up-compare-goal gl-positionXisHigh == 1)(up-compare-goal gl-positionYisHigh == 1)
=>    
    ;(chat-to-allies "IM AT THE EAST, IN THE CORNER! - POS 1")
    (set-goal gl-positionQuadrantCode 1)    
    (up-send-flare position-self)(disable-self)
)
(defrule
    (up-compare-goal gl-positionXisHigh == 1)(up-compare-goal gl-positionYisMedium == 1)
=>  
    ;(chat-to-allies "IM AT THE NORTH EAST!")
    (set-goal gl-positionQuadrantCode 2) 
    (up-send-flare position-self)(disable-self)  
)
(defrule
    (up-compare-goal gl-positionXisHigh == 1)(up-compare-goal gl-positionYisLow == 1)
=>  
    ;(chat-to-allies "IM AT AT THE NORTH, IN THE CORNER! - POS 3")
    (set-goal gl-positionQuadrantCode 3)     
    (up-send-flare position-self)(disable-self)  
)
(defrule
    (up-compare-goal gl-positionXisMedium == 1)(up-compare-goal gl-positionYisHigh == 1)
=>  
    ;(chat-to-allies "IM AT THE SOUTH EAST!")
    (set-goal gl-positionQuadrantCode 4)     
    (up-send-flare position-self)(disable-self)
)
(defrule
    (up-compare-goal gl-positionXisMedium == 1)(up-compare-goal gl-positionYisMedium == 1)
=>  
    ;(chat-to-allies "IM IN THE MIDDLE OF THE MAP - POS 5")
    (set-goal gl-positionQuadrantCode 5)     
    (up-send-flare position-self)(disable-self)
)
(defrule
    (up-compare-goal gl-positionXisMedium == 1)(up-compare-goal gl-positionYisLow == 1)
=>  
    ;(chat-to-allies "IM AT THE NORTH WEST!")
    (set-goal gl-positionQuadrantCode 6)
    (up-send-flare position-self)(disable-self)
)
(defrule
    (up-compare-goal gl-positionXisLow == 1)(up-compare-goal gl-positionYisHigh == 1)
=> 
    ;(chat-to-allies "IM AT THE SOUTH, IN THE CORNER! - POS 7")
    (set-goal gl-positionQuadrantCode 7)
    (up-send-flare position-self)(disable-self)
) 
(defrule
    (up-compare-goal gl-positionXisLow == 1)(up-compare-goal gl-positionYisMedium == 1)
=>
    ;(chat-to-allies "IM AT THE SOUTH WEST!")
    (set-goal gl-positionQuadrantCode 8)    
    (up-send-flare position-self)(disable-self)  
)    
(defrule
    (up-compare-goal gl-positionXisLow == 1)(up-compare-goal gl-positionYisLow == 1)
=>     
    ;(chat-to-allies "IM AT THE WEST, IN THE CORNER! - POS 9")
    (set-goal gl-positionQuadrantCode 9)
    (up-send-flare position-self)(disable-self)  
)

(defrule 
    (true)
=>    
    (up-get-point position-self gl-wallPoint1-x)
    (up-get-point position-self gl-wallPoint2-x)
    (up-get-point position-self gl-wallPoint3-x)
    (up-get-point position-self gl-wallPoint4-x)
    (up-get-point position-self gl-innerWallPoint1-x)
    (up-get-point position-self gl-innerWallPoint2-x)
    (up-get-point position-self gl-innerWallPoint3-x)
    (up-get-point position-self gl-innerWallPoint4-x)
    (up-get-point position-self gl-innerWallGatePoint1-x)
    (up-get-point position-self gl-innerWallGatePoint2-x)
    (up-get-point position-self gl-innerWallGatePoint3-x)
    (up-get-point position-self gl-innerWallGatePoint4-x)    
    (up-get-point position-self gl-outerWallGatePoint1-x )
    (up-get-point position-self gl-outerWallGatePoint2-x )
    (up-get-point position-self gl-outerWallGatePoint3-x )
    (up-get-point position-self gl-outerWallGatePoint4-x )
    (disable-self)           
)

; CREATE OUTER WALL SHAPE ACCORDING TO OUTER PERIMETER SIZE
(defrule
    (true) 
=>    
    (up-modify-goal gl-wallPoint1-x g:+ gl-outerWallPerimeter)
    (up-modify-goal gl-wallPoint1-y g:- gl-outerWallPerimeter) 
    (up-modify-goal gl-wallPoint2-x g:+ gl-outerWallPerimeter)
    (up-modify-goal gl-wallPoint2-y g:+ gl-outerWallPerimeter) 
    (up-modify-goal gl-wallPoint3-x g:- gl-outerWallPerimeter)
    (up-modify-goal gl-wallPoint3-y g:+ gl-outerWallPerimeter) 
    (up-modify-goal gl-wallPoint4-x g:- gl-outerWallPerimeter)
    (up-modify-goal gl-wallPoint4-y g:- gl-outerWallPerimeter)  
    (disable-self)
)

; CREATE OUTER GATES SHAPE ACCORDING TO PERIMETER SIZE
(defrule
    (true) 
=>    
    (up-modify-goal gl-outerWallGatePoint1-x g:+ gl-outerWallPerimeter) 
    (up-modify-goal gl-outerWallGatePoint1-y g:- gl-outerWallPerimeter) 
    (up-modify-goal gl-outerWallGatePoint2-x g:+ gl-outerWallPerimeter)
    (up-modify-goal gl-outerWallGatePoint2-y g:+ gl-outerWallPerimeter) 
    (up-modify-goal gl-outerWallGatePoint3-x g:- gl-outerWallPerimeter)
    (up-modify-goal gl-outerWallGatePoint3-y g:+ gl-outerWallPerimeter) 
    (up-modify-goal gl-outerWallGatePoint4-x g:- gl-outerWallPerimeter)
    (up-modify-goal gl-outerWallGatePoint4-y g:- gl-outerWallPerimeter)  
    (disable-self)           
)

; CREATE INNER WALL SHAPE ACCORDING TO INNER PERIMETER SIZE
(defrule
    (true) 
=>   
    (up-modify-goal gl-innerWallPoint1-x g:+ gl-innerWallPerimeter)
    (up-modify-goal gl-innerWallPoint1-y g:- gl-innerWallPerimeter) 
    (up-modify-goal gl-innerWallPoint2-x g:+ gl-innerWallPerimeter)
    (up-modify-goal gl-innerWallPoint2-y g:+ gl-innerWallPerimeter) 
    (up-modify-goal gl-innerWallPoint3-x g:- gl-innerWallPerimeter)
    (up-modify-goal gl-innerWallPoint3-y g:+ gl-innerWallPerimeter) 
    (up-modify-goal gl-innerWallPoint4-x g:- gl-innerWallPerimeter)
    (up-modify-goal gl-innerWallPoint4-y g:- gl-innerWallPerimeter)  
    (disable-self)           
)

; CREATE INNER GATES SHAPE ACCORDING TO PERIMETER SIZE
(defrule
    (true) 
=>    
    (up-modify-goal gl-innerWallGatePoint1-x g:+ gl-innerWallPerimeter)
    (up-modify-goal gl-innerWallGatePoint1-y g:- gl-innerWallPerimeter) 
    (up-modify-goal gl-innerWallGatePoint2-x g:+ gl-innerWallPerimeter)
    (up-modify-goal gl-innerWallGatePoint2-y g:+ gl-innerWallPerimeter) 
    (up-modify-goal gl-innerWallGatePoint3-x g:- gl-innerWallPerimeter)
    (up-modify-goal gl-innerWallGatePoint3-y g:+ gl-innerWallPerimeter) 
    (up-modify-goal gl-innerWallGatePoint4-x g:- gl-innerWallPerimeter)
    (up-modify-goal gl-innerWallGatePoint4-y g:- gl-innerWallPerimeter)  
    (disable-self)           
)

; MAKE THE OUTER AND INNER WALLS REACH THE BORDERS IF THEY ARE CLOSE
; LOWER POINTS SET TO ZERO
(defrule
    (up-compare-goal gl-wallPoint1-y g:< gl-mapSizeTenth)
=>    
    (set-goal gl-wallPoint1-y 0)
    (set-goal gl-innerWallPoint1-y 0)(disable-self)
)
(defrule 
    (up-compare-goal gl-wallPoint3-x g:< gl-mapSizeTenth)
=>    
    (set-goal gl-wallPoint3-x 0)
    (set-goal gl-innerWallPoint3-x 0)(disable-self)     
)
(defrule 
    (up-compare-goal gl-wallPoint4-x g:< gl-mapSizeTenth)
=>    
    (set-goal gl-wallPoint4-x 0)
    (set-goal gl-innerWallPoint4-x 0)(disable-self)      
)
(defrule 
    (up-compare-goal gl-wallPoint4-y g:< gl-mapSizeTenth)
=>    
    (set-goal gl-wallPoint4-y 0)
    (set-goal gl-innerWallPoint4-y 0)(disable-self)     
)

; HIGHER POINTS SET TO MAP SIZE MANUALLY - TRY TO GET FROM GOAL
#load-if-defined TINY-MAP
(defrule 
    (up-compare-goal gl-wallPoint1-x g:> gl-mapSizeNineTenths)
=>    
    (set-goal gl-wallPoint1-x 120)
    (set-goal gl-innerWallPoint1-x 120)(disable-self)   
)
(defrule 
    (up-compare-goal gl-wallPoint2-x g:> gl-mapSizeNineTenths)
=>    
    (set-goal gl-wallPoint2-x 120)
    (set-goal gl-innerWallPoint2-x 120)(disable-self)
)
(defrule
    (up-compare-goal gl-wallPoint2-y g:> gl-mapSizeNineTenths)
=>    
    (set-goal gl-wallPoint2-y 120)
    (set-goal gl-innerWallPoint2-y 120)(disable-self)
)
(defrule
    (up-compare-goal gl-wallPoint3-y g:> gl-mapSizeNineTenths)
=>    
    (set-goal gl-wallPoint3-y 120)
    (set-goal gl-innerWallPoint3-y 120)(disable-self)      
)
#end-if
#load-if-defined SMALL-MAP
(defrule 
    (up-compare-goal gl-wallPoint1-x g:> gl-mapSizeNineTenths)
=>    
    (set-goal gl-wallPoint1-x 144)
    (set-goal gl-innerWallPoint1-x 144)(disable-self)   
)
(defrule 
    (up-compare-goal gl-wallPoint2-x g:> gl-mapSizeNineTenths)
=>    
    (set-goal gl-wallPoint2-x 144)
    (set-goal gl-innerWallPoint2-x 144)(disable-self)
)
(defrule
    (up-compare-goal gl-wallPoint2-y g:> gl-mapSizeNineTenths)
=>    
    (set-goal gl-wallPoint2-y 144)
    (set-goal gl-innerWallPoint2-y 144)(disable-self)
)
(defrule
    (up-compare-goal gl-wallPoint3-y g:> gl-mapSizeNineTenths)
=>    
    (set-goal gl-wallPoint3-y 144)
    (set-goal gl-innerWallPoint3-y 144)(disable-self)      
)
#end-if
#load-if-defined MEDIUM-MAP
(defrule 
    (up-compare-goal gl-wallPoint1-x g:> gl-mapSizeNineTenths)
=>    
    (set-goal gl-wallPoint1-x 168)
    (set-goal gl-innerWallPoint1-x 168)(disable-self)   
)
(defrule 
    (up-compare-goal gl-wallPoint2-x g:> gl-mapSizeNineTenths)
=>    
    (set-goal gl-wallPoint2-x 168)
    (set-goal gl-innerWallPoint2-x 168)(disable-self)
)
(defrule
    (up-compare-goal gl-wallPoint2-y g:> gl-mapSizeNineTenths)
=>    
    (set-goal gl-wallPoint2-y 168)
    (set-goal gl-innerWallPoint2-y 168)(disable-self)
)
(defrule
    (up-compare-goal gl-wallPoint3-y g:> gl-mapSizeNineTenths)
=>    
    (set-goal gl-wallPoint3-y 168)
    (set-goal gl-innerWallPoint3-y 168)(disable-self)      
)
#end-if
#load-if-defined NORMAL-MAP
(defrule 
    (up-compare-goal gl-wallPoint1-x g:> gl-mapSizeNineTenths)
=>    
    (set-goal gl-wallPoint1-x 200)
    (set-goal gl-innerWallPoint1-x 200)(disable-self)   
)
(defrule 
    (up-compare-goal gl-wallPoint2-x g:> gl-mapSizeNineTenths)
=>    
    (set-goal gl-wallPoint2-x 200)
    (set-goal gl-innerWallPoint2-x 200)(disable-self)
)
(defrule
    (up-compare-goal gl-wallPoint2-y g:> gl-mapSizeNineTenths)
=>    
    (set-goal gl-wallPoint2-y 200)
    (set-goal gl-innerWallPoint2-y 200)(disable-self)
)
(defrule
    (up-compare-goal gl-wallPoint3-y g:> gl-mapSizeNineTenths)
=>    
    (set-goal gl-wallPoint3-y 200)
    (set-goal gl-innerWallPoint3-y 200)(disable-self)      
)
#end-if
#load-if-defined LARGE-MAP
(defrule 
    (up-compare-goal gl-wallPoint1-x g:> gl-mapSizeNineTenths)
=>    
    (set-goal gl-wallPoint1-x 220)
    (set-goal gl-innerWallPoint1-x 220)(disable-self)   
)
(defrule 
    (up-compare-goal gl-wallPoint2-x g:> gl-mapSizeNineTenths)
=>    
    (set-goal gl-wallPoint2-x 220)
    (set-goal gl-innerWallPoint2-x 220)(disable-self)
)
(defrule
    (up-compare-goal gl-wallPoint2-y g:> gl-mapSizeNineTenths)
=>    
    (set-goal gl-wallPoint2-y 220)
    (set-goal gl-innerWallPoint2-y 220)(disable-self)
)
(defrule
    (up-compare-goal gl-wallPoint3-y g:> gl-mapSizeNineTenths)
=>    
    (set-goal gl-wallPoint3-y 220)
    (set-goal gl-innerWallPoint3-y 220)(disable-self)      
)
#end-if
#load-if-defined GIANT-MAP
(defrule 
    (up-compare-goal gl-wallPoint1-x g:> gl-mapSizeNineTenths)
=>    
    (set-goal gl-wallPoint1-x 220)
    (set-goal gl-innerWallPoint1-x 220)(disable-self)   
)
(defrule 
    (up-compare-goal gl-wallPoint2-x g:> gl-mapSizeNineTenths)
=>    
    (set-goal gl-wallPoint2-x 220)
    (set-goal gl-innerWallPoint2-x 220)(disable-self)
)
(defrule
    (up-compare-goal gl-wallPoint2-y g:> gl-mapSizeNineTenths)
=>    
    (set-goal gl-wallPoint2-y 220)
    (set-goal gl-innerWallPoint2-y 220)(disable-self)
)
(defrule
    (up-compare-goal gl-wallPoint3-y g:> gl-mapSizeNineTenths)
=>    
    (set-goal gl-wallPoint3-y 220)
    (set-goal gl-innerWallPoint3-y 220)(disable-self)      
)
#end-if

; DISABLE THE WALLS THAT WOULD BE PARALLEL TO THE BORDER AND TOO CLOSE TO IT
; BY CHECKING THE FIRST OF THE 2 POINTS
(defrule  ; no north east (1 to 2) if point 1 too close to north border
    (up-compare-goal gl-wallPoint1-x g:> gl-mapSizeNineTenths)
=>
    (set-goal gl-dontBuildNorthEastWall 1)(disable-self)   
)

(defrule ; no south east (2 to 3) if point 2 too close to east border
    (up-compare-goal gl-wallPoint2-y g:> gl-mapSizeNineTenths)
=>
    (set-goal gl-dontBuildSouthEastWall 1)(disable-self) 
)

(defrule ; no south west (3 to 4) if point 3 too close to south border
    (up-compare-goal gl-wallPoint3-x g:< gl-mapSizeTenth)
=>
    (set-goal gl-dontBuildSouthWestWall 1)(disable-self) 
)

(defrule ; no north west (4 to 1) if point 4 too close to west border
    (up-compare-goal gl-wallPoint4-y g:< gl-mapSizeTenth)
=>
    (set-goal gl-dontBuildNorthWestWall 1)(disable-self) 
) 

; CHOOSE GATES POSITION 
; 2, 4 , 6 AND 8 GET FIXED GATES
; 1 AND 9 CORNERS DEPEND ON X AND Y
; 3 AND 7 CORNERS DEPENDS ON NOT BUILDING A WALL
(defrule
    (or
        (up-compare-goal gl-positionQuadrantCode == 8) ;south west center 
        (or
            (and 
                (up-compare-goal gl-dontBuildSouthWestWall == 1)            
                (up-compare-goal gl-positionQuadrantCode == 7)           
            )
            (and 
                (up-compare-goal gl-myPosition-y g:> gl-myPosition-x)            
                (up-compare-goal gl-positionQuadrantCode == 9)            
            )  
        )         
    )
=>
    (set-goal gl-buildNorthEastGates 1)    
)

(defrule
    (or
        (up-compare-goal gl-positionQuadrantCode == 6) ;n w center always gets the same
        (or
            (and 
                (up-compare-goal gl-positionQuadrantCode == 3)
                ; y is always gonna be lower than x for pos 3 and viceversa for 7
                (up-compare-goal gl-dontBuildNorthEastWall)            
            )
            (and 
                (up-compare-goal gl-positionQuadrantCode == 9)   
                (up-compare-goal gl-myPosition-y g:<= gl-myPosition-x)            
            )            
        )
    )
=>
    (set-goal gl-buildSouthEastGates 1)    
)

(defrule
    (or
        (up-compare-goal gl-positionQuadrantCode == 4) ;south east center
        (or
            (and 
                (up-compare-goal gl-myPosition-x g:>= gl-mapSizeTenth)            
                (up-compare-goal gl-positionQuadrantCode == 7)           
            )
            (and 
                (up-compare-goal gl-myPosition-y g:> gl-myPosition-x)            
                (up-compare-goal gl-positionQuadrantCode == 1) ; !!!!           
            )                          
        )
    ) 
=>
    (set-goal gl-buildNorthWestGates 1)    
)

(defrule
    (or
        (up-compare-goal gl-positionQuadrantCode == 2) ;north east center 
        (or
            (and 
                (up-compare-goal gl-positionQuadrantCode == 3)
                ; y is always gonna be lower than x for pos 3                              
                (up-compare-goal gl-myPosition-y g:> gl-mapSizeTenth)          
        
            )
            (and 
                (up-compare-goal gl-myPosition-y g:<= gl-myPosition-x)            
                (up-compare-goal gl-positionQuadrantCode == 1) ; !!!!           
            )          
        )
    )
=>
    (set-goal gl-buildSouthWestGates 1)    
)

; MAKE THE OUTER WALL GATE SECTION SMALLER THAN OUTER WALL SECTION
(defrule
    (up-compare-goal gl-buildNorthEastGates == 1) 
=>    
    (up-modify-goal gl-outerWallGatePoint1-y c:+ 5)
    (up-modify-goal gl-outerWallGatePoint2-y c:- 5)
    (disable-self)
)
(defrule
    (up-compare-goal gl-buildSouthEastGates == 1) 
=>    
    (up-modify-goal gl-outerWallGatePoint2-x c:- 5)
    (up-modify-goal gl-outerWallGatePoint3-x c:+ 5)
    (disable-self)
)

(defrule
    (up-compare-goal gl-buildSouthWestGates == 1) 
=>    
    (up-modify-goal gl-outerWallGatePoint3-y c:- 5)
    (up-modify-goal gl-outerWallGatePoint4-y c:+ 5)
    (disable-self)
)

(defrule
    (up-compare-goal gl-buildNorthWestGates == 1)  
=>    
    (up-modify-goal gl-outerWallGatePoint1-x c:- 5)
    (up-modify-goal gl-outerWallGatePoint4-x c:+ 5)
    (disable-self)
)

; CHECK X COMPARED TO Y FOR CORNER POSITIONS
(defrule
    (true) ;put pos 5 later!
    (or 
        (or
            (up-compare-goal gl-positionQuadrantCode == 1)
            (up-compare-goal gl-positionQuadrantCode == 3)
        )
        (or
            (up-compare-goal gl-positionQuadrantCode == 7)
            (up-compare-goal gl-positionQuadrantCode == 9)
        )        
    )
    (up-compare-goal gl-myPosition-y g:< gl-myPosition-x)
=>    
    ;(chat-to-all "my x is higher than y")
    (disable-self)  
)

(defrule ;put pos 5 later!
    (true)
    (or
        (or
            (up-compare-goal gl-positionQuadrantCode == 1)
            (up-compare-goal gl-positionQuadrantCode == 3)
        )
        (or
            (up-compare-goal gl-positionQuadrantCode == 7)
            (up-compare-goal gl-positionQuadrantCode == 9)
        )        
    )
    (up-compare-goal gl-myPosition-y g:> gl-myPosition-x)
=>    
    ;(chat-to-all "my x is lower than y")
    (disable-self)
)

(defrule ;put pos 5 later!
    (true)
    (or
        (or
            (up-compare-goal gl-positionQuadrantCode == 1)
            (up-compare-goal gl-positionQuadrantCode == 3)
        )
        (or
            (up-compare-goal gl-positionQuadrantCode == 7)
            (up-compare-goal gl-positionQuadrantCode == 9)
        )        
    )
    (up-compare-goal gl-myPosition-y g:== gl-myPosition-x)
=>    
    ;(chat-to-all "my x is EQUAL TO y")
    (disable-self)
)

; BUILD THE OUTER PALISADE GATES - NOT CORNER POSITIONS ALWAYS GET THE SAME
; POS 3 AND 9 ALWAYS GET THE SAME ?
; ALONG Y AXIS = "DESCENDING" 796: FOUNDATIONS 793 CLOSED 794 OPEN
; ALONG X AXIS = "ASCENDING" 792: FOUNDATIONS, 789: CLOSED , 790: OPEN
; WITH UP CAN BUILD LINE THEY WONT BUILD THEM UNTIL THEY CAN BUILD THE WHOLE LINE
(defrule
    (up-compare-goal gl-dontBuildNorthEastWall == 0)
    (up-compare-goal gl-buildNorthEastGates == 1)  
    (up-can-build-line gl-outerWallGatePoint1-x gl-outerWallGatePoint2-x c: 796)
=>   
    (up-build-line gl-outerWallGatePoint1-x gl-outerWallGatePoint2-x c: 796)
    (chat-local-to-self "BUILDING NORTH EAST PALISADE GATES")    
)
(defrule
    (up-compare-goal gl-dontBuildNorthEastWall == 0)
    (up-compare-goal gl-buildNorthEastGates == 1)  
    (up-can-build-line gl-outerWallGatePoint2-x gl-outerWallGatePoint1-x c: 796)
=>   
    (up-build-line gl-outerWallGatePoint2-x gl-outerWallGatePoint1-x c: 796)
    (chat-local-to-self "BUILDING NORTH EAST PALISADE GATES BACKWARDS")    
)

(defrule 
    (up-compare-goal gl-dontBuildSouthEastWall == 0)
    (up-compare-goal gl-buildSouthEastGates == 1)
    (up-can-build-line gl-outerWallGatePoint2-x gl-outerWallGatePoint3-x c: 792)
=>
    (up-build-line gl-outerWallGatePoint2-x gl-outerWallGatePoint3-x c: 792)
    (chat-local-to-self "BUILDING SOUTH EAST PALISADE GATES")
)
(defrule 
    (up-compare-goal gl-dontBuildSouthEastWall == 0)
    (up-compare-goal gl-buildSouthEastGates == 1)
    (up-can-build-line gl-outerWallGatePoint3-x gl-outerWallGatePoint2-x c: 792)
=>
    (up-build-line gl-outerWallGatePoint3-x gl-outerWallGatePoint2-x c: 792)
    (chat-local-to-self "BUILDING SOUTH EAST PALISADE GATES BACKWARDS")
)

(defrule
    (up-compare-goal gl-dontBuildSouthWestWall == 0)
    (up-compare-goal gl-buildSouthWestGates == 1)
    (up-can-build-line gl-outerWallGatePoint3-x gl-outerWallGatePoint4-x c: 796)
=>
    (up-build-line gl-outerWallGatePoint3-x gl-outerWallGatePoint4-x c: 796)
    (chat-local-to-self "BUILDING SOUTH WEST PALISADE GATES")
)
(defrule
    (up-compare-goal gl-dontBuildSouthWestWall == 0)
    (up-compare-goal gl-buildSouthWestGates == 1)
    (up-can-build-line gl-outerWallGatePoint4-x gl-outerWallGatePoint3-x c: 796)
=>
    (up-build-line gl-outerWallGatePoint4-x gl-outerWallGatePoint3-x c: 796)
    (chat-local-to-self "BUILDING SOUTH WEST PALISADE GATES BACKWARDS")
)

(defrule
    (up-compare-goal gl-dontBuildNorthWestWall == 0)
    (up-compare-goal gl-buildNorthWestGates == 1)
    (up-can-build-line gl-outerWallGatePoint4-x gl-outerWallGatePoint1-x c: 792)    
=>
    (up-build-line gl-outerWallGatePoint4-x gl-outerWallGatePoint1-x c: 792)
    (chat-local-to-self "BUILDING NORTH WEST PALISADE GATES")
)
(defrule
    (up-compare-goal gl-dontBuildNorthWestWall == 0)
    (up-compare-goal gl-buildNorthWestGates == 1)
    (up-can-build-line gl-outerWallGatePoint1-x gl-outerWallGatePoint4-x c: 792)    
=>
    (up-build-line gl-outerWallGatePoint1-x gl-outerWallGatePoint4-x c: 792)
    (chat-local-to-self "BUILDING NORTH WEST PALISADE GATES BACKWARDS")
)

; CHECK IF WE ALREADY BUILT SOME PALISADE GATES BEFORE BUILDING THE PALISADE
; DESCENDING
(defrule
    (or   
        (or
            (building-type-count 793 > 0)(building-type-count 794 > 0)
        )
        (or
            (building-type-count 795 > 0)(building-type-count 796 > 0)
        )
    )
=>    
    (set-goal gl-weAlreadyGotPalisadeGates 1)
    ;(chat-local-to-self "PALISADE G. DESCENDING (Y AXIS) PARTS DETECTED!")    
)

; ASCENDING
(defrule
    (or
        (or
            (building-type-count 789 > 0)(building-type-count 790 > 0)
        )
        (or
            (building-type-count 791 > 0) (building-type-count 792 > 0)
        )
    )
=>    
    (set-goal gl-weAlreadyGotPalisadeGates 1)
    ;(chat-local-to-self "PALISADE G. ASCENDING (X AXIS) PARTS DETECTED!")    
)

; NO PALISADE GATE PARTS
(defrule
    (building-type-count 793 == 0)
    (building-type-count 794 == 0)
    (building-type-count 795 == 0)
    (building-type-count 796 == 0)
    (building-type-count 789 == 0)
    (building-type-count 790 == 0)
    (building-type-count 791 == 0)
    (building-type-count 792 == 0)
=>    
    (set-goal gl-weAlreadyGotPalisadeGates 0)
    ;(chat-local-to-self "NO PALISADE GATE PARTS DETECTED!")    
)

; BUILDING THE OUTER PALISADE WALL
(defrule
    (up-compare-goal gl-dontBuildNorthEastWall == 0)
    (up-compare-goal gl-weAlreadyGotPalisadeGates == 1)
    (unit-type-count-total villager > 5)
    (building-type-count-total barracks > 0)     
    (wood-amount > 200) 
=>    
    (up-build-line gl-wallPoint1-x gl-wallPoint2-x c: palisade-wall)
)
(defrule
    (up-compare-goal gl-dontBuildSouthEastWall == 0)
    (up-compare-goal gl-weAlreadyGotPalisadeGates == 1)   
    (unit-type-count-total villager > 5)
    (building-type-count-total barracks > 0)
    (wood-amount > 200)
=>
    (up-build-line gl-wallPoint2-x gl-wallPoint3-x c: palisade-wall)
)
(defrule
    (up-compare-goal gl-dontBuildSouthWestWall == 0)
    (up-compare-goal gl-weAlreadyGotPalisadeGates == 1) 
    (unit-type-count-total villager > 5)
    (building-type-count-total barracks > 0)
    (wood-amount > 200)
=>
    (up-build-line gl-wallPoint3-x gl-wallPoint4-x c: palisade-wall)
)
(defrule
    (up-compare-goal gl-dontBuildNorthWestWall == 0)
    (up-compare-goal gl-weAlreadyGotPalisadeGates == 1)    
    (unit-type-count-total villager > 5)
    (building-type-count-total barracks > 0)      
    (wood-amount > 200)     
=>
    (up-build-line gl-wallPoint4-x gl-wallPoint1-x c: palisade-wall)
)

; INNER STONE WALL SECTION
(defrule
    (true)
    (current-age >= castle-age)
    (or(game-time > 600)(cheats-enabled))
=>
    (set-goal gl-buildingInnerWall 1)
    
    (chat-local-to-self "TIME FOR INNER WALL")
    (disable-self)
)

; MAKE THE INNER WALL GATE SECTION SMALLER THAN INNER WALL SECTION
(defrule 
    (up-compare-goal gl-buildNorthEastGates == 1)
=>    
    (up-modify-goal gl-innerWallGatePoint1-y c:+ 6) 
    (up-modify-goal gl-innerWallGatePoint2-y c:- 6) 
    (disable-self)
)

(defrule
    (up-compare-goal gl-buildSouthWestGates == 1)
=>
    (up-modify-goal gl-innerWallGatePoint3-y c:- 6)
    (up-modify-goal gl-innerWallGatePoint4-y c:+ 6)  
    (disable-self)
)

(defrule
    (up-compare-goal gl-buildSouthEastGates == 1)
=>
    (up-modify-goal gl-innerWallGatePoint2-x c:- 6)
    (up-modify-goal gl-innerWallGatePoint3-x c:+ 6) 
    (disable-self)
)

(defrule
    (up-compare-goal gl-buildNorthWestGates == 1)
=>
    (up-modify-goal gl-innerWallGatePoint4-x c:+ 6)
    (up-modify-goal gl-innerWallGatePoint1-x c:- 6)
    (disable-self)
)

; CHECK IF WE ALREADY BUILT SOME STONE GATES BEFORE BUILDING THE WALL
;ASCENDING
; NORMAL
(defrule
(or
    (or
        (building-type-count 487 > 0)(building-type-count 64 > 0)
    )
    (or
        (building-type-count 78 > 0)(building-type-count 81 > 0)
    )
)    
=>    
    (set-goal gl-weAlreadyGotStoneGates 1)
    ;(chat-local-to-self "STONE GATE ASCENDING (X AXIS) PARTS DETECTED!")
)

; FORTIFIED
(defrule 
    (or
        (or
            (building-type-count 488 > 0)(building-type-count 63 > 0)
        )
        (or
            (building-type-count 67 > 0)(building-type-count 80 > 0)
        )
    )
=>    
    (set-goal gl-weAlreadyGotStoneGates 1)
    ;(chat-local-to-self "FORTIFIED GATE ASCENDING (X AXIS) PARTS DETECTED!")
)

;DESCENDING
; NORMAL
(defrule
(or
    (or
        (building-type-count 490 > 0)(building-type-count 88 > 0)
    )
    (or
        (building-type-count 91 > 0)(building-type-count 95 > 0)
    )
)    
=>    
    (set-goal gl-weAlreadyGotStoneGates 1)
    ;(chat-local-to-self "STONE GATE DESCENDING (Y AXIS) PARTS DETECTED!")
)

; FORTIFIED
(defrule 
    (or
        (or
            (building-type-count 491 > 0)(building-type-count 85 > 0)
        )
        (or
            (building-type-count 90 > 0)(building-type-count 92 > 0)
        )
    )
=>    
    (set-goal gl-weAlreadyGotStoneGates 1)
    ;(chat-local-to-self "FORTIFIED GATE DESCENDING (Y AXIS) PARTS DETECTED!")
)

; NO STONE GATE PARTS
(defrule 
        (building-type-count 487 == 0)
        (building-type-count 64 == 0)
        (building-type-count 78 == 0)
        (building-type-count 81 == 0)
        (building-type-count 488 == 0)
        (building-type-count 63 == 0)
        (building-type-count 67 == 0)
        (building-type-count 80 == 0)
        (building-type-count 490 == 0)
        (building-type-count 88 == 0)
        (building-type-count 91 == 0)
        (building-type-count 95 == 0)
        (building-type-count 491 == 0)
        (building-type-count 85 == 0)
        (building-type-count 90 == 0)
        (building-type-count 92 == 0)
        (building-type-count 487 == 0)
        (building-type-count 64 == 0)
        (building-type-count 78 == 0)
        (building-type-count 81 == 0)
        (building-type-count 488 == 0)
        (building-type-count 63 == 0)
        (building-type-count 67 == 0)
        (building-type-count 80 == 0)
=>    
    (set-goal gl-weAlreadyGotStoneGates 0)
    ;(chat-local-to-self "NO STONE GATE PARTS DETECTED!")
)

;----------------------------
; BUILDING THE INNER WALL GATES
(defrule
    (up-compare-goal gl-buildingInnerWall == 1)
    (up-compare-goal gl-dontBuildNorthEastWall == 0)
    (up-compare-goal gl-buildNorthEastGates == 1)
    (up-can-build-line gl-innerWallGatePoint1-x gl-innerWallGatePoint2-x c: 490)    
=>
    (up-build-line gl-innerWallGatePoint1-x gl-innerWallGatePoint2-x c: 490)
    ;(up-chat-data-to-self "inner wall gate north east start y: %d" g: gl-innerWallGatePoint1-y)
    ;(up-chat-data-to-self "inner wall gate north east end y: %d" g: gl-innerWallGatePoint2-y)
)
(defrule
    (up-compare-goal gl-buildingInnerWall == 1)
    (up-compare-goal gl-dontBuildNorthEastWall == 0)
    (up-compare-goal gl-buildNorthEastGates == 1)
    (up-can-build-line gl-innerWallGatePoint2-x gl-innerWallGatePoint1-x c: 490)    
=>
    (up-build-line gl-innerWallGatePoint2-x gl-innerWallGatePoint1-x c: 490)
    ;(up-chat-data-to-self "inner wall gate north east start y: %d" g: gl-innerWallGatePoint1-y)
    ;(up-chat-data-to-self "inner wall gate north east end y: %d" g: gl-innerWallGatePoint2-y)
)

(defrule
    (up-compare-goal gl-buildingInnerWall == 1)
    (up-compare-goal gl-dontBuildSouthWestWall == 0)
    (up-compare-goal gl-buildSouthWestGates == 1)
    (up-can-build-line gl-innerWallGatePoint3-x gl-innerWallGatePoint4-x c: 490)
=>
    (up-build-line gl-innerWallGatePoint3-x gl-innerWallGatePoint4-x c: 490)
    ;(up-chat-data-to-self "inner wall gate south west start y: %d" g: gl-innerWallGatePoint3-y)
    ;(up-chat-data-to-self "inner wall gate south west end y: %d" g: gl-innerWallGatePoint4-y)
)

(defrule
    (up-compare-goal gl-buildingInnerWall == 1)
    (up-compare-goal gl-dontBuildSouthEastWall == 0)
    (up-compare-goal gl-buildSouthEastGates == 1)
    (up-can-build-line gl-innerWallGatePoint2-x gl-innerWallGatePoint3-x c: 487)
=>
    (up-build-line gl-innerWallGatePoint2-x gl-innerWallGatePoint3-x c: 487)
    ;(up-chat-data-to-self "inner wall gate south east start y: %d" g: gl-innerWallGatePoint2-y)
    ;(up-chat-data-to-self "inner wall gate south east end y: %d" g: gl-innerWallGatePoint3-y)
)

(defrule
    (up-compare-goal gl-buildingInnerWall == 1)
    (up-compare-goal gl-dontBuildNorthWestWall == 0)
    (up-compare-goal gl-buildNorthWestGates == 1)
    (up-can-build-line gl-innerWallGatePoint4-x gl-innerWallGatePoint1-x c: 487)
=>
    (up-build-line gl-innerWallGatePoint4-x gl-innerWallGatePoint1-x c: 487)
    ;(up-chat-data-to-self "inner wall gate north west start y: %d" g: gl-innerWallGatePoint4-y)
    ;(up-chat-data-to-self "inner wall gate north west end y: %d" g: gl-innerWallGatePoint1-y)
)

; BUILDING THE INNER STONE WALL
(defrule
    (up-compare-goal gl-buildingInnerWall == 1)
    (up-compare-goal gl-dontBuildNorthEastWall == 0)
    (up-compare-goal gl-weAlreadyGotStoneGates == 1)     
=>
    (up-build-line gl-innerWallPoint1-x gl-innerWallPoint2-x c: stone-wall)
    ;(up-chat-data-to-self "inner wall north east start y: %d" g: gl-innerWallPoint1-y)
    ;(up-chat-data-to-self "inner wall north east end y: %d" g: gl-innerWallPoint2-y)
)

(defrule
    (up-compare-goal gl-buildingInnerWall == 1)
    (up-compare-goal gl-dontBuildSouthEastWall == 0)
    (up-compare-goal gl-weAlreadyGotStoneGates == 1)     
=>
    (up-build-line gl-innerWallPoint2-x gl-innerWallPoint3-x c: stone-wall)
    ;(up-chat-data-to-self "inner wall south east start y: %d" g: gl-innerWallPoint2-y)
    ;(up-chat-data-to-self "inner wall south east end y: %d" g: gl-innerWallPoint3-y)
)

(defrule
    (up-compare-goal gl-buildingInnerWall == 1)
    (up-compare-goal gl-dontBuildSouthWestWall == 0)
    (up-compare-goal gl-weAlreadyGotStoneGates == 1)     
=>
    (up-build-line gl-innerWallPoint3-x gl-innerWallPoint4-x c: stone-wall)
    ;(up-chat-data-to-self "inner wall south west start y: %d" g: gl-innerWallPoint3-y)
    ;(up-chat-data-to-self "inner wall south west end y: %d" g: gl-innerWallPoint4-y)
)

(defrule
    (up-compare-goal gl-buildingInnerWall == 1)
    (up-compare-goal gl-dontBuildNorthWestWall == 0)
    (up-compare-goal gl-weAlreadyGotStoneGates == 1)     
=>
    (up-build-line gl-innerWallPoint4-x gl-innerWallPoint1-x c: stone-wall)
    ;(up-chat-data-to-self "inner wall north west start y: %d" g: gl-innerWallPoint3-y)
    ;(up-chat-data-to-self "inner wall north west end y: %d" g: gl-innerWallPoint4-y)
)