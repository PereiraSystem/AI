; TESTING -------------------------------------------------------
(defrule(true)=>(chat-local-to-self "> 9. Testing Loaded")(disable-self))

; GUARD
(defrule
    (unit-type-count monk > 0)
=>	
    (up-full-reset-search)	
    (up-find-local c: spearman-line c: 1)
	;(up-find-local c: all-units-class c: 240)	
	;(up-remove-objects search-local object-data-hitpoints < 50)
    (up-guard-unit monk c: spearman-line)
)


; REMOVE CHEAP UNITS
(defrule
	(current-age == imperial-age)
    (population-headroom == 0)
    (housing-headroom == 0)
    (wood-amount > 1000)(food-amount > 1000)(gold-amount > 1000)
    (game-time > 2100); 35 min
    (unit-type-count skirmisher-line > 0)
    (can-train hand-cannoneer)    
=>
	(delete-unit skirmisher-line)
    (train hand-cannoneer)
    (chat-local-to-self "'CHANGING' SKIRMISHERS FOR HAND CANNONEERS")
)

(defrule
	(current-age == imperial-age)
    (population-headroom == 0)
    (housing-headroom == 0)
    (wood-amount > 1300)(food-amount > 1300)(gold-amount > 1300)
    (game-time > 2100); 35 min
    (not(civ-selected gothic))(not(civ-selected japanese))    
    (unit-type-count spearman-line > 0)
    (can-train knight-line)    
=>
	(delete-unit spearman)(delete-unit pikeman)(delete-unit halberdier)
    (train knight-line)
    (chat-local-to-self "'CHANGING' SPEARMEN FOR KNIGHTS")
)

(defrule
	(not	(player-in-game any-ally))
	(unit-type-count trade-cart > 0)
=>
	(delete-unit trade-cart)
)

; USER PATCH WALL
(defconst gl-positionXisHigh 470) 
(defconst gl-positionXisMedium 471)
(defconst gl-positionXisLow 472)
(defconst gl-positionYisHigh 473) 
(defconst gl-positionYisMedium 474)
(defconst gl-positionYisLow 475)
(defconst gl-myPosition-x 476)
(defconst gl-myPosition-y 477)
(defconst gl-point-y 477)
(defconst gl-other-x 478)
(defconst gl-other-y 479)
(defconst gl-point-x 480) 
(defconst gl-point-y 481)
(defconst gl-other-x 482)
(defconst gl-other-y 483)
(defconst gl-wall-start-x 484)
(defconst gl-wall-start-y 485)
(defconst gl-wall-end-x 486)
(defconst gl-wall-end-y 487) 
(defconst gl-wall-other-end-x 488) 
(defconst gl-wall-other-end-y 489)
(defconst gl-center-x 490)
(defconst gl-center-y 491)

(defrule
    (true) ;just in case
=>
    (set-goal gl-positionXisHigh 0) 
    (set-goal gl-positionXisMedium 0)
    (set-goal gl-positionXisLow 0)
    (set-goal gl-positionYisHigh 0) 
    (set-goal gl-positionYisMedium 0)
    (set-goal gl-positionYisLow 0)
    (set-goal gl-myPosition-x 0)
    (set-goal gl-myPosition-y 0)
    (set-goal gl-other-x 0)    
    (set-goal gl-other-y 0)
    (set-goal gl-wall-start-x 0)
    (set-goal gl-wall-start-y 0)
    (set-goal gl-wall-end-x 0)
    (set-goal gl-wall-end-y 0)
    (set-goal gl-wall-other-end-x 0) 
    (set-goal gl-wall-other-end-y 0)      
    (disable-self)  
)

(defrule
    (true)
=>
    (up-get-point position-self gl-myPosition-x)
    (disable-self)   
)



; CHECK OUR POSITION - BASIC POINTS
; HIGH
(defrule
    (up-compare-goal gl-myPosition-x > 80)
=>
    (set-goal gl-positionXisHigh 1)(disable-self)  
)
(defrule
    (up-compare-goal gl-myPosition-y > 80)
=>
    (set-goal gl-positionYisHigh 1)(disable-self)  
)
; MID
(defrule
    (up-compare-goal gl-myPosition-x < 80)
    (up-compare-goal gl-myPosition-x > 40)
=>
    (set-goal gl-positionXisMedium 1)(disable-self)  
)
(defrule
    (up-compare-goal gl-myPosition-y < 80)
    (up-compare-goal gl-myPosition-y > 40)
=>
    (set-goal gl-positionYisMedium 1)(disable-self)  
)

; BOTTOM
(defrule
    (up-compare-goal gl-myPosition-x < 40)
=>
    (set-goal gl-positionXisLow 1)(disable-self)  
)
(defrule
    (up-compare-goal gl-myPosition-y < 40)
=>
    (set-goal gl-positionYisLow 1)(disable-self)  
)

; WE GOT THE POSITIONS
(defrule
    (false)
=>  
    (up-chat-data-to-self "MY POS X = %d" g: gl-myPosition-x)
    (up-chat-data-to-self "MY POS Y = %d" g: gl-myPosition-y)    
)

; TOP X
(defrule
    (up-compare-goal gl-positionXisHigh == 1)
    (up-compare-goal gl-positionYisHigh == 1)
=>  
    (chat-to-allies "IM AT THE RIGHT CORNER OF THE MAP")
    (disable-self)
)

(defrule
    (up-compare-goal gl-positionXisHigh == 1)
    (up-compare-goal gl-positionYisMedium == 1)
=>  
    (chat-to-allies "IM AT MIDDLE OF Y AXIS CLOSE TO THE X BORDER")
    (disable-self)  
)

(defrule
    (up-compare-goal gl-positionXisHigh == 1)
    (up-compare-goal gl-positionYisLow == 1)
=>  
    (chat-to-allies "IM AT CORNER HIGH X LOW Y - TOP OF MINIMAP")
    (disable-self)  
)

; CENTER X
(defrule
    (up-compare-goal gl-positionXisMedium == 1)
    (up-compare-goal gl-positionYisHigh == 1)
=>  
    (chat-to-allies "IM AT MIDDLE OF X AXIS CLOSE TO HIGH Y BORDER")
    (disable-self)
)

(defrule
    (up-compare-goal gl-positionXisMedium == 1)
    (up-compare-goal gl-positionYisMedium == 1)
=>  
    (chat-to-allies "IM IN THE MIDDLE OF THE MAP")
    (disable-self)
)

(defrule
    (up-compare-goal gl-positionXisMedium == 1)
    (up-compare-goal gl-positionYisLow == 1)
=>  
    (chat-to-allies "IM AT MIDDLE OF X AXIS CLOSE TO LOW Y BORDER - TOP LEFT OF MAP?")
    (disable-self)
)

; BOTTOM X
(defrule
    (up-compare-goal gl-positionXisLow == 1)
    (up-compare-goal  gl-positionYisHigh == 1)
=>  
    (chat-to-allies "IM AT CORNER LOW X HIGH Y - BOTTOM OF MINIMAP")
    (disable-self)
)

(defrule
    (up-compare-goal gl-positionXisLow == 1)
    (up-compare-goal gl-positionYisMedium == 1)
=>  
    (chat-to-allies "IM AT THE SOUTH WEST!")(disable-self)  
)  

(defrule
    (up-compare-goal gl-positionXisLow == 1)
    (up-compare-goal gl-positionYisLow == 1)
=>  
    (chat-to-allies "IM AT CORNER LOW X LOQ Y - LEFT CORNER OF MINIMAP") (disable-self)  
) 

; PREPARING WALL POINTS ACCORDING TO THE POSITIONS WE GOT BEFORE
; high x
(defrule
    (up-compare-goal gl-positionXisHigh == 1) ; right corner
    (up-compare-goal gl-positionYisHigh == 1)
=>
    (set-goal gl-wall-start-x 70)
    (set-goal gl-wall-start-y 70)
    (set-goal gl-wall-end-x 120)
    (set-goal gl-wall-end-y 70)
    (set-goal gl-wall-other-end-x 70)
    (set-goal gl-wall-other-end-y 120)    
    (disable-self)    
)

(defrule
    (up-compare-goal gl-positionXisHigh == 1) 
    (up-compare-goal gl-positionYisMedium == 1)
=>
    (set-goal gl-wall-start-x 70)
    (set-goal gl-wall-start-y 70)
    (set-goal gl-wall-end-x 70)
    (set-goal gl-wall-end-y 70)
    (set-goal gl-wall-other-end-x 120)
    (set-goal gl-wall-other-end-y 70)    
    (disable-self)    
)

(defrule
    (up-compare-goal gl-positionXisHigh == 1) 
    (up-compare-goal gl-positionYisLow == 1)
=>
    (set-goal gl-wall-start-x 70)
    (set-goal gl-wall-start-y 50)
    (set-goal gl-wall-end-x 120)
    (set-goal gl-wall-end-y 50)
    (set-goal gl-wall-other-end-x 70)
    (set-goal gl-wall-other-end-y 0)    
    (disable-self)    
)
;medium x
(defrule
    (up-compare-goal gl-positionXisMedium == 1) ; right corner
    (up-compare-goal gl-positionYisHigh == 1)
=>
    (set-goal gl-wall-start-x 70)
    (set-goal gl-wall-start-y 70)
    (set-goal gl-wall-end-x 120)
    (set-goal gl-wall-end-y 70)
    (set-goal gl-wall-other-end-x 70)
    (set-goal gl-wall-other-end-y 120)    
    (disable-self)    
)

(defrule
    (up-compare-goal gl-positionXisMedium == 1) 
    (up-compare-goal gl-positionYisMedium == 1)
    (can-build-wall 2 palisade-wall)
=>
    (build-wall 2 palisade-wall)
    (disable-self)    
)

(defrule
    (up-compare-goal gl-positionXisMedium == 1) 
    (up-compare-goal gl-positionYisLow == 1)
=>
    (set-goal gl-wall-start-x 70)
    (set-goal gl-wall-start-y 70)
    (set-goal gl-wall-end-x 70)
    (set-goal gl-wall-end-y 70)
    (set-goal gl-wall-other-end-x 70)
    (set-goal gl-wall-other-end-y 0)    
    (disable-self)    
)
; low x
(defrule
    (up-compare-goal gl-positionXisLow == 1) ; left corner
    (up-compare-goal gl-positionYisLow == 1)
=>
    (set-goal gl-wall-start-x 50)
    (set-goal gl-wall-start-y 50)
    (set-goal gl-wall-end-x 0)
    (set-goal gl-wall-end-y 50)
    (set-goal gl-wall-other-end-x 50)
    (set-goal gl-wall-other-end-y 0)    
    (disable-self)    
)

(defrule
    (up-compare-goal gl-positionXisLow == 1) ; left corner
    (up-compare-goal gl-positionYisMedium == 1)
=>
    (set-goal gl-wall-start-x 70)
    (set-goal gl-wall-start-y 70)
    (set-goal gl-wall-end-x 70)
    (set-goal gl-wall-end-y 70)
    (set-goal gl-wall-other-end-x 70)
    (set-goal gl-wall-other-end-y 0)    
    (disable-self)    
)

(defrule
    (building-type-count-total 789 == 0)
    (building-type-count-total palisade-wall == 0)
=>
    (up-build-line gl-wall-start-x gl-wall-end-x c: 789)
    (chat-local-to-self "BUILDING THE WALL GATES !")
)

(defrule
    (true)
    ;(up-can-build-line 0 gl-wall-start-x c: palisade-wall)
=>
    (up-build-line gl-wall-start-x gl-wall-end-x c: palisade-wall)
    (chat-local-to-self "BUILDING THE WALL SECTION A !")
)

(defrule
    (building-type-count palisade-wall > 24)
    ;(up-can-build-line 0 gl-wall-start-x c: palisade-wall)
=>
    (disable-timer 35)
    (up-build-line gl-wall-start-x gl-wall-other-end-x c: palisade-wall)
    (chat-local-to-self "BUILDING THE WALL SECTION B !")

)

(defrule
    (building-type-count-total 793 < 3)
    ;(up-can-build-line gl-point-y gl-other-y c: 793)
=>
    ;(up-build-line gl-point-y gl-other-y c: palisade-gate)
    ;(up-build-line gl-point-y gl-other-y c: 798)    ;diagonal left-right
    ;(up-build-line gl-point-y gl-other-y c: 801)    ;diagonal north-south   
    ;(up-build-line gl-point-y gl-other-y c: 789)    ;along y axis
    ;(up-build-line gl-point-y gl-other-y c: 793)    ;along x axis
    ;(chat-to-player my-player-number "BUILDING THE GATES TO THE WALL FRONT")
    (do-nothing)
)