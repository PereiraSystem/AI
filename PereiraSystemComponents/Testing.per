; TESTING -------------------------------------------------------
(defrule(true)=>(chat-local-to-self "> 9. Testing Loaded")(disable-self))

; GUARD
(defrule
    (unit-type-count monk > 0)
=>	
    (up-full-reset-search)	
    (up-find-local c: spearman-line c: 1)
	;(up-find-local c: all-units-class c: 240)	
	;(up-remove-objects search-local object-data-hitpoints < 50)
    (up-guard-unit monk c: spearman-line)
)


; REMOVE CHEAP UNITS
(defrule
	(current-age == imperial-age)
    (population-headroom == 0)
    (housing-headroom == 0)
    (wood-amount > 1000)(food-amount > 1000)(gold-amount > 1000)
    (game-time > 2100); 35 min
    (unit-type-count skirmisher-line > 0)
    (can-train hand-cannoneer)    
=>
	(delete-unit skirmisher-line)
    (train hand-cannoneer)
    (chat-local-to-self "'CHANGING' SKIRMISHERS FOR HAND CANNONEERS")
)

(defrule
	(current-age == imperial-age)
    (population-headroom == 0)
    (housing-headroom == 0)
    (wood-amount > 1300)(food-amount > 1300)(gold-amount > 1300)
    (game-time > 2100); 35 min
    (not(civ-selected gothic))(not(civ-selected japanese))    
    (unit-type-count spearman-line > 0)
    (can-train knight-line)    
=>
	(delete-unit spearman)(delete-unit pikeman)(delete-unit halberdier)
    (train knight-line)
    (chat-local-to-self "'CHANGING' SPEARMEN FOR KNIGHTS")
)

(defrule
	(not	(player-in-game any-ally))
	(unit-type-count trade-cart > 0)
=>
	(delete-unit trade-cart)
)


; USER PATCH WALL
(defconst gl-positionXisHigh 470) 
(defconst gl-positionXisMedium 471)
(defconst gl-positionXisLow 472)
(defconst gl-positionYisHigh 473) 
(defconst gl-positionYisMedium 474)
(defconst gl-positionYisLow 475)
(defconst gl-myPosition-x 476)
(defconst gl-myPosition-y 477)

(defconst gl-posMapSize-x 478)
(defconst gl-posMapSize-y 479)

(defconst gl-positionQuadrantCode 480)

(defconst gl-mapSizeThird 481)
(defconst gl-mapSizeTwoThirds 482)

(defconst gl-buildingInnerWall 483)
(defconst gl-myWallModifier 484)
(defconst gl-myInnerWallModifier 485)

(defconst gl-innerWallPoint1-x 491)
(defconst gl-innerWallPoint1-y 492)
(defconst gl-innerWallPoint2-x 493)
(defconst gl-innerWallPoint2-y 494)
(defconst gl-innerWallPoint3-x 495)
(defconst gl-innerWallPoint3-y 496)
(defconst gl-innerWallPoint4-x 497)
(defconst gl-innerWallPoint4-y 498)
(defconst gl-wallPoint1-x 501)
(defconst gl-wallPoint1-y 502)
(defconst gl-wallPoint2-x 503)
(defconst gl-wallPoint2-y 504)
(defconst gl-wallPoint3-x 505)
(defconst gl-wallPoint3-y 506)
(defconst gl-wallPoint4-x 507)
(defconst gl-wallPoint4-y 508)



(defrule
    (true) 
=>
    (set-goal gl-positionXisHigh 0) 
    (set-goal gl-positionXisMedium 0)
    (set-goal gl-positionXisLow 0)
    (set-goal gl-positionYisHigh 0) 
    (set-goal gl-positionYisMedium 0)
    (set-goal gl-positionYisLow 0)
    (set-goal gl-myPosition-x 0)
    (set-goal gl-myPosition-y 0)

    (set-goal gl-posMapSize-x 0)
    (set-goal gl-posMapSize-y 0)

    (set-goal gl-positionQuadrantCode 0)

    (set-goal gl-mapSizeThird 0)
    (set-goal gl-mapSizeTwoThirds 0)

    (set-goal gl-buildingInnerWall 0)
    (set-goal gl-myWallModifier 0)

    (set-goal gl-wallPoint1-x 0)
    (set-goal gl-wallPoint1-y 0)
    (set-goal gl-wallPoint2-x 0)
    (set-goal gl-wallPoint2-y 0)
    (set-goal gl-wallPoint3-x 0)
    (set-goal gl-wallPoint3-y 0)
    (set-goal gl-wallPoint4-x 0)
    (set-goal gl-wallPoint4-y 0)
    (disable-self)  
)

(defrule
    (true)
=>
    (up-get-point position-self gl-myPosition-x)
    (up-get-point position-self gl-myPosition-x)
    (up-get-point position-map-size gl-mapSizeThird)
    (up-get-point position-map-size gl-mapSizeTwoThirds)
    (up-get-point position-map-size gl-posMapSize-x)          
    (up-modify-goal gl-mapSizeThird c:/ 3)
    (up-modify-goal gl-mapSizeTwoThirds c:/ 3)
    (up-modify-goal gl-mapSizeTwoThirds c:* 2)

    (up-get-point position-map-size gl-myWallModifier)
    (up-modify-goal gl-myWallModifier c:/ 10)
    (up-chat-data-to-self "Map Size: %d" g: gl-posMapSize-x)  
    ;(up-chat-data-to-self "Map Size 1/3 %d" g: gl-mapSizeThird)
    ;(up-chat-data-to-self "Map Size 2/3 %d" g: gl-mapSizeTwoThirds)
    (up-chat-data-to-self "My wall modifier: %d" g: gl-myWallModifier)      
    (up-chat-data-to-self "My inner wall modifier: %d" g: gl-myInnerWallModifier) 
    (set-goal gl-myInnerWallModifier g: gl-myWallModifier)
    (up-modify-goal gl-myInnerWallModifier c:- 3)
    (up-chat-data-to-self "My inner wall modifier: %d" g: gl-myInnerWallModifier)     
    (disable-self)   
)

(defrule
    (up-compare-goal gl-myWallModifier < 13)
=>
    (set-goal gl-myWallModifier 13)
    (up-chat-data-to-self "My wall modifier corrected: %d" g: gl-myWallModifier)
    (disable-self)      
)

; CHECK OUR POSITION IN 9 SQUARES
(defrule
    (up-compare-goal gl-myPosition-x g:>= gl-mapSizeTwoThirds)
=>
    (set-goal gl-positionXisHigh 1)
    (disable-self)  
)
(defrule
    (up-compare-goal gl-myPosition-y g:>= gl-mapSizeTwoThirds)
=>
    (set-goal gl-positionYisHigh 1)(disable-self)  
)
(defrule
    (up-compare-goal gl-myPosition-x g:< gl-mapSizeTwoThirds)
    (up-compare-goal gl-myPosition-x g:> gl-mapSizeThird)
=>
    (set-goal gl-positionXisMedium 1)(disable-self)  
)
(defrule
    (up-compare-goal gl-myPosition-y g:< gl-mapSizeTwoThirds)
    (up-compare-goal gl-myPosition-y g:> gl-mapSizeThird)
=>
    (set-goal gl-positionYisMedium 1)(disable-self)  
)
(defrule
    (up-compare-goal gl-myPosition-x g:<= gl-mapSizeThird)
=>
    (set-goal gl-positionXisLow 1)(disable-self)  
)
(defrule
    (up-compare-goal gl-myPosition-y g:<= gl-mapSizeThird)
=>
    (set-goal gl-positionYisLow 1)(disable-self)  
)

; SAY 1 OF 9 POSITIONS TO ALLIES AND STORE POSITION IN A CODE WHILE WE ARE AT IT
(defrule
    (up-compare-goal gl-positionXisHigh == 1)(up-compare-goal gl-positionYisHigh == 1)
=>    
    (chat-to-allies "IM AT THE EAST, IN THE CORNER!")
    (set-goal gl-positionQuadrantCode 1)    
    (up-send-flare position-self)(disable-self)
)
(defrule
    (up-compare-goal gl-positionXisHigh == 1)(up-compare-goal gl-positionYisMedium == 1)
=>  
    (chat-to-allies "IM AT THE NORTH EAST!")
    (set-goal gl-positionQuadrantCode 2) 
    (up-send-flare position-self)(disable-self)  
)
(defrule
    (up-compare-goal gl-positionXisHigh == 1)(up-compare-goal gl-positionYisLow == 1)
=>  
    (chat-to-allies "IM AT AT THE NORTH, IN THE CORNER!")
    (set-goal gl-positionQuadrantCode 3)     
    (up-send-flare position-self)(disable-self)  
)
(defrule
    (up-compare-goal gl-positionXisMedium == 1)(up-compare-goal gl-positionYisHigh == 1)
=>  
    (chat-to-allies "IM AT THE SOUTH EAST!")
    (set-goal gl-positionQuadrantCode 4)     
    (up-send-flare position-self)(disable-self)
)
(defrule
    (up-compare-goal gl-positionXisMedium == 1)(up-compare-goal gl-positionYisMedium == 1)
=>  
    (chat-to-allies "IM IN THE MIDDLE OF THE MAP")
    (set-goal gl-positionQuadrantCode 5)     
    (up-send-flare position-self)(disable-self)
)
(defrule
    (up-compare-goal gl-positionXisMedium == 1)(up-compare-goal gl-positionYisLow == 1)
=>  
    (chat-to-allies "IM AT THE NORTH WEST!")
    (set-goal gl-positionQuadrantCode 6)
    (up-send-flare position-self)(disable-self)
)
(defrule
    (up-compare-goal gl-positionXisLow == 1)(up-compare-goal gl-positionYisHigh == 1)
=> 
    (chat-to-allies "IM AT THE SOUTH, IN THE CORNER!")
    (set-goal gl-positionQuadrantCode 7)
    (up-send-flare position-self)(disable-self)
) 
(defrule
    (up-compare-goal gl-positionXisLow == 1)(up-compare-goal gl-positionYisMedium == 1)
=>
    (chat-to-allies "IM AT THE SOUTH WEST!")
    (set-goal gl-positionQuadrantCode 8)    
    (up-send-flare position-self)(disable-self)  
)    
(defrule
    (up-compare-goal gl-positionXisLow == 1)(up-compare-goal gl-positionYisLow == 1)
=>     
    (chat-to-allies "IM AT THE WEST, IN THE CORNER!")
    (set-goal gl-positionQuadrantCode 9)
    (up-send-flare position-self)(disable-self)  
)

(defrule
    (true)
=>    
    (up-get-point position-self gl-wallPoint1-x)
    (up-get-point position-self gl-wallPoint2-x)
    (up-get-point position-self gl-wallPoint3-x)
    (up-get-point position-self gl-wallPoint4-x)

    (up-modify-goal gl-wallPoint1-x g:+ gl-myWallModifier) ; 1 north
    (up-modify-goal gl-wallPoint1-y g:- gl-myWallModifier) 

    (up-modify-goal gl-wallPoint2-x g:+ gl-myWallModifier) ; 2 east
    (up-modify-goal gl-wallPoint2-y g:+ gl-myWallModifier) 

    (up-modify-goal gl-wallPoint3-x g:- gl-myWallModifier) ; 3 south
    (up-modify-goal gl-wallPoint3-y g:+ gl-myWallModifier) 

    (up-modify-goal gl-wallPoint4-x g:- gl-myWallModifier) ; 4 west
    (up-modify-goal gl-wallPoint4-y g:- gl-myWallModifier)  
    (disable-self)           
)

; GATES Y AXIS
(defrule
    (true)
    ;(wood-amount g:> gl-minimumWoodForLC)     
    (building-type-count-total 793 < 3)
    ;(building-type-count-total palisade-wall == 0)
=>
    (up-build-line gl-wallPoint1-x gl-wallPoint2-x c: 793)
    (chat-local-to-self "BUILDING THE NORTH EAST PALISADE GATES!")
)

(defrule
    (true)
    ;(wood-amount g:> gl-minimumWoodForLC)     
    (building-type-count-total 789 < 3)
    ;(building-type-count-total palisade-wall == 0)
=>
    (up-build-line gl-wallPoint2-x gl-wallPoint3-x c: 789)
    (chat-local-to-self "BUILDING THE SOUTH EAST PALISADE GATES!")
)

(defrule
    (true)
    ;(wood-amount g:> gl-minimumWoodForLC)     
    (building-type-count-total 793 < 4)
    ;(building-type-count-total palisade-wall == 0)
=>
    (up-build-line gl-wallPoint3-x gl-wallPoint4-x c: 793)
    (chat-local-to-self "BUILDING THE SOUTH WEST PALISADE GATES!")
)

(defrule
    (true)
    ;(wood-amount g:> gl-minimumWoodForLC)     
    (building-type-count-total 789 < 4)
    ;(building-type-count-total palisade-wall == 0)
=>
    (up-build-line gl-wallPoint2-x gl-wallPoint3-x c: 789)
    (chat-local-to-self "BUILDING THE NORTH WEST PALISADE GATES!")
)

; FINISHED GATES, NOW THE PALISADE
(defrule ;along Y axis, right side
    (true)
    ;    (up-compare-goal gl-buildingInnerWall == 0)
    ;(unit-type-count-total villager > 5)
    ;(building-type-count-total barracks > 0)     
    ;(wood-amount > 200) 
=>    
    (up-build-line gl-wallPoint1-x gl-wallPoint2-x c: palisade-wall)
)

(defrule
    (true)
    ;(up-compare-goal gl-buildingInnerWall == 0)
    ;(unit-type-count-total villager > 6)
    ;(building-type-count-total barracks > 0)     
    ;(building-type-count palisade-wall > 4)
    ;(wood-amount > 200)   
=>
    (up-build-line gl-wallPoint2-x gl-wallPoint3-x c: palisade-wall)
)

(defrule
    (true)
    ;(up-compare-goal gl-buildingInnerWall == 0)
    ;(unit-type-count-total villager > 7)
    ;(building-type-count-total barracks > 0)      
    ;(wood-amount > 200)    
=>
    (up-build-line gl-wallPoint3-x gl-wallPoint4-x c: palisade-wall)
)

(defrule    (true)
    ;(up-compare-goal gl-buildingInnerWall == 0)
    ;(unit-type-count-total villager > 7)
    ;(building-type-count-total barracks > 0)      
    ;(wood-amount > 200)    
    ;(building-type-count palisade-wall > 8)  
=>
    (up-build-line gl-wallPoint4-x gl-wallPoint1-x c: palisade-wall)
)

(defrule
    (current-age >= castle-age)
    (or(game-time > 600)(cheats-enabled))
=>
    (set-goal gl-buildingInnerWall 1)
    
    (chat-to-all "TIME FOR INNER WALL")
    (disable-self)
)

(defrule
    (true) ; inner wall
=>    
    (up-get-point position-self gl-innerWallPoint1-x)
    (up-get-point position-self gl-innerWallPoint2-x)
    (up-get-point position-self gl-innerWallPoint3-x)
    (up-get-point position-self gl-innerWallPoint4-x)
    (up-modify-goal gl-innerWallPoint1-x g:+ gl-myInnerWallModifier) ; 1 north
    (up-modify-goal gl-innerWallPoint1-y g:- gl-myInnerWallModifier) 

    (up-modify-goal gl-innerWallPoint2-x g:+ gl-myInnerWallModifier) ; 2 east
    (up-modify-goal gl-innerWallPoint2-y g:+ gl-myInnerWallModifier) 

    (up-modify-goal gl-innerWallPoint3-x g:- gl-myInnerWallModifier) ; 3 south
    (up-modify-goal gl-innerWallPoint3-y g:+ gl-myInnerWallModifier) 

    (up-modify-goal gl-innerWallPoint4-x g:- gl-myInnerWallModifier) ; 4 west
    (up-modify-goal gl-innerWallPoint4-y g:- gl-myInnerWallModifier)  
    (disable-self)           
)

(defrule
    (up-compare-goal gl-buildingInnerWall == 1)
    (building-type-count-total 64 < 7)
=>
    (up-build-line gl-wallPoint1-x gl-wallPoint2-x c: 64)
    (chat-local-to-self "BUILDING THE WALL GATES!")
)

(defrule
    (up-compare-goal gl-buildingInnerWall == 1)
    (building-type-count-total 64 < 7)
=>
    (up-build-line gl-wallPoint2-x gl-wallPoint3-x c: 64)
    (chat-local-to-self "BUILDING THE WALL GATES!")
)

(defrule
    (up-compare-goal gl-buildingInnerWall == 1)
    (building-type-count-total 64 < 7)
=>
    (up-build-line gl-wallPoint3-x gl-wallPoint4-x c: 64)
    (chat-local-to-self "BUILDING THE WALL GATES!")
)

(defrule
    (up-compare-goal gl-buildingInnerWall == 1)
    (building-type-count-total 64 < 7)
=>
    (up-build-line gl-wallPoint4-x gl-wallPoint1-x c: 64)
    (chat-local-to-self "BUILDING THE WALL GATES!")
)

(defrule
    (up-compare-goal gl-buildingInnerWall == 1)
    (building-type-count-total 88 < 7)
=>
    (up-build-line gl-wallPoint1-x gl-wallPoint2-x c: 88)
    (chat-local-to-self "BUILDING THE WALL GATES!")
)

(defrule
    (up-compare-goal gl-buildingInnerWall == 1)
    (building-type-count-total 88 < 7)
=>
    (up-build-line gl-wallPoint2-x gl-wallPoint3-x c: 88)
    (chat-local-to-self "BUILDING THE WALL GATES!")
)

(defrule
    (up-compare-goal gl-buildingInnerWall == 1)
    (building-type-count-total 88 < 7)
=>
    (up-build-line gl-wallPoint3-x gl-wallPoint4-x c: 88)
    (chat-local-to-self "BUILDING THE WALL GATES!")
)

(defrule
    (up-compare-goal gl-buildingInnerWall == 1)
    (building-type-count-total 88 < 7)
=>
    (up-build-line gl-wallPoint4-x gl-wallPoint1-x c: 88)
    (chat-local-to-self "BUILDING THE WALL GATES!")
)

; INNER STONE WALL
(defrule 
    (not
        (up-compare-goal gl-positionQuadrantCode == 2) ;north east
    )
    (up-compare-goal gl-buildingInnerWall == 1)
=>    
    (up-build-line gl-innerWallPoint1-x gl-innerWallPoint2-x c: stone-wall)
)

(defrule
    (not
        (up-compare-goal gl-positionQuadrantCode == 1) ;east corner
    )
    (up-compare-goal gl-buildingInnerWall == 1)
=>
    (up-build-line gl-innerWallPoint2-x gl-innerWallPoint3-x c: stone-wall)
)

(defrule
    (up-compare-goal gl-buildingInnerWall == 1)
    (not
        (up-compare-goal gl-positionQuadrantCode == 9) ;west
    )    
=>
    (up-build-line gl-innerWallPoint3-x gl-innerWallPoint4-x c: stone-wall)
)

(defrule
    (not
        (up-compare-goal gl-positionQuadrantCode == 3) ;north corner
    )
    (up-compare-goal gl-buildingInnerWall == 1)
=>
    (up-build-line gl-innerWallPoint4-x gl-innerWallPoint1-x c: stone-wall)
)

; some outposts
(defrule
    (building-type-count-total palisade-wall > 30)
    (wood-amount g:> gl-minimumWoodForLC)
    (building-type-count-total outpost < 5)    
    (up-can-build 0 c: outpost)
=>
    (up-set-placement-data my-player-number town-center c: 12)
    (up-build place-control 0 c: outpost)
)

(defrule(false)
    (building-type-count 793 > 4)(game-time > 50)
=>
    (delete-building 793)
    (chat-local-to-self "TOO MANY GATES! DESTROY THAT!")
)

(defrule(false)
    (building-type-count 789 > 4)
    (game-time > 50)
=>
    (delete-building 789)
    (chat-local-to-self "TOO MANY GATES! DESTROY THAT!")    
)

(defrule
    (building-type-count-total 793 > 0)
    (wood-amount g:> gl-minimumWoodForLC)
    (building-type-count-total watch-tower-line < 4)       
    (up-can-build 0 c: watch-tower-line)
=>
    (up-set-placement-data my-player-number 793 c: -3)
    (up-build place-control 0 c: watch-tower-line)
)

(defrule
    ;(building-type-count-total 789 > 0)
    (building-type-count-total palisade-wall > 0)
    (wood-amount g:> gl-minimumWoodForLC) 
    (building-type-count-total watch-tower-line < 4)      
    (up-can-build 0 c: watch-tower-line)
=>
    ;(up-set-placement-data my-player-number 789 c: -3)
    (up-set-placement-data my-player-number palisade-wall c: -3)
    (up-build place-control 0 c: watch-tower-line)
)

