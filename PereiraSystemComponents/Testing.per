; TESTING -------------------------------------------------------
(defrule(true)=>(chat-local-to-self "> 9. Testing Loaded")(disable-self))

; GUARD
(defrule
    (unit-type-count monk > 0)
=>	
    (up-full-reset-search)	
    (up-find-local c: spearman-line c: 1)
	;(up-find-local c: all-units-class c: 240)	
	;(up-remove-objects search-local object-data-hitpoints < 50)
    (up-guard-unit monk c: spearman-line)
)


; REMOVE CHEAP UNITS
(defrule
	(current-age == imperial-age)
    (population-headroom == 0)
    (housing-headroom == 0)
    (wood-amount > 1000)(food-amount > 1000)(gold-amount > 1000)
    (game-time > 2100); 35 min
    (unit-type-count skirmisher-line > 0)
    (can-train hand-cannoneer)    
=>
	(delete-unit skirmisher-line)
    (train hand-cannoneer)
    (chat-local-to-self "'CHANGING' SKIRMISHERS FOR HAND CANNONEERS")
)

(defrule
	(current-age == imperial-age)
    (population-headroom == 0)
    (housing-headroom == 0)
    (wood-amount > 1300)(food-amount > 1300)(gold-amount > 1300)
    (game-time > 2100); 35 min
    (not(civ-selected gothic))(not(civ-selected japanese))    
    (unit-type-count spearman-line > 0)
    (can-train knight-line)    
=>
	(delete-unit spearman)(delete-unit pikeman)(delete-unit halberdier)
    (train knight-line)
    (chat-local-to-self "'CHANGING' SPEARMEN FOR KNIGHTS")
)

(defrule
	(not	(player-in-game any-ally))
	(unit-type-count trade-cart > 0)
=>
	(delete-unit trade-cart)
)

; USER PATCH WALL
(defconst gl-point-x 500)
(defconst gl-point-y 501)
(defconst gl-other-x 502)
(defconst gl-other-y 503)
(defconst gl-wall-start-x 506)
(defconst gl-wall-start-y 507)
(defconst gl-wall-end-x 508)
(defconst gl-wall-end-y 509) ; limit constant 510

(defrule
    (true)
=>
    (set-goal gl-point-x 0)
    (set-goal gl-point-y 0)
    (set-goal gl-other-x 0)    
    (set-goal gl-other-y 0)
    (set-goal gl-wall-start-x 0)
    (set-goal gl-wall-start-y 0)
    (set-goal gl-wall-end-x 0)
    (set-goal gl-wall-end-y 0)    
    (disable-self)  
)

(defrule
    (true)
=>
    (up-get-point position-self gl-point-x)    ; the next constant y gets auto filled 
    (up-chat-data-to-self "MY POS X = %d" g: gl-point-x)
    (up-chat-data-to-self "MY POS Y = %d" g: gl-point-y)  
    (disable-self)   
)

(defrule
    (true)
=>  
    (up-chat-data-to-self "MY POS X = %d" g: gl-point-x)
    (up-chat-data-to-self "MY POS Y = %d" g: gl-point-y)   
    (do-nothing)
)

(defrule
    (up-compare-goal gl-point-x > position-center)
=>
    (chat-to-all "IM AT HIGH X ZONE")(disable-self)  
)

(defrule
    (up-compare-goal gl-point-x < position-center) 
=>
    (chat-to-all "IM AT LOW X ZONE")(disable-self)  
)

(defrule
    (up-compare-goal gl-point-y > position-center)
=>
    (chat-to-all "IM AT HIGH Y ZONE")(disable-self)  
)

(defrule
    (up-compare-goal gl-point-y < position-center) 
=>
    (chat-to-all "IM AT LOW Y ZONE")(disable-self)  
)
; ----
(defrule
    (up-compare-goal gl-point-x > position-center)
    (up-compare-goal gl-point-y > position-center)
=>
    (chat-to-all "IM AT HIGH X ZONE AND HIGH Y")
    (set-goal gl-wall-start-x 90)
    (set-goal gl-wall-start-y 90)
    (set-goal gl-wall-end-x 90)
    (set-goal gl-wall-end-y 90)(disable-self)    
)

(defrule
    (up-compare-goal gl-point-x < position-center)
    (up-compare-goal gl-point-y > position-center) 
=>
    (chat-to-all "IM AT LOW X ZONE AND HIGH Y ")
    (set-goal gl-wall-start-x 30)
    (set-goal gl-wall-start-y 90)
    (set-goal gl-wall-end-x 30)
    (set-goal gl-wall-end-y 90)
    (disable-self)  
)

(defrule
    (up-compare-goal gl-point-x > position-center)
    (up-compare-goal gl-point-y < position-center)
=>
    (chat-to-all "IM AT HIGH X ZONE AND LOW Y")
    (set-goal gl-wall-start-x 90)
    (set-goal gl-wall-start-y 30)
    (set-goal gl-wall-end-x 90)
    (set-goal gl-wall-end-y 30)    
    (disable-self)  
)

(defrule
    (up-compare-goal gl-point-x < position-center)
    (up-compare-goal gl-point-y < position-center) 
=>
    (chat-to-all "IM AT LOW X ZONE AND LOW Y")
    (set-goal gl-wall-start-x 30)
    (set-goal gl-wall-start-y 90)
    (set-goal gl-wall-end-x 30)
    (set-goal gl-wall-end-y 90)    
    (disable-self)  
)


(defrule
    (up-can-build-line gl-wall-start-x gl-wall-end-x c: palisade-wall)
=>
    (up-build-line gl-wall-start-x gl-wall-end-x c: palisade-wall)
    (chat-local-to-self "BUILDING THE WALL!")    
)

(defrule
    (building-type-count-total 793 < 3)
    ;(up-can-build-line gl-point-y gl-other-y c: 793)
=>
    ;(up-build-line gl-point-y gl-other-y c: palisade-gate)
    ;(up-build-line gl-point-y gl-other-y c: 798)    ;diagonal left-right
    ;(up-build-line gl-point-y gl-other-y c: 801)    ;diagonal north-south   
    ;(up-build-line gl-point-y gl-other-y c: 789)    ;along y axis
    ;(up-build-line gl-point-y gl-other-y c: 793)    ;along x axis
    ;(chat-to-player my-player-number "BUILDING THE GATES TO THE WALL FRONT")
    (do-nothing)
)