; CONSTANTS A, 1 TO 300: IMPORTANT STUFF, BUILDING, MILITARY

(defconst randomNumber 1)

; 2 TO 20: CIV CHARACTERISTICS
(defconst civNeedsArchersSoon 2)
(defconst civNeedsCavalrySoon 3)
(defconst civNeedsMonastery 4)
(defconst civHasGunpowderBonus 5)

; 20 TO 50: ATTACK - DEFENSE
(defconst weAreAttacking 20)

; 50 TO 60: DETECTING OUR BUILDINGS
(defconst weMovedPlace 50) ;for experimental move to the coast tactic
(defconst weHaveTownCenterAndWoodForLC 51)
(defconst weHaveBarracksAndSomeVillagers 52)
(defconst weHaveArcheryOrStableAndSomeSoldiers 53)


; END OF CONSTANTS DECLARATION ---------------------------------

; SETTING  CONSTANTS

(defrule
    (or     (or(civ-selected aztec)(civ-selected mayan))
            (or(civ-selected italian)(civ-selected korean)))
=>
    (set-goal civNeedsArchersSoon 1)(disable-self)
)
(defrule
    (or     (or(civ-selected bulgarians)(civ-selected bulgarians))
            (or(civ-selected bulgarians)(civ-selected bulgarians)))
=>
    (set-goal civNeedsCavalrySoon 1)(disable-self)
)


(defrule
    (true)
=>
    (set-goal weMovedPlace 0)
    (set-goal weAreAttacking 0)
    (set-goal maximumSoldiersFeudal 30)
    (set-goal totalSoldiersCreatedThisAge 0)
    (set-goal nonUpgradedUniqueUnitsCreated 0)
    (disable-self)
)
(defrule
    (current-age == castle-age)
=>
    (set-goal totalSoldiersCreatedThisAge 0)
    (disable-self)
)
(defconst civPop 300)
(defrule
	(true)
=>
	(up-get-fact civilian-population 0 civPop)
)
(defconst buildCount 301)
(defrule
	(true)
=>
	(up-get-fact building-count 0 buildCount)
)
(defconst milPop 330)
(defrule
	(true)
=>
	(up-get-fact military-population 0 milPop)
)
(defconst enemyBuildingsInTown 331)
(defrule
	(true)
=>
	(up-get-fact enemy-buildings-in-town 0 enemyBuildingsInTown)
)
(defconst infantrySoldierAmount 332)
(defrule
	(true)
=>
	(up-get-fact soldier-count 0 infantrySoldierAmount)
)
(defconst attackSoldierAmount 333)
(defrule
	(true)
=>
	(up-get-fact attack-soldier-count 0 attackSoldierAmount)
)
(defconst defendSoldierAmount 334)
(defrule
	(true)
=>
	(up-get-fact defend-soldier-count 0 defendSoldierAmount)
)
(defconst warboatAmount 335)
(defrule
	(true)
=>
	(up-get-fact warboat-count 0 warboatAmount)
)
(defconst attackWarboatAmount 336)
(defrule
	(true)
=>
	(up-get-fact attack-warboat-count 0 attackWarboatAmount)
)
(defconst defendWarboatAmount 337)
(defrule
	(true)
=>
	(up-get-fact defend-warboat-count 0 defendWarboatAmount)
)

; wall constants
(defrule
    (true)
=>
    (set-goal posMapSizeX 0)
    (set-goal posMapSizeY 0)
    (set-goal mapSizeThird 0)
    (set-goal mapSizeTwoThirds 0)
    (set-goal mapSizeTenth 0)
    (set-goal mapSizeNineTenths 0)
    (set-goal maxDimensionOfMap 0)
    (set-goal myPositionX 0)
    (set-goal myPositionY 0)
    (set-goal posXisHigh 40)
    (set-goal posXisMed 0)
    (set-goal posXisLow 0)
    (set-goal posYisHigh 40)
    (set-goal posYisMed 0)
    (set-goal posYisLow 0)
    (set-goal posQuadrantCode 0)
    (disable-self)
)
(defrule
    (true)
=>
    (set-goal outerWallPerimeter 12)
    (set-goal innerWallPerimeter 10)
    (set-goal outerWallPoint1X 0)
    (set-goal outerWallPoint1Y 0)
    (set-goal outerWallPoint2X 0)
    (set-goal outerWallPoint2Y 0)
    (set-goal outerWallPoint3X 0)
    (set-goal outerWallPoint3Y 0)
    (set-goal outerWallPoint4X 0)
    (set-goal outerWallPoint4Y 0)
    (set-goal outerGatePoint1X 0)
    (set-goal outerGatePoint1Y 0)
    (set-goal outerGatePoint2X 0)
    (set-goal outerGatePoint2Y 0)
    (set-goal outerGatePoint3X 0)
    (set-goal outerGatePoint3Y 0)
    (set-goal outerGatePoint4X 0)
    (set-goal outerGatePoint4Y 0)
    (disable-self)
)
(defrule
    (true)
=>
    (set-goal innerWallPoint1X 0)
    (set-goal innerWallPoint1Y 0)
    (set-goal innerWallPoint2X 0)
    (set-goal innerWallPoint2Y 0)
    (set-goal innerWallPoint3X 0)
    (set-goal innerWallPoint3Y 0)
    (set-goal innerWallPoint4X 0)
    (set-goal innerWallPoint4Y 0)
    (set-goal innerGatePoint1X 0)
    (set-goal innerGatePoint1Y 0)
    (set-goal innerGatePoint2X 0)
    (set-goal innerGatePoint2Y 0)
    (set-goal innerGatePoint3X 0)
    (set-goal innerGatePoint3Y 0)
    (set-goal innerGatePoint4X 0)
    (set-goal innerGatePoint4Y 0)
    (set-goal innerSecGatePoint1X 0)
    (set-goal innerSecGatePoint1Y 0)
    (set-goal innerSecGatePoint2X 0)
    (set-goal innerSecGatePoint2Y 0)
    (set-goal innerSecGatePoint3X 0)
    (set-goal innerSecGatePoint3Y 0)
    (set-goal innerSecGatePoint4X 0)
    (set-goal innerSecGatePoint4Y 0)
    (disable-self)
)
(defrule
    (true)
=>
    (set-goal buildNorthEastMainGates 0)
    (set-goal buildSouthEastMainGates 0)
    (set-goal buildNorthWestMainGates 0)
    (set-goal buildSouthWestMainGates 0)
    (set-goal dontBuildNorthEastWall 0)
    (set-goal dontBuildSouthEastWall 0)
    (set-goal dontBuildNorthWestWall 0)
    (set-goal dontBuildSouthWestWall 0)
    (set-goal buildingInnerWall 0)




    (set-goal gotNorthEastPalisadeGates 0)
    (set-goal gotSouthEastPalisadeGates 0)
    (set-goal gotSouthWestPalisadeGates 0)
    (set-goal gotNorthWestPalisadeGates 0)
    (set-goal gotNorthEastStoneGates 0)
    (set-goal gotSouthEastStoneGates 0)
    (set-goal gotSouthWestStoneGates 0)
    (set-goal gotNorthWestStoneGates 0)
    (set-goal buildingOuterWall 0)
    (disable-self)
)
